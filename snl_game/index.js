System.register("chunks:///_virtual/AnimationPoints.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(t){var n,i,o,e,r,s,a,c,l;return{setters:[function(t){n=t.applyDecoratedDescriptor,i=t.inheritsLoose,o=t.initializerDefineProperty,e=t.assertThisInitialized},function(t){r=t.cclegacy,s=t._decorator,a=t.Node,c=t.Vec3,l=t.Component}],execute:function(){var p,u,h,f,d;r._RF.push({},"f64a4ejfddOaqI912DeYFyJ","AnimationPoints",void 0);var g=s.ccclass,y=s.property;t("AnimationPoints",(p=g("AnimationPoints"),u=y([a]),p((d=n((f=function(t){function n(){for(var n,i=arguments.length,r=new Array(i),s=0;s<i;s++)r[s]=arguments[s];return n=t.call.apply(t,[this].concat(r))||this,o(n,"points",d,e(n)),n}i(n,t);var r=n.prototype;return r.start=function(){this.log(this.node.name+" totalLength ",this.getTotalLength())},r.getTotalLength=function(){for(var t=0,n=0;n<this.points.length-1;n++)t+=c.distance(this.points[n].worldPosition,this.points[n+1].worldPosition);return t},n}(l)).prototype,"points",[u],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),h=f))||h));r._RF.pop()}}}));

System.register("chunks:///_virtual/AnimationTag.ts",["cc"],(function(n){var t;return{setters:[function(n){t=n.cclegacy}],execute:function(){t._RF.push({},"90168lqwnVJyLTSOAGWOMEA","AnimationTag",void 0);n("AnimationTag",function(n){return n[n.DICE_ROLL=0]="DICE_ROLL",n[n.PIECE_MOVE=1]="PIECE_MOVE",n}({}));t._RF.pop()}}}));

System.register("chunks:///_virtual/AudioManager.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(i){var e,o,t,n,a,u,r,l,s,d,c,p,h,f,b,y;return{setters:[function(i){e=i.applyDecoratedDescriptor,o=i.inheritsLoose,t=i.initializerDefineProperty,n=i.assertThisInitialized,a=i.createClass},function(i){u=i.cclegacy,r=i._decorator,l=i.CCString,s=i.AudioClip,d=i.CCFloat,c=i.CCBoolean,p=i.AudioSource,h=i.Prefab,f=i.sys,b=i.instantiate,y=i.Component}],execute:function(){var g,A,S,C,m,E,v,P,w,I,D,L,z,k,_,B,M,T,x,F,N,R,G;u._RF.push({},"d6dd5rG3ZND4Ym1IhN3DN2n","AudioManager",void 0);var K=r.ccclass,U=r.property,W=(g=K("AudioClipData"),A=U({type:l}),S=U({type:s}),C=U({type:d}),m=U({type:d}),E=U({type:c}),g((w=e((P=function(){function i(){t(this,"name",w,this),t(this,"audioClips",I,this),t(this,"delayBetweenClips",D,this),t(this,"volume",L,this),t(this,"loop",z,this),this.isLoopPlaying=void 0,this.lastPlayedTime=0,this.clipIndex=0}var e=i.prototype;return e.GetClip=function(){var i=this.audioClips[this.clipIndex];if(this.clipIndex=(this.clipIndex+1)%this.audioClips.length,this.CanPlay())return this.lastPlayedTime=Date.now(),i},e.CanPlay=function(){return Date.now()-this.lastPlayedTime>1e3*this.delayBetweenClips},i}()).prototype,"name",[A],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),I=e(P.prototype,"audioClips",[S],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),D=e(P.prototype,"delayBetweenClips",[C],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),L=e(P.prototype,"volume",[m],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),z=e(P.prototype,"loop",[E],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),v=P))||v);i("AudioManager",(k=K("AudioManager"),_=U({type:W}),B=U({type:p}),M=U({type:h}),k(((G=function(i){function e(){for(var e,o=arguments.length,a=new Array(o),u=0;u<o;u++)a[u]=arguments[u];return e=i.call.apply(i,[this].concat(a))||this,t(e,"audioClipData",F,n(e)),t(e,"backgroundAudioSource",N,n(e)),e.localStorageAudioEnabledKey="SNLAudioEnabled",t(e,"audioSourcePrefab",R,n(e)),e.audioSources=[],e._isAudioEnabled="true",e}o(e,i);var u=e.prototype;return u.onLoad=function(){e.instance=this,this.ReadAudioEnabledFromLocalStorage()},u.start=function(){this.SetAudioEnabled(this.IsAudioEnabled)},u.playSound=function(i){if("false"!=this.IsAudioEnabled){var e=this.audioClipData.find((function(e){return e.name==i}));if(null!=e){var o=e.GetClip();if(o){if(e.isLoopPlaying)return;var t=this.getEmptyAudioSource();t.loop=e.loop,e.isLoopPlaying=e.loop,t.volume=e.volume,t.clip=o,e.loop?t.play():t.playOneShot(o)}else console.warn("Audio Clip is in use ",i)}}},u.stopSound=function(i){var e=this.audioClipData.find((function(e){return e.name==i}));e?this.audioSources.forEach((function(i){i.clip==e.audioClips[e.clipIndex]&&(e.isLoopPlaying=!1,i.stop())})):console.warn("Audio Clip not found for ",i)},u.stopAllSounds=function(){this.audioSources.forEach((function(i){i.stop()})),this.audioClipData.forEach((function(i){i.isLoopPlaying=!1}))},u.ToggleAudio=function(){"true"==this.IsAudioEnabled?this.SetAudioEnabled("false"):this.SetAudioEnabled("true")},u.SetAudioEnabled=function(i){this._isAudioEnabled=i,this.UpdateBackgroundMusic(),this.WriteAudioEnabledToLocalStorage()},u.WriteAudioEnabledToLocalStorage=function(){f.localStorage.setItem(this.localStorageAudioEnabledKey,this.IsAudioEnabled)},u.ReadAudioEnabledFromLocalStorage=function(){var i=f.localStorage.getItem(this.localStorageAudioEnabledKey);this._isAudioEnabled=null==i?"true":i},u.UpdateBackgroundMusic=function(){var i,e;"true"==this.IsAudioEnabled?null==(i=this.backgroundAudioSource)||i.play():null==(e=this.backgroundAudioSource)||e.stop()},u.printAllPlayingAudioSources=function(){this.audioSources.forEach((function(i){i.playing&&console.log("Playing audio source: ",i.playing,i.clip.name,i.uuid)}))},u.getEmptyAudioSource=function(){var i=this.audioSources.find((function(i){return!i.playing}));return null==i&&(i=this.createAudioSource()),i},u.createAudioSource=function(){var i=b(this.audioSourcePrefab).getComponent(p);return i.node.setParent(this.node),this.audioSources.push(i),console.log("==== Created new audio source: ",this.audioSources.length),i},a(e,[{key:"IsAudioEnabled",get:function(){return this._isAudioEnabled}}]),e}(y)).instance=null,F=e((x=G).prototype,"audioClipData",[_],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),N=e(x.prototype,"backgroundAudioSource",[B],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),R=e(x.prototype,"audioSourcePrefab",[M],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),T=x))||T));u._RF.pop()}}}));

System.register("chunks:///_virtual/AutoReturnToPool.ts",["./rollupPluginModLoBabelHelpers.js","cc","./PoolManager.ts"],(function(o){var t,e,n,r,i,u,l,a,s,c;return{setters:[function(o){t=o.applyDecoratedDescriptor,e=o.inheritsLoose,n=o.initializerDefineProperty,r=o.assertThisInitialized},function(o){i=o.cclegacy,u=o._decorator,l=o.CCFloat,a=o.CCBoolean,s=o.Component},function(o){c=o.PoolManager}],execute:function(){var p,h,f,y,T,P,d;i._RF.push({},"b8528MASuNNfaQ5ichR7O7T","AutoReturnToPool",void 0);var b=u.ccclass,R=u.property;o("AutoReturnToPool",(p=b("AutoReturnToPool"),h=R({type:l}),f=R({type:a}),p((P=t((T=function(o){function t(){for(var t,e=arguments.length,i=new Array(e),u=0;u<e;u++)i[u]=arguments[u];return t=o.call.apply(o,[this].concat(i))||this,n(t,"timeToReturnToPool",P,r(t)),n(t,"shouldDestroy",d,r(t)),t}e(t,o);var i=t.prototype;return i.onEnable=function(){this.scheduleOnce(this.returnToPool,this.timeToReturnToPool)},i.start=function(){},i.update=function(o){},i.returnToPool=function(){c.instance.returnObjectToPool(this.node),this.shouldDestroy&&this.node.destroy()},t}(s)).prototype,"timeToReturnToPool",[h],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 3}}),d=t(T.prototype,"shouldDestroy",[f],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),y=T))||y));i._RF.pop()}}}));

System.register("chunks:///_virtual/BasePlayerData.ts",["cc"],(function(i){var s;return{setters:[function(i){s=i.cclegacy}],execute:function(){s._RF.push({},"60e44rkaE5OIKOZLKYMMeH8","BasePlayerData",void 0);i("BasePlayerData",function(){function i(){this.userId=void 0,this.name=void 0,this.avatar=void 0,this.sessionId=void 0,this.playerNumber=void 0,this.type=void 0,this.isOnline=void 0,this.isConnected=void 0,this.isReplacedByBot=void 0,this.isKickedOut=void 0,this.isReady=void 0,this.score=void 0}return i.prototype.copyFrom=function(i){this.userId=i.userId,this.name=i.name,this.avatar=i.avatar,this.sessionId=i.sessionId,this.playerNumber=i.playerNumber,this.type=i.type,this.isOnline=i.isOnline,this.isConnected=i.isConnected,this.isReplacedByBot=i.isReplacedByBot,this.isKickedOut=i.isKickedOut,this.isReady=i.isReady,this.score=i.score},i}());s._RF.pop()}}}));

System.register("chunks:///_virtual/BaseRoomSettings.ts",["cc"],(function(e){var t;return{setters:[function(e){t=e.cclegacy}],execute:function(){t._RF.push({},"7d295AJeYlB6oF09YbVxrO5","BaseRoomSettings",void 0);e("DefaultRoomSettings",{maxPlayers:8,minPlayers:2,maxClients:8,countdownTimeInSeconds:3,allowLateJoin:!0,maxReconnectionAttempts:3,reconnectionAttemptInterval:1e3,reconnectionTime:1e4,gameFPS:30,serverFPS:30,patchRate:1e3}),e("BaseRoomSettings",function(){function e(){this.maxPlayers=void 0,this.minPlayers=void 0,this.maxClients=void 0,this.countdownTimeInSeconds=void 0,this.allowLateJoin=void 0,this.maxReconnectionAttempts=void 0,this.reconnectionAttemptInterval=void 0,this.reconnectionTime=void 0,this.gameFPS=void 0,this.serverFPS=void 0,this.patchRate=void 0}return e.prototype.copyFrom=function(e){this.maxPlayers=e.maxPlayers,this.minPlayers=e.minPlayers,this.maxClients=e.maxClients,this.countdownTimeInSeconds=e.countdownTimeInSeconds,this.allowLateJoin=e.allowLateJoin,this.reconnectionTime=e.reconnectionTime,this.gameFPS=e.gameFPS,this.serverFPS=e.serverFPS,this.patchRate=e.patchRate},e}());t._RF.pop()}}}));

System.register("chunks:///_virtual/BaseRoomState.ts",["cc","./RoomTypes.ts"],(function(t){var o,s;return{setters:[function(t){o=t.cclegacy},function(t){s=t.RoomStatus}],execute:function(){o._RF.push({},"0c106cYyz1FiYiF/X5Wyp5E","BaseRoomState",void 0);t("BaseRoomState",function(){function t(t,o){this.currentRoomStatus=s.WAITING_FOR_PLAYERS,this.previousRoomStatus=s.NONE,this.roomSettings=void 0,this.playersData=void 0,this.spectatorsData=void 0,this.roomSettings=t,this.playersData=o,this.spectatorsData=[]}return t.prototype.copyFrom=function(t){this.currentRoomStatus=t.currentRoomStatus,this.previousRoomStatus=t.previousRoomStatus,this.roomSettings.copyFrom(t.roomSettings)},t}());o._RF.pop()}}}));

System.register("chunks:///_virtual/Board.ts",["./rollupPluginModLoBabelHelpers.js","cc","./NetworkManager.ts","./Piece.ts","./SNLTileType.ts","./PowerUp.ts","./PlayerAssets.ts","./AnimationPoints.ts","./PlayerService.ts"],(function(e){var t,n,i,r,s,o,a,u,l,p,h,c,f,d,P,m,b,g,y;return{setters:[function(e){t=e.applyDecoratedDescriptor,n=e.initializerDefineProperty,i=e.inheritsLoose,r=e.assertThisInitialized,s=e.createClass},function(e){o=e.cclegacy,a=e._decorator,u=e.Node,l=e.Vec2,p=e.instantiate,h=e.Vec3,c=e.Component},function(e){f=e.NetworkManager},function(e){d=e.Piece},function(e){P=e.SNLTileType},function(e){m=e.PowerUp},function(e){b=e.PlayerAssets},function(e){g=e.AnimationPoints},function(e){y=e.PlayerService}],execute:function(){var T,w,v,N,k,O,S,A,U,I,x,L,z,C,_,B,D,F,E,M,R,V,G,K;o._RF.push({},"196c05PnZtKy7Ysi9gBFrzG","Board",void 0);var H=a.ccclass,W=a.property,j=(T=H("HomeTiles"),w=W({type:[u]}),T((k=t((N=function(){n(this,"homeTiles",k,this)}).prototype,"homeTiles",[w],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),v=N))||v),Y=e("Snake",H("Snake")(O=function(e,t,n){this.data=void 0,this.animationPoints=void 0,this.node=null,this.data=e,this.node=t,this.animationPoints=n})||O);e("Board",(S=H("Board"),A=W({type:[u]}),U=W({type:[j]}),I=W({type:l}),x=W({type:u}),L=W({type:u}),z=W({type:u}),C=W({type:u}),S(((K=function(e){function t(){for(var t,i=arguments.length,s=new Array(i),o=0;o<i;o++)s[o]=arguments[o];return t=e.call.apply(e,[this].concat(s))||this,n(t,"pathTiles",D,r(t)),n(t,"homeTiles",F,r(t)),n(t,"powerupOffsetFromTileCenter",E,r(t)),n(t,"rotationPivot",M,r(t)),n(t,"boardSpriteNode",R,r(t)),n(t,"snakesAndLaddersParent",V,r(t)),n(t,"powerupsParent",G,r(t)),t._initialOffset=0,t._isInitialized=!1,t.gameOptions=null,t.rocketSteps=8,t.tileTypes=[],t.pieces=[],t.powerUps=[],t.snakesData=[],t.ladders=[],t.snakesAnimationPoints=[],t.laddersAnimationPoints=[],t.snakes=[],t}i(t,e);var o=t.prototype;return o.onLoad=function(){null==t._instance?(t._instance=this,this._initialOffset=26):this.node.destroy()},o.onDestroy=function(){t._instance===this&&(t._instance=null)},o.Initialize=function(e){if(!this._isInitialized){this.gameOptions=e.gameOptions;var t=e.playersData.find((function(e){return e.sessionId==f.Instance.getMySessionId()}));null!=t&&this.rotationPivot.setRotationFromEuler(0,0,180+90*this.getPlayerPositionOnBoard(t.playerNumber)),this._isInitialized=!0,this.rocketSteps=this.gameOptions.rocketSteps,null!=t&&console.log("Creating board preset for player ",t.playerNumber),this.createTiles(e),this.createLadders(e),this.createSnakes(e)}},o.reset=function(e){this.createTiles(e)},o.createTiles=function(e){this.tileTypes=[];for(var t=0;t<e.board.boardTiles.length;t++)this.tileTypes.push(e.board.boardTiles[t]);this.createPowerups()},o.createSnakes=function(e){var t=e.board.snakes;console.log("[Snakes] snakes count: ",t.length);for(var n=0;n<t.length;n++){var i=t[n],r=b.instance.snakePrefabs[i.snakePresetIndex],s=p(r);s.setParent(this.snakesAndLaddersParent,!0);var o=this.pathTiles[i.startTile-1];s.setWorldPosition(o.worldPosition.clone()),s.setScale(1,1,1),this.snakesData.push(i);var a=s.getComponent(g);this.snakesAnimationPoints.push(a),this.snakes.push(new Y(i,s,a))}console.log("[Snakes] snakes animation points count: ",this.snakesAnimationPoints.length)},o.createLadders=function(e){for(var t=e.board.ladders,n=0;n<t.length;n++){var i=t[n],r=b.instance.ladderPrefabs[i.ladderPresetIndex],s=p(r);s.setParent(this.snakesAndLaddersParent,!0);var o=this.pathTiles[i.startTile-1];s.setWorldPosition(o.worldPosition.clone()),s.setScale(1,1,1),this.ladders.push(i),this.laddersAnimationPoints.push(s.getComponent(g))}},o.createPowerups=function(){for(var e=[],t=0;t<this.tileTypes.length;t++)for(var n=0;n<this.gameOptions.PowerupTypes.length;n++)if(this.tileTypes[t]&this.gameOptions.PowerupTypes[n]){var i=this.popPowerupON(t);if(null!=i){e.push(i);break}var r=p(b.instance.powerUpPrefab).getComponent(m);r.node.setParent(this.powerupsParent,!0),r.node.worldPosition=this.pathTiles[t-1].worldPosition.clone().add(new h(0,-15,0)),r.setPathNumber(t),r.setPowerUpType(this.tileTypes[t]),e.push(r);break}for(var s=0;s<this.powerUps.length;s++)this.powerUps[s].node.destroy();this.powerUps=e},o.popPowerupON=function(e){var t=this.powerUps.findIndex((function(t){return t.pathNumber===e}));if(-1!==t){var n=this.powerUps[t];return this.powerUps.splice(t,1),n}return null},o.getPowerUpType=function(e){for(var t=this.tileTypes[e.pathNumber],n=0;n<this.gameOptions.PowerupTypes.length;n++)if(t&this.gameOptions.PowerupTypes[n])return this.gameOptions.PowerupTypes[n];return P.DEFAULT},o.getPowerupNode=function(e){var t=this.powerUps.find((function(t){return t.pathNumber===e.pathNumber}));return t?t.node:null},o.removePowerUp=function(e){this.tileTypes[e.pathNumber]=P.DEFAULT;var t=this.powerUps.indexOf(e);-1!==t&&this.powerUps.splice(t,1),e.node.destroy()},o.removePowerUpByPathNumber=function(e){this.tileTypes[e]=P.DEFAULT;var t=this.powerUps.findIndex((function(t){return t.pathNumber===e}));-1!==t&&(this.powerUps[t].node.destroy(),this.powerUps.splice(t,1))},o.getPathTile=function(e,t,n){if(0===e)return this.getPlayerBase(t);var i=this.getGlobalTileIndex(e,t);return this.pathTiles[i]},o.getPathPositions=function(e,t,n,i){var r=[],s=null;if(0===t){for(var o=e;o>=0;o--)(s=this.getPathTile(o,n,i))||console.error("Path tile not found for path number: ",o," player number: ",n," piece index: ",i),r.push(s.worldPosition.clone());return console.log("Piece going to home: path positions length ",r.length," start path number: ",e," end path number: ",t),r}for(var a=e;a<=t;a++)null!=(s=this.getPathTile(a,n,i))&&r.push(s.worldPosition.clone());return r},o.getGlobalTileIndex=function(e,t){return e-1},o.isValidPathNumber=function(e,t){return e>=1&&e<=this.TotalPathCount(this.gameOptions)},o.TotalPathCount=function(e){return e.boardTilesCount},o.isSafeTile=function(e){return(this.tileTypes[e]&P.SAFE)>0},o.isPathOccupied=function(e,t){return 0!==e&&this.pieces.some((function(e){return e.pathNumber===t.pathNumber&&e!==t}))},o.getPawnsCountOnTile=function(e){return 0===e?0:this.pieces.filter((function(t){return t.pathNumber===e})).length},o.getPawnsOnTile=function(e){return 0===e?[]:this.pieces.filter((function(t){return t.pathNumber===e}))},o.canKillOtherPieces=function(e,t,n){if(e<=0)return!1;if(this.isSafeTile(e))return!1;var i=this.getPathTile(e,t,n);return!(i.children.length>=3)&&i.children.some((function(e){return e.getComponent(d).playerNumber!==t}))},o.piecesOnTile=function(e,t){return e<=0?0:this.pieces.filter((function(t){return t.pathNumber===e})).length},o.getKillablePieces=function(e){if(e.pathNumber<=0)return null;if(this.isSafeTile(e.pathNumber))return null;var t=this.pieces.filter((function(t){return t!==e&&t.pathNumber===e.pathNumber}));if(1===t.length){var n=t[0];if(n.playerNumber!==e.playerNumber)return n}return null},o.doesEnemyExist=function(e,t){return!(0===t||t>this.TotalPathCount(this.gameOptions))&&this.pieces.some((function(t){return t.pathNumber===e.pathNumber&&t.playerNumber!==e.playerNumber}))},o.doesAnyPieceExistOnPath=function(e,t){return!(0===t||t>this.TotalPathCount(this.gameOptions))&&this.pieces.some((function(n){return n!==e&&n.pathNumber===t}))},o.getRocketLandingPathNumber=function(e){for(var t=e.pathNumber,n=0;n<this.rocketSteps;n++){if(!this.isValidPathNumber(t+1,e.playerNumber))return console.log("Invalid Path Number: ",t+1),t;t+=1}return t},o.getPlayerPositionOnBoard=function(e){return[0,2,3,1][e]||0},o.getPlayerBase=function(e){return y.instance.getPlayerBase(e)},o.getPlayerPiece=function(e,t){return y.instance.getPlayerPiece(e,t)},o.addPieces=function(e){var t;(t=this.pieces).push.apply(t,e)},o.addPiece=function(e){this.pieces.push(e)},o.updateAllPiecePositions=function(){this.pieces.forEach((function(e){return e.updatePiecePosition()}))},o.getLadderAnimationPoints=function(e){var t=this.ladders.findIndex((function(t){return t.ladderPresetIndex===e}));return this.laddersAnimationPoints[t]},o.getSnakeAnimationPoints=function(e){var t=this.snakesData.findIndex((function(t){return t.snakePresetIndex===e}));return this.snakesAnimationPoints[t]},o.getSnake=function(e){var t=this.snakesData.findIndex((function(t){return t.snakePresetIndex===e}));return this.snakes[t]},s(t,null,[{key:"Instance",get:function(){return t._instance}}]),t}(c))._instance=null,D=t((B=K).prototype,"pathTiles",[A],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),F=t(B.prototype,"homeTiles",[U],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),E=t(B.prototype,"powerupOffsetFromTileCenter",[I],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new l(0,0)}}),M=t(B.prototype,"rotationPivot",[x],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),R=t(B.prototype,"boardSpriteNode",[L],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),V=t(B.prototype,"snakesAndLaddersParent",[z],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),G=t(B.prototype,"powerupsParent",[C],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),_=B))||_));o._RF.pop()}}}));

System.register("chunks:///_virtual/BoardData.ts",["cc"],(function(e){var t;return{setters:[function(e){t=e.cclegacy}],execute:function(){e("GetEndTile",(function(e,t,s,r,n){var a=Math.floor((e-1)/n),l=(e-1)%n;a%2==1&&(l=n-1-l);var f,d=a+s,x=l+t;if(d<0||d>=Math.ceil(r/n)||x<0||x>=n)return-1;f=d%2==0?d*n+x+1:d*n+(n-1-x)+1;if(f<1||f>r)return-1;return f})),t._RF.push({},"4c8040DtehCyKDwSV/WMDFA","BoardData",void 0);e("SnakePresets",[{offset:{x:-2,y:-1,length:150}},{offset:{x:-2,y:-3,length:450}},{offset:{x:1,y:-2,length:300}},{offset:{x:1,y:-5,length:750}},{offset:{x:0,y:-4,length:600}},{offset:{x:-1,y:-1,length:150}}]),e("LadderPresets",[{offset:{x:1,y:1,length:144}},{offset:{x:1,y:2,length:282}},{offset:{x:-1,y:3,length:424}},{offset:{x:0,y:5,length:604}},{offset:{x:-1,y:5,length:604}},{offset:{x:1,y:1,length:144}}]),e("boardsData",[{snakes:[{startTile:9,snakePresetIndex:0},{startTile:27,snakePresetIndex:1},{startTile:46,snakePresetIndex:2},{startTile:49,snakePresetIndex:3},{startTile:57,snakePresetIndex:4},{startTile:61,snakePresetIndex:5}],ladders:[{startTile:3,ladderPresetIndex:0},{startTile:14,ladderPresetIndex:1},{startTile:21,ladderPresetIndex:2},{startTile:10,ladderPresetIndex:4},{startTile:53,ladderPresetIndex:5}]}]);t._RF.pop()}}}));

System.register("chunks:///_virtual/BotMadeMoveScreen.ts",["./rollupPluginModLoBabelHelpers.js","cc","./Menu.ts","./UIManager.ts","./NetworkManager.ts","./GameMessageType.ts"],(function(e){var n,t,o,i,a,c,r,s;return{setters:[function(e){n=e.inheritsLoose},function(e){t=e.cclegacy,o=e._decorator,i=e.Node},function(e){a=e.Menu},function(e){c=e.UIManager},function(e){r=e.NetworkManager},function(e){s=e.GameMessageType}],execute:function(){var u;t._RF.push({},"8bf62lwnZ1EdI/X4433nllf","BotMadeMoveScreen",void 0);var l=o.ccclass;o.property,e("BotMadeMoveScreen",l("BotMadeMoveScreen")(u=function(e){function t(){for(var n,t=arguments.length,o=new Array(t),i=0;i<t;i++)o[i]=arguments[i];return(n=e.call.apply(e,[this].concat(o))||this)._timer=0,n}n(t,e);var o=t.prototype;return o.onLoad=function(){e.prototype.onLoad.call(this),this.content.on(i.EventType.TOUCH_START,this.OnClick,this)},o.onDestroy=function(){},o.Open=function(){e.prototype.Open.call(this),this._timer=0},o.Close=function(){e.prototype.Close.call(this)},o.initHandTween=function(){},o.initialization=function(){this.initHandTween()},o.OnClick=function(){r.Instance.sendMessage(s.PLAYER_CAMEBACK,{}),c.instance.CloseMenu(this.menuName)},t}(a))||u);t._RF.pop()}}}));

System.register("chunks:///_virtual/CameraManger.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(e){var t,i,r,n,a,o,h,s,c,d,u,l,g;return{setters:[function(e){t=e.applyDecoratedDescriptor,i=e.inheritsLoose,r=e.initializerDefineProperty,n=e.assertThisInitialized},function(e){a=e.cclegacy,o=e._decorator,h=e.UITransform,s=e.Camera,c=e.screen,d=e.sys,u=e.view,l=e.math,g=e.Component}],execute:function(){var p,f,w,m,H,b,S,v,y,z,O,A;a._RF.push({},"11343jiJ7pE76KcDCBuRLX6","CameraManger",void 0);var C=o.ccclass,R=o.property;(0,o.executionOrder)(-1);e("CameraManger",(p=C("CameraManger"),f=R({type:h}),p(((A=function(e){function t(){for(var t,i=arguments.length,a=new Array(i),o=0;o<i;o++)a[o]=arguments[o];return t=e.call.apply(e,[this].concat(a))||this,r(t,"canvasUITransform",H,n(t)),r(t,"designHeight",b,n(t)),r(t,"designWidth",S,n(t)),r(t,"defaultOrthoHeight",v,n(t)),r(t,"minOrthoHeight",y,n(t)),r(t,"maxOrthoHeight",z,n(t)),r(t,"safeAreaPadding",O,n(t)),t.designAspectRatio=void 0,t.currentAspectRatio=void 0,t.camera=null,t.windowWidth=1080,t.windowHeight=1920,t}i(t,e);var a=t.prototype;return a.onLoad=function(){t.instance=this,this.designAspectRatio=this.designWidth/this.designHeight,this.camera=this.node.getComponent(s)},a.start=function(){var e=this;this.updateScreenSize(),this.adaptCameraToScreen(),window.addEventListener("resize",(function(){e.updateScreenSize(),e.adaptCameraToScreen()}))},a.update=function(e){},a.updateScreenSize=function(){this.windowWidth=c.windowSize.width||window.innerWidth,this.windowHeight=c.windowSize.height||window.innerHeight,this.currentAspectRatio=this.windowWidth/this.windowHeight,console.log("Window Size: "+this.windowWidth+"x"+this.windowHeight+", Aspect Ratio: "+this.currentAspectRatio.toFixed(2))},a.adaptCameraToScreen=function(){if(this.camera){var e=0,t=0,i=0,r=0;if(d.os===d.OS.IOS||d.os===d.OS.ANDROID){var n=u.getVisibleSize(),a=u.getVisibleOrigin();n&&(e=a.y,t=this.windowHeight-(a.y+n.height),i=a.x,r=this.windowWidth-(a.x+n.width))}var o=this.windowHeight-e-t-2*this.safeAreaPadding,h=this.windowWidth-i-r-2*this.safeAreaPadding,s=h/o;console.log("Effective Size: "+h+"x"+o+", Aspect Ratio: "+s.toFixed(2));var c=this.currentAspectRatio>=1,g=this.defaultOrthoHeight;if(c)console.log("=== Landscape Mode ==="),g=this.defaultOrthoHeight*(1/this.currentAspectRatio)*1.5;else{console.log("=== Portrait Mode ===");var p=.6/Math.min(this.currentAspectRatio,.6);g=this.defaultOrthoHeight*p}g=l.clamp(g,this.minOrthoHeight,this.maxOrthoHeight),this.camera.orthoHeight=g,console.log("Camera Ortho Height: "+g.toFixed(2))}},a.getWidth=function(){return 2*this.camera.orthoHeight*this.currentAspectRatio},a.getCurrentOrthoHeight=function(){return this.camera.orthoHeight},a.refreshCameraAdaptation=function(){this.updateScreenSize(),this.adaptCameraToScreen()},t}(g)).instance=null,H=t((m=A).prototype,"canvasUITransform",[f],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),b=t(m.prototype,"designHeight",[R],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1920}}),S=t(m.prototype,"designWidth",[R],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1080}}),v=t(m.prototype,"defaultOrthoHeight",[R],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 820}}),y=t(m.prototype,"minOrthoHeight",[R],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 750}}),z=t(m.prototype,"maxOrthoHeight",[R],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1080}}),O=t(m.prototype,"safeAreaPadding",[R],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 50}}),w=m))||w));a._RF.pop()}}}));

System.register("chunks:///_virtual/CountdownScreen.ts",["./rollupPluginModLoBabelHelpers.js","cc","./Menu.ts"],(function(n){var t,e,o,i,c,r,u,a,l,s,d;return{setters:[function(n){t=n.applyDecoratedDescriptor,e=n.inheritsLoose,o=n.initializerDefineProperty,i=n.assertThisInitialized},function(n){c=n.cclegacy,r=n._decorator,u=n.Label,a=n.Node,l=n.tween,s=n.Vec3},function(n){d=n.Menu}],execute:function(){var w,p,f,h,T,y,v;c._RF.push({},"7b0fe/A8CtG4KTrMSeqWdLX","CountdownScreen",void 0);var b=r.ccclass,S=r.property;n("CountdownScreen",(w=b("CountdownScreen"),p=S({type:u}),f=S({type:a}),w((y=t((T=function(n){function t(){for(var t,e=arguments.length,c=new Array(e),r=0;r<e;r++)c[r]=arguments[r];return(t=n.call.apply(n,[this].concat(c))||this)._countdownTween=null,o(t,"countdownText",y,i(t)),o(t,"blackBG",v,i(t)),t}e(t,n);var c=t.prototype;return c.onLoad=function(){n.prototype.onLoad.call(this)},c.onDestroy=function(){},c.Open=function(){n.prototype.Open.call(this),this.initialization()},c.Close=function(){n.prototype.Close.call(this),null!=this._countdownTween&&this._countdownTween.stop()},c.initCountdownTween=function(){var n=this;this.countdownText.node.active=!0,this._countdownTween=l(this.countdownText.node);for(var t=function(t){n._countdownTween.call((function(){n.countdownText.string=t.toString(),n.countdownText.node.scale=s.ONE.clone().multiplyScalar(2)})).to(1,{scale:s.ONE.clone().multiplyScalar(1)},{easing:"sineIn"})},e=3;e>=1;e--)t(e);this._countdownTween.call((function(){n.deactivateScreen()}))},c.deactivateScreen=function(){this.countdownText.string="",this.countdownText.node.active=!1,this.blackBG.active=!1},c.initialization=function(){this.initCountdownTween(),this._countdownTween.start()},t}(d)).prototype,"countdownText",[p],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),v=t(T.prototype,"blackBG",[f],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),h=T))||h));c._RF.pop()}}}));

System.register("chunks:///_virtual/DeathPopup.ts",["./rollupPluginModLoBabelHelpers.js","cc","./Board.ts","./DeathType.ts"],(function(e){var t,n,o,i,a,p,r,c,s,u,l,d,h,f,P,y,w,g;return{setters:[function(e){t=e.applyDecoratedDescriptor,n=e.inheritsLoose,o=e.initializerDefineProperty,i=e.assertThisInitialized},function(e){a=e.cclegacy,p=e._decorator,r=e.RichText,c=e.Sprite,s=e.Node,u=e.SpriteFrame,l=e.Layout,d=e.UITransform,h=e.Vec3,f=e.UIOpacity,P=e.tween,y=e.Component},function(e){w=e.Board},function(e){g=e.DeathType}],execute:function(){var T,m,I,N,D,v,S,b,x,A,C,z;a._RF.push({},"d308538PcdADqacGLKEBrlw","DeathPopup",void 0);var B=p.ccclass,L=p.property;e("DeathPopup",(T=B("DeathPopup"),m=L({type:r}),I=L({type:c}),N=L({type:s}),D=L({type:u}),T(((z=function(e){function t(){for(var t,n=arguments.length,a=new Array(n),p=0;p<n;p++)a[p]=arguments[p];return t=e.call.apply(e,[this].concat(a))||this,o(t,"deathText",b,i(t)),o(t,"deathIcon",x,i(t)),o(t,"deathPopupNode",A,i(t)),o(t,"deathIconSprites",C,i(t)),t.scaleTween=null,t.opacityTween=null,t.pendingScheduleId=null,t}n(t,e);var a=t.prototype;return a.onLoad=function(){t.instance=this},t.showDeathPopup=function(e,n,o){if(t.instance.deathPopupNode){t.instance.deathPopupNode.active=!0,t.instance.deathText.string=n,t.instance.deathIcon.spriteFrame=t.instance.getDeathIconSprite(o);var i=t.instance.deathPopupNode.getComponent(l);i&&i.updateLayout();var a=t.instance.deathPopupNode.getComponent(d);if(a){var p=t.instance.calculateAdjustedPosition(e,a,o);t.instance.deathPopupNode.setWorldPosition(p),t.instance.playDeathPopupAnimation()}else console.error("DeathPopup: Missing UITransform component on deathPopupNode")}else console.log("DeathPopup: deathPopupNode not assigned")},a.calculateAdjustedPosition=function(e,t,n){var o=w.Instance.boardSpriteNode,i=o.getComponent(d);if(!i)return console.error("DeathPopup: Board node missing UITransform component"),e;var a=o.worldPosition,p=i.width,r=a.x-.5*p,c=a.x+.5*p,s=t.width,u=e.x-.5*s,l=e.x+.5*s,f=e.x;if(u<r)f+=r-u;else if(l>c){f-=l-c}var P=.5*t.height+(n===g.SNAKE_BITE?40:50);return new h(f,e.y+P,e.z)},a.playDeathPopupAnimation=function(){var e=this;if(this.deathPopupNode){this.stopCurrentAnimation();var t=this.deathPopupNode.getComponent(f);t||(t=this.deathPopupNode.addComponent(f)),this.deathPopupNode.setScale(.75,.75,1),t.opacity=0,this.scaleTween=P(this.deathPopupNode).to(.3,{scale:new h(1,1,1)}).start(),this.opacityTween=P(t).to(.3,{opacity:255}).call((function(){e.pendingScheduleId=window.setTimeout((function(){e.scaleTween=P(e.deathPopupNode).to(.5,{scale:new h(.75,.75,1)}).start(),e.opacityTween=P(t).to(.5,{opacity:0}).call((function(){e.deathPopupNode.active=!1,e.scaleTween=null,e.opacityTween=null,e.pendingScheduleId=null})).start()}),2e3)})).start()}else console.error("DeathPopup: deathPopupNode not assigned for animation")},a.stopCurrentAnimation=function(){this.scaleTween&&(this.scaleTween.stop(),this.scaleTween=null),this.opacityTween&&(this.opacityTween.stop(),this.opacityTween=null),null!==this.pendingScheduleId&&(clearTimeout(this.pendingScheduleId),this.pendingScheduleId=null)},a.getDeathIconSprite=function(e){return this.deathIconSprites[e]},t}(y)).instance=null,b=t((S=z).prototype,"deathText",[m],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),x=t(S.prototype,"deathIcon",[I],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),A=t(S.prototype,"deathPopupNode",[N],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),C=t(S.prototype,"deathIconSprites",[D],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),v=S))||v));a._RF.pop()}}}));

System.register("chunks:///_virtual/DeathType.ts",["cc"],(function(t){var e;return{setters:[function(t){e=t.cclegacy}],execute:function(){e._RF.push({},"0d66cNXtdNPAKnltDyZs9gM","DeathType",void 0);t("DeathType",function(t){return t[t.PAWN_KILL=0]="PAWN_KILL",t[t.SNAKE_BITE=1]="SNAKE_BITE",t}({}));e._RF.pop()}}}));

System.register("chunks:///_virtual/defaultConfig.ts",["cc"],(function(e){var n;return{setters:[function(e){n=e.cclegacy}],execute:function(){n._RF.push({},"99d84UnJHVMJZDmIID3fcDv","defaultConfig",void 0);e("defaultConfig",{gameId:"unknown-game",sdkVersion:"1.0.0",debug:!1});n._RF.pop()}}}));

System.register("chunks:///_virtual/Dice.ts",["./rollupPluginModLoBabelHelpers.js","cc","./AudioManager.ts","./AnimationTag.ts"],(function(e){var i,n,t,r,o,l,c,a,s,u,p,g;return{setters:[function(e){i=e.applyDecoratedDescriptor,n=e.inheritsLoose,t=e.initializerDefineProperty,r=e.assertThisInitialized},function(e){o=e.cclegacy,l=e._decorator,c=e.SpriteFrame,a=e.Sprite,s=e.tween,u=e.Component},function(e){p=e.AudioManager},function(e){g=e.AnimationTag}],execute:function(){var f,h,d,F,D,m,y,_,v;o._RF.push({},"9cbbfOuUWVAFov9WLUAP6J+","Dice",void 0);var b=l.ccclass,w=l.property;e("Dice",(f=b("Dice"),h=w({type:[c]}),d=w({type:[c]}),F=w({type:a}),f((y=i((m=function(e){function i(){for(var i,n=arguments.length,o=new Array(n),l=0;l<n;l++)o[l]=arguments[l];return i=e.call.apply(e,[this].concat(o))||this,t(i,"diceFaces",y,r(i)),t(i,"rollingFrames",_,r(i)),t(i,"diceSprite",v,r(i)),i.onDiceRollDone=function(){},i._currentFace=0,i._rollingTween=null,i._rollDuration=.5,i}n(i,e);var o=i.prototype;return o.onLoad=function(){this._rollingTween=s(this.diceSprite.node)},o.rollDice=function(e){p.instance.playSound("DiceRoll"),this.rollAnimation(e)},o.setDiceFace=function(e){e<0||e>=this.diceFaces.length||(this._currentFace=e,this.diceSprite.spriteFrame=this.diceFaces[e])},o.rollAnimation=function(e){var i=this;this.stopRolling(),this._rollingTween=s({value:0}).to(.5,{value:13},{onUpdate:function(e){var n=Math.floor(e.value)%i.rollingFrames.length;i.diceSprite.spriteFrame=i.rollingFrames[n]}}).call((function(){i.setDiceFace(e),console.log("~~~ Dice Rolling Done ~~~"),i.onDiceRollDone()})),this._rollingTween.tag(g.DICE_ROLL),this._rollingTween.start()},o.stopRolling=function(){this._rollingTween&&this._rollingTween.stop()},o.reset=function(){this.diceSprite.spriteFrame=this.diceFaces[0]},i}(u)).prototype,"diceFaces",[h],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),_=i(m.prototype,"rollingFrames",[d],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),v=i(m.prototype,"diceSprite",[F],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),D=m))||D));o._RF.pop()}}}));

System.register("chunks:///_virtual/EndRoundScreen.ts",["./rollupPluginModLoBabelHelpers.js","cc","./Menu.ts","./GameManager.ts","./NetworkManager.ts","./NetworkTypes.ts","./SNLRoomState.ts","./SNLGameHandler.ts","./UIManager.ts","./PlayerAvatar.ts","./PlayerAssets.ts"],(function(t){var e,n,i,r,o,a,s,l,c,u,p,h,f,y,S,g;return{setters:[function(t){e=t.applyDecoratedDescriptor,n=t.inheritsLoose,i=t.initializerDefineProperty,r=t.assertThisInitialized},function(t){o=t.cclegacy,a=t._decorator,s=t.Label},function(t){l=t.Menu},function(t){c=t.GameManager},function(t){u=t.ServerRoomStateChangeEvent},function(t){p=t.NetworkEvents},function(t){h=t.SNLRoomState},function(t){f=t.SNLGameHandler},function(t){y=t.UIManager},function(t){S=t.PlayerAvatar},function(t){g=t.PlayerAssets}],execute:function(){var d,v,_,m,w,R,G;o._RF.push({},"80402GgfRpJLbN/3tlzi2QL","EndRoundScreen",void 0);var N=a.ccclass,A=a.property;t("EndRoundScreen",(d=N("EndRoundScreen"),v=A({type:S}),_=A({type:s}),d((R=e((w=function(t){function e(){for(var e,n=arguments.length,o=new Array(n),a=0;a<n;a++)o[a]=arguments[a];return e=t.call.apply(t,[this].concat(o))||this,i(e,"playerAvatar",R,r(e)),i(e,"playerName",G,r(e)),e._shouldShowThisScreen=!1,e._optionsInitialized=!1,e._rotatingGlow=null,e}n(e,t);var o=e.prototype;return o.onLoad=function(){t.prototype.onLoad.call(this),u.on(p.SERVER_ROOM_STATE_CHANGE,this.ServerStateChanged,this)},o.onDestroy=function(){u.off(p.SERVER_ROOM_STATE_CHANGE,this.ServerStateChanged,this)},o.ServerStateChanged=function(t){if(!this._optionsInitialized){var e=new h;e.gameOptions&&(this._shouldShowThisScreen=e.gameOptions.show_result_screen,this._optionsInitialized=!0),e.copyFrom(t)}},o.Open=function(){this._shouldShowThisScreen&&(t.prototype.Open.call(this),this.initialize())},o.Close=function(){t.prototype.Close.call(this),this.stopRotateGlow()},o.initialize=function(){if(t.prototype.initialize.call(this),y.instance.showResultScreen){c.Instance._won;var e=c.Instance._serverStateCopy.playersData.findIndex((function(t){return 1==t.finishPosition}));if(-1!=e){var n=f.Instance.getPlayer(e);this.playerAvatar.setAvatarFromSpriteFrame(n.GetProfileSpriteFrame()),this.playerAvatar.setOutlineColor(g.instance.getPawnColor(e)),this.playerName.string=this.GetDisplayName(n.playerName.string)}else console.error("no winning player")}else this.Close()},o.stopRotateGlow=function(){this._rotatingGlow&&(this._rotatingGlow.stop(),this._rotatingGlow=null)},o.GetDisplayName=function(t){return t.length>8?t.substring(0,8)+"..":t},e}(l)).prototype,"playerAvatar",[v],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),G=e(w.prototype,"playerName",[_],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),m=w))||m));o._RF.pop()}}}));

System.register("chunks:///_virtual/events.ts",["cc"],(function(e){var t;return{setters:[function(e){t=e.cclegacy}],execute:function(){t._RF.push({},"e971cJFNR5HNa1wdQSyhDOf","events",void 0);e("GameEvents",{GameLoaded:"MILO_GAME_LOADED",GameStarted:"MILO_GAME_STARTED",GameEnded:"MILO_GAME_ENDED",ScoreUpdate:"MILO_SCORE_UPDATE",VibratePreset:"MILO_VIBRATE_PRESET",VibratePattern:"MILO_VIBRATE_PATTERN",UpdateHostId:"MILO_UPDATE_HOST_ID",PlayAgain:"MILO_PLAY_AGAIN",ChangeGame:"MILO_CHANGE_GAME"}),e("InternalGameSdkEvents",function(e){return e.HOST_CHANGED="HOST_CHANGED",e}({}));t._RF.pop()}}}));

System.register("chunks:///_virtual/FitToScreen.ts",["./rollupPluginModLoBabelHelpers.js","cc","./CameraManger.ts"],(function(e){var t,n,i,r,o,s,a,c,d,u,h,l,p,g;return{setters:[function(e){t=e.applyDecoratedDescriptor,n=e.inheritsLoose,i=e.initializerDefineProperty,r=e.assertThisInitialized},function(e){o=e.cclegacy,s=e._decorator,a=e.CCBoolean,c=e.director,d=e.Director,u=e.UITransform,h=e.screen,l=e.Widget,p=e.Component},function(e){g=e.CameraManger}],execute:function(){var f,w,y,v,T;o._RF.push({},"d0085U4er5MD5BA1K8fG7Zp","FitToScreen",void 0);var S=s.ccclass,m=s.property;e("FitToScreen",(f=S("FitToScreen"),w=m({type:a}),f((T=t((v=function(e){function t(){for(var t,n=arguments.length,o=new Array(n),s=0;s<n;s++)o[s]=arguments[s];return t=e.call.apply(e,[this].concat(o))||this,i(t,"updateWidgetsRecursively",T,r(t)),t}n(t,e);var o=t.prototype;return o.onEnable=function(){var e=this;c.once(d.EVENT_AFTER_UPDATE,(function(){e.refresh()}))},o.setUiTransformToScreenSize=function(){var e=this.node.getComponent(u),t=g.instance.getCurrentOrthoHeight()/g.instance.defaultOrthoHeight,n=h.windowSize.width||window.innerWidth,i=h.windowSize.height||window.innerHeight,r=g.instance.designHeight*t,o=r*n/i;console.log("windowWidth",n,"windowHeight",i),e.setContentSize(o,r)},o.refresh=function(){this.setUiTransformToScreenSize(),this.updateWidgetsRecursively&&this.updateWidgetsInHierarchy()},o.updateWidgetsInHierarchy=function(){this.updateWidgetAndDescendants(this.node)},o.updateWidgetAndDescendants=function(e){var t=this,n=e.getComponent(l);n&&this.node.uuid!=e.uuid&&n.updateAlignment(),e.children.forEach((function(e){t.updateWidgetAndDescendants(e)}))},t}(p)).prototype,"updateWidgetsRecursively",[w],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),y=v))||y));o._RF.pop()}}}));

System.register("chunks:///_virtual/GameConfig.ts",["./rollupPluginModLoBabelHelpers.js","cc","./SNLTileType.ts","./BaseRoomSettings.ts"],(function(e){var i,t,o,n;return{setters:[function(e){i=e.extends},function(e){t=e.cclegacy},function(e){o=e.SNLTileType},function(e){n=e.DefaultRoomSettings}],execute:function(){t._RF.push({},"f4f68LZjo1CQasrXxQbJ8Fz","GameConfig",void 0);e("DefaultSNLGameOptions",i({},n,{boardTilesCount:7,diceRollWaitTime:30,movePiecesWaitTime:30,lagDelayCompensationTime:1,animationWaitTime:10,rocketSteps:8,PowerupTypes:[o.ROCKET,o.SHIELD],show_mute_button:!1,show_result_screen:!0,show_faq:!0,MissTurnsToKickOut:3,turnWaitTime:30,maxReconnectionAttempts:10,piecesPerPlayer:2,boardIndex:0,boardTilesPerRow:8,snakeAnimationTimePerTile:.25,ladderAnimationTimePerTile:.1}));t._RF.pop()}}}));

System.register("chunks:///_virtual/GameManager.ts",["./rollupPluginModLoBabelHelpers.js","cc","./NetworkManager.ts","./NetworkTypes.ts","./Board.ts","./AudioManager.ts","./SNLRoomState.ts","./RoomTypes.ts","./MiloGameSDK.ts","./UIManager.ts"],(function(e){var t,n,a,o,s,r,i,c,l,u,h,m,S,d,C,g,_;return{setters:[function(e){t=e.inheritsLoose,n=e.createClass},function(e){a=e.cclegacy,o=e._decorator,s=e.EventTarget,r=e.Component},function(e){i=e.ConnectionStateChangeEvent,c=e.ServerRoomStateChangeEvent,l=e.NetworkManager},function(e){u=e.NetworkEvents,h=e.ConnectionState},function(e){m=e.Board},function(e){S=e.AudioManager},function(e){d=e.SNLRoomState},function(e){C=e.RoomStatus},function(e){g=e.MiloGameSDK},function(e){_=e.UIManager}],execute:function(){var f,v;a._RF.push({},"b40f5ZEV7ZJy4VgUP/DLV8v","GameManager",void 0);var p=o.ccclass,y=e("RoomStatusChangeEvent",new s);e("GameManager",p("GameManager")(((v=function(e){function a(){for(var t,n=arguments.length,a=new Array(n),o=0;o<n;o++)a[o]=arguments[o];return(t=e.call.apply(e,[this].concat(a))||this)._roomState=C.NONE,t._won=!1,t._handledGameOverCallbacks=!1,t._serverStateCopy=null,t._missTurnsToKickOut=3,t.miloSDK=new g,t.gameStartTime=0,t}t(a,e);var o=a.prototype;return o.onLoad=function(){null!=a._instance&&this.node.destroy(),a._instance=this,this.miloSDK.init({gameId:"snl-game",debug:!0}),this.sendGameLoaded(),i.on(u.CONNECTION_STATE_CHANGE,this.onConnectionStateChange,this),c.on(u.SERVER_ROOM_STATE_CHANGE,this.onServerStateChange,this)},o.sendGameLoaded=function(){var e={timestamp:Date.now()};this.miloSDK.gameLoaded(e)},o.sendGameStarted=function(){this.gameStartTime=Date.now();var e={timestamp:this.gameStartTime};this.miloSDK.gameStarted(e)},o.sendGameEnded=function(){var e=this,t=Date.now(),n={duration:this.gameStartTime>0?t-this.gameStartTime:0,hasWinningScreen:!0};setTimeout((function(){e.miloSDK.gameEnded(n)}),2e3)},o.onConnectionStateChange=function(e,t){t==h.DISCONNECTED?this._roomState!=C.END_GAME&&l.Instance.reconnect():t==h.KICKED_OUT&&this.setState(C.KICKED_OUT)},o.setState=function(e){this.OnRemoteGameStateChange(e),this._roomState=e,y.emit(u.ROOM_STATUS_CHANGE,e)},o.onServerStateChange=function(e){null==this._serverStateCopy&&(this._serverStateCopy=new d,this._serverStateCopy.copyFrom(e),this._missTurnsToKickOut=this._serverStateCopy.gameOptions.MissTurnsToKickOut),e.currentRoomStatus==C.END_GAME&&(console.log("Game Over"),this._serverStateCopy=new d,this._serverStateCopy.copyFrom(e),this.handleWon(e)),this.setState(e.currentRoomStatus)},o.handleWon=function(e){var t=new d;t.copyFrom(e);var n=l.Instance.CurrentRoom.sessionId,a=t.playersData.findIndex((function(e){return e.sessionId==n}));if(-1!=a){for(var o=t.playersData[a].pieces,s=m.Instance.TotalPathCount(t.gameOptions),r=0;r<o.length;r++)o[r]==s&&(this._won=!0);this._won?(_.instance.showConfetti(),S.instance.playSound("Win")):S.instance.playSound("Lose")}},o.onDestroy=function(){i.off(u.CONNECTION_STATE_CHANGE,this.onConnectionStateChange,this),c.off(u.SERVER_ROOM_STATE_CHANGE,this.onServerStateChange,this)},o.GetPlayerData=function(){return console.log("Player Profiles : ",this._serverStateCopy.playersData),this._serverStateCopy.playersData.find((function(e){return e.sessionId==l.Instance.CurrentRoom.sessionId}))},o.GetWinnerPlayerData=function(){for(var e=-1,t=0;t<this._serverStateCopy.playersData.length;t++)if(this._serverStateCopy.playersData[t].finishPosition>=0){e=t;break}return console.log("Winner Player Id : ",e),-1==e?null:this._serverStateCopy.playersData.find((function(t){return t.playerNumber==e}))},o.OnRemoteGameStateChange=function(e){console.log("RemoteGameStateChange Message : "+e),this._roomState!=e&&(this._roomState==C.NONE&&e==C.WAITING_FOR_PLAYERS||e==C.COUNTDOWN||(e==C.GAME_SIMULATION?this.sendGameStarted():e==C.END_GAME&&(this.sendGameEnded(),this.HandleGameOverCallbacks())))},o.HandleGameOverCallbacks=function(){console.log("HandleGameOverCallbacks"),this._handledGameOverCallbacks?console.log("Already handled game over callbacks"):this._handledGameOverCallbacks=!0},o.setInput=function(e){},n(a,null,[{key:"Instance",get:function(){return this._instance}}]),a}(r))._instance=null,f=v))||f);a._RF.pop()}}}));

System.register("chunks:///_virtual/GameMessageType.ts",["cc"],(function(e){var _;return{setters:[function(e){_=e.cclegacy}],execute:function(){_._RF.push({},"583a3RzjbdA7bfqboJYqOTk","GameMessageType",void 0);e("GameMessageType",function(e){return e.NONE="none",e.SET_STATE="set_state",e.DICE_OUTCOME="dice_outcome",e.CLIENT_DICE_ROLL="client_dice_roll",e.MOVE_PIECE="move_piece",e.ROLLING_ACK="rolling_ack",e.MOVE_PIECE_ACK="move_piece_ack",e.WAITING_ACK="waiting_ack",e.KICKED_OUT="kicked_out",e.PLAYER_CAMEBACK="player_cameback",e}({}));_._RF.pop()}}}));

System.register("chunks:///_virtual/HowToPlay.ts",["./rollupPluginModLoBabelHelpers.js","cc","./Menu.ts"],(function(t){var e,o,n,i,r,a,l,c,u;return{setters:[function(t){e=t.applyDecoratedDescriptor,o=t.inheritsLoose,n=t.initializerDefineProperty,i=t.assertThisInitialized},function(t){r=t.cclegacy,a=t._decorator,l=t.Button,c=t.PageView},function(t){u=t.Menu}],execute:function(){var p,s,y,f,g,h,w;r._RF.push({},"ea6a02xeTRLCrBofJxnv0T0","HowToPlay",void 0);var d=a.ccclass,T=a.property;t("HowToPlay",(p=d("HowToPlay"),s=T({type:l}),y=T({type:c}),p((h=e((g=function(t){function e(){for(var e,o=arguments.length,r=new Array(o),a=0;a<o;a++)r[a]=arguments[a];return e=t.call.apply(t,[this].concat(r))||this,n(e,"nextButton",h,i(e)),n(e,"pageView",w,i(e)),e}o(e,t);var r=e.prototype;return r.onLoad=function(){t.prototype.onLoad.call(this)},r.onDestroy=function(){},r.Open=function(){t.prototype.Open.call(this)},r.Close=function(){t.prototype.Close.call(this)},r.initHandTween=function(){},r.onNextButtonClick=function(){this.log("Next button clicked"),this.pageView.scrollToPage(1)},e}(u)).prototype,"nextButton",[s],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),w=e(g.prototype,"pageView",[y],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),f=g))||f));r._RF.pop()}}}));

System.register("chunks:///_virtual/IdleState.ts",["./rollupPluginModLoBabelHelpers.js","cc","./Player.ts","./PlayerBaseState.ts"],(function(e){var t,a,r,n;return{setters:[function(e){t=e.inheritsLoose},function(e){a=e.cclegacy},function(e){r=e.PlayerState},function(e){n=e.PlayerBaseState}],execute:function(){a._RF.push({},"5e908nFCGxLmZzD6yq3O+Zr","IdleState",void 0);e("IdleState",function(e){function a(t){var a;return(a=e.call(this)||this).stateMachine=void 0,a._stateName=r.IDLE,a.player=void 0,a.stateMachine=t,a.player=a.stateMachine.player,a}t(a,e);var n=a.prototype;return n.enterState=function(){this.clearPlayerData()},n.updateState=function(e){},n.exitState=function(){},n.clearPlayerData=function(){this.player.timer.stop(),this.player.timer.reset(),this.player.outComesUIManager.setGoldenDiceOutcomes(0),this.player.outComesUIManager.clearAllOutComes(),this.player.outComesUIManager.enableOutComesBg(!1),this.player.dice.reset(),this.player.diceRoot.active=!1,null!=this.player._moveOptioneInput&&(this.player._moveOptioneInput.node.active=!1)},a}(n));a._RF.pop()}}}));

System.register("chunks:///_virtual/index.ts",["cc","./types.ts","./events.ts"],(function(e){var n;return{setters:[function(e){n=e.cclegacy},null,function(n){var t={};t.GameEvents=n.GameEvents,t.InternalGameSdkEvents=n.InternalGameSdkEvents,e(t)}],execute:function(){n._RF.push({},"4ecd4/m0vdG35R9zDn0Lp7i","index",void 0),n._RF.pop()}}}));

System.register("chunks:///_virtual/index2.ts",["cc","./WebViewTransport.ts"],(function(e){var t;return{setters:[function(e){t=e.cclegacy},function(t){e("WebViewTransport",t.WebViewTransport)}],execute:function(){t._RF.push({},"a460cTJplhNOKte4Q/Kl13W","index",void 0),t._RF.pop()}}}));

System.register("chunks:///_virtual/InGameMenu.ts",["./rollupPluginModLoBabelHelpers.js","cc","./Menu.ts","./AudioManager.ts","./NetworkManager.ts","./NetworkTypes.ts","./UIManager.ts"],(function(t){var e,n,i,o,r,u,a,s,l,c,p,f,d,h;return{setters:[function(t){e=t.applyDecoratedDescriptor,n=t.inheritsLoose,i=t.initializerDefineProperty,o=t.assertThisInitialized},function(t){r=t.cclegacy,u=t._decorator,a=t.SpriteFrame,s=t.Sprite,l=t.Node},function(t){c=t.Menu},function(t){p=t.AudioManager},function(t){f=t.ServerRoomStateChangeEvent},function(t){d=t.NetworkEvents},function(t){h=t.UIManager}],execute:function(){var S,g,y,M,b,m,v,O,A,B,_;r._RF.push({},"8fc1bYuCLtONa4GX8G0B13M","InGameMenu",void 0);var w=u.ccclass,E=u.property;t("InGameMenu",(S=w("InGameMenu"),g=E({type:a}),y=E({type:a}),M=E({type:s}),b=E({type:l}),S((O=e((v=function(t){function e(){for(var e,n=arguments.length,r=new Array(n),u=0;u<n;u++)r[u]=arguments[u];return e=t.call.apply(t,[this].concat(r))||this,i(e,"soundOnSprite",O,o(e)),i(e,"soundOffSprite",A,o(e)),i(e,"soundButton",B,o(e)),i(e,"faqButton",_,o(e)),e}n(e,t);var r=e.prototype;return r.onLoad=function(){t.prototype.onLoad.call(this),f.on(d.SERVER_ROOM_STATE_CHANGE,this.ServerStateChanged,this)},r.onDestroy=function(){f.off(d.SERVER_ROOM_STATE_CHANGE,this.ServerStateChanged,this)},r.ServerStateChanged=function(t){this.soundButton.node.active=t.gameOptions.show_mute_button},r.start=function(){},r.Open=function(){console.log("InGameMenu open called"),t.prototype.Open.call(this),this.initialize()},r.Close=function(){t.prototype.Close.call(this)},r.initialize=function(){t.prototype.initialize.call(this),this.UpdateAudioSprite(),this.soundButton.node.active=h.instance.showMuteButton,this.faqButton.active=h.instance.showFAQ},r.UpdateAudioSprite=function(){"true"==p.instance.IsAudioEnabled?this.soundButton.spriteFrame=this.soundOnSprite:this.soundButton.spriteFrame=this.soundOffSprite},r.ToggleSound=function(){p.instance.ToggleAudio(),this.UpdateAudioSprite()},e}(c)).prototype,"soundOnSprite",[g],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),A=e(v.prototype,"soundOffSprite",[y],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),B=e(v.prototype,"soundButton",[M],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),_=e(v.prototype,"faqButton",[b],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),m=v))||m));r._RF.pop()}}}));

System.register("chunks:///_virtual/InputManager.ts",["./rollupPluginModLoBabelHelpers.js","cc","./GameMessageType.ts"],(function(e){var n,t,i;return{setters:[function(e){n=e.createClass},function(e){t=e.cclegacy},function(e){i=e.GameMessageType}],execute:function(){t._RF.push({},"b9403FX+ZlKjLpa+xgGWwir","InputManager",void 0),e("InputManager",function(){function e(){this._isInputGiven=!1,this._inputType=i.MOVE_PIECE,this._movedPieceIndex=-1}var t=e.prototype;return t.ResetInput=function(){this._isInputGiven=!1,this._inputType=i.MOVE_PIECE,this._movedPieceIndex=-1},t.SetInput=function(e,n){void 0===n&&(n=-1),this._isInputGiven=!0,this._inputType=e,this._movedPieceIndex=n},n(e,[{key:"IsInputGiven",get:function(){return this._isInputGiven}},{key:"InputType",get:function(){return this._inputType}},{key:"MovedPieceIndex",get:function(){return this._movedPieceIndex}}],[{key:"Instance",get:function(){return null==this._instance&&(this._instance=new e),this._instance}}]),e}())._instance=void 0,t._RF.pop()}}}));

System.register("chunks:///_virtual/InstructionsScreen.ts",["./rollupPluginModLoBabelHelpers.js","cc","./Menu.ts"],(function(n){var t,e,i,r,o,u,c,s,l;return{setters:[function(n){t=n.applyDecoratedDescriptor,e=n.inheritsLoose,i=n.initializerDefineProperty,r=n.assertThisInitialized},function(n){o=n.cclegacy,u=n._decorator,c=n.Node,s=n.tween},function(n){l=n.Menu}],execute:function(){var a,p,f,y,b,h,g,I,v,w,z;o._RF.push({},"04ce4wGIM9G07gZRYz7oaFn","InstructionsScreen",void 0);var d=u.ccclass,M=u.property;n("InstructionsScreen",(a=d("InstructionsScreen"),p=M({type:c}),f=M({type:c}),y=M({type:c}),b=M({type:c}),a((I=t((g=function(n){function t(){for(var t,e=arguments.length,o=new Array(e),u=0;u<e;u++)o[u]=arguments[u];return t=n.call.apply(n,[this].concat(o))||this,i(t,"helpInstructions",I,r(t)),i(t,"autoMoveInstructions",v,r(t)),i(t,"waitingForUser",w,r(t)),i(t,"spinner",z,r(t)),t._isHelpInstructionDone=!1,t._isAutoMoveInstructionDone=!1,t}e(t,n);var o=t.prototype;return o.onLoad=function(){n.prototype.onLoad.call(this),s(this.spinner).repeatForever(s().by(1,{angle:360})).start()},o.onDestroy=function(){},o.Open=function(){n.prototype.Open.call(this),this.initialization()},o.Close=function(){n.prototype.Close.call(this)},o.initialization=function(){},t}(l)).prototype,"helpInstructions",[p],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),v=t(g.prototype,"autoMoveInstructions",[f],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),w=t(g.prototype,"waitingForUser",[y],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),z=t(g.prototype,"spinner",[b],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),h=g))||h));o._RF.pop()}}}));

System.register("chunks:///_virtual/Interfaces.ts",["cc"],(function(){var e;return{setters:[function(t){e=t.cclegacy}],execute:function(){e._RF.push({},"3a7266xVRBHEao7dTVq7yUQ","Interfaces",void 0),e._RF.pop()}}}));

System.register("chunks:///_virtual/KickedOutScreen.ts",["./rollupPluginModLoBabelHelpers.js","cc","./Menu.ts","./GameManager.ts"],(function(e){var t,n,i,o,r,c,u,a,s;return{setters:[function(e){t=e.applyDecoratedDescriptor,n=e.inheritsLoose,i=e.initializerDefineProperty,o=e.assertThisInitialized},function(e){r=e.cclegacy,c=e._decorator,u=e.Label},function(e){a=e.Menu},function(e){s=e.GameManager}],execute:function(){var l,p,d,f,k;r._RF.push({},"de515twcxdHEL4D0h1+VE3G","KickedOutScreen",void 0);var y=c.ccclass,h=c.property;e("KickedOutScreen",(l=y("KickedOutScreen"),p=h({type:u}),l((k=t((f=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),c=0;c<n;c++)r[c]=arguments[c];return t=e.call.apply(e,[this].concat(r))||this,i(t,"kickedOutLabel",k,o(t)),t}n(t,e);var r=t.prototype;return r.onLoad=function(){e.prototype.onLoad.call(this)},r.onDestroy=function(){},r.Open=function(){e.prototype.Open.call(this),this.kickedOutLabel.string="You missed "+s.Instance._missTurnsToKickOut+" turns. kicked out of the game!"},r.Close=function(){e.prototype.Close.call(this)},r.initHandTween=function(){},r.update=function(e){},t}(a)).prototype,"kickedOutLabel",[p],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),d=f))||d));r._RF.pop()}}}));

System.register("chunks:///_virtual/Menu.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(e){var n,t,i,o,r,c,a,l,u;return{setters:[function(e){n=e.applyDecoratedDescriptor,t=e.inheritsLoose,i=e.initializerDefineProperty,o=e.assertThisInitialized},function(e){r=e.cclegacy,c=e._decorator,a=e.Node,l=e.CCString,u=e.Component}],execute:function(){var s,p,f,h,d,y,g;r._RF.push({},"fb444MWUUBAlYxhc1jzXjLh","Menu",void 0);var m=c.ccclass,v=c.property;e("Menu",(s=m("Menu"),p=v({type:a}),f=v({type:l}),s((y=n((d=function(e){function n(){for(var n,t=arguments.length,r=new Array(t),c=0;c<t;c++)r[c]=arguments[c];return n=e.call.apply(e,[this].concat(r))||this,i(n,"content",y,o(n)),i(n,"menuName",g,o(n)),n.isOpened=!1,n}t(n,e);var r=n.prototype;return r.onLoad=function(){this.content=this.node.getChildByName("Content")},r.Open=function(){this.content.active=!0,this.isOpened=!0},r.Close=function(){this.content.active=!1,this.isOpened=!1},r.initialize=function(){console.log("Menu initialize called")},n}(u)).prototype,"content",[p],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),g=n(d.prototype,"menuName",[f],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),h=d))||h));r._RF.pop()}}}));

System.register("chunks:///_virtual/MiloGameSDK.ts",["./rollupPluginModLoBabelHelpers.js","cc","./index2.ts","./events.ts","./defaultConfig.ts","./WebViewTransport.ts"],(function(t){var e,n,i,s,o,a,d;return{setters:[function(t){e=t.extends},function(t){n=t.cclegacy,i=t.EventTarget},null,function(t){s=t.InternalGameSdkEvents,o=t.GameEvents},function(t){a=t.defaultConfig},function(t){d=t.WebViewTransport}],execute:function(){n._RF.push({},"1d90b7Rs4JDl6jGCXB3Fj9A","MiloGameSDK",void 0);var r=t("HostChangeEvent",new i);t("MiloGameSDK",function(){function t(){this.transport=new d,this.config=e({},a),this.hostId=null}var n=t.prototype;return n.init=function(t){var n=this;t&&(this.config=e({},this.config,t)),this.config.debug&&console.log("[MiloGameSDK] initialized with",this.config),window.updateHostId=function(t){console.log("Received hostId from React Native:",t);var e=n.hostId;n.setHostId(t),e!==t&&r.emit(s.HOST_CHANGED,{oldHostId:e,newHostId:t})}},n.vibratePreset=function(t){var e={preset:t};this.sendEvent(o.VibratePreset,e)},n.vibratePattern=function(t){var e={pattern:t};this.sendEvent(o.VibratePattern,e)},n.gameLoaded=function(t){this.sendEvent(o.GameLoaded,t)},n.gameStarted=function(t){this.sendEvent(o.GameStarted,t)},n.gameEnded=function(t){this.sendEvent(o.GameEnded,t)},n.sendScore=function(t){this.sendEvent(o.ScoreUpdate,t)},n.playAgain=function(t){this.sendEvent(o.PlayAgain,t)},n.changeGame=function(t){this.sendEvent(o.ChangeGame,t)},n.sendEvent=function(t,e){var n={event:t,data:e,ts:Date.now(),gameId:this.config.gameId};this.transport.send(n)},n.getHostId=function(){return this.hostId},n.setHostId=function(t){this.hostId=t},t}());n._RF.pop()}}}));

System.register("chunks:///_virtual/MiloLayout.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(t){var e,i,n,a,o,s,c,r,h,T,u,p,_;return{setters:[function(t){e=t.applyDecoratedDescriptor,i=t.inheritsLoose,n=t.initializerDefineProperty,a=t.assertThisInitialized,o=t.createClass},function(t){s=t.cclegacy,c=t._decorator,r=t.Enum,h=t.Size,T=t.Node,u=t.Vec3,p=t.UITransform,_=t.Component}],execute:function(){var l,d,E,g,y,f,O,C,R,L,m,v,N,I,H;s._RF.push({},"5414fpKVKxF8JtjWCjgS4mD","MiloLayout",void 0);var b=c.ccclass,A=c.property,w=t("MiloLayoutType",function(t){return t[t.HORIZONTAL=0]="HORIZONTAL",t[t.VERTICAL=1]="VERTICAL",t[t.GRID=2]="GRID",t}({})),M=t("MiloLayoutAlign",function(t){return t[t.LEFT_TOP=0]="LEFT_TOP",t[t.CENTER_TOP=1]="CENTER_TOP",t[t.RIGHT_TOP=2]="RIGHT_TOP",t[t.LEFT_CENTER=3]="LEFT_CENTER",t[t.CENTER=4]="CENTER",t[t.RIGHT_CENTER=5]="RIGHT_CENTER",t[t.LEFT_BOTTOM=6]="LEFT_BOTTOM",t[t.CENTER_BOTTOM=7]="CENTER_BOTTOM",t[t.RIGHT_BOTTOM=8]="RIGHT_BOTTOM",t}({}));t("MiloLayout",(l=b("MiloLayout"),d=A({type:r(w)}),E=A({type:r(w)}),g=A({type:r(M)}),y=A({type:r(M)}),f=A({visible:function(){return this._layoutType===w.GRID}}),l((R=e((C=function(t){function e(){for(var e,i=arguments.length,o=new Array(i),s=0;s<i;s++)o[s]=arguments[s];return e=t.call.apply(t,[this].concat(o))||this,n(e,"_layoutType",R,a(e)),n(e,"_alignment",L,a(e)),n(e,"_spacingX",m,a(e)),n(e,"_spacingY",v,a(e)),n(e,"_columns",N,a(e)),n(e,"_padding",I,a(e)),n(e,"_autoResize",H,a(e)),e._activeChildCount=0,e._layoutSize=new h(0,0),e._lastChildActiveState=[],e}i(e,t);var s=e.prototype;return s.onLoad=function(){this.node.on(T.EventType.CHILD_ADDED,this.onChildAdded,this),this.node.on(T.EventType.CHILD_REMOVED,this.onChildRemoved,this)},s.onDestroy=function(){this.node.off(T.EventType.CHILD_ADDED,this.onChildAdded,this),this.node.off(T.EventType.CHILD_REMOVED,this.onChildRemoved,this),this.removeAllChildListeners()},s.onChildRemoved=function(t){this.removeChildListener(t),this.updateLayout()},s.removeAllChildListeners=function(){var t=this;this.node.children.forEach((function(e){t.removeChildListener(e)}))},s.removeChildListener=function(t){t.__miloLayoutActiveHandler&&(t.off(T.EventType.ACTIVE_IN_HIERARCHY_CHANGED,t.__miloLayoutActiveHandler),t.__miloLayoutActiveHandler=null)},s.start=function(){this._lastChildActiveState=this.node.children.map((function(t){return t.active})),this.updateLayout(),this.addChildActiveListeners()},s.addChildActiveListeners=function(){var t=this;this.node.children.forEach((function(e){t.addChildActiveListener(e)}))},s.addChildActiveListener=function(t){var e=this;t.off(T.EventType.ACTIVE_IN_HIERARCHY_CHANGED,this.onChildActiveChanged,this);var i=function(){e.scheduleOnce((function(){e.updateLayout()}),0)};t.__miloLayoutActiveHandler=i,t.on(T.EventType.ACTIVE_IN_HIERARCHY_CHANGED,i)},s.onChildActiveChanged=function(t){},s.onEnable=function(){this.updateLayout()},s.getAlignmentOffset=function(t){var e,i=new u,n=(null==(e=this.node.getComponent(p))?void 0:e.contentSize)||new h(0,0);switch(this._alignment){case M.LEFT_TOP:case M.LEFT_CENTER:case M.LEFT_BOTTOM:i.x=this._padding;break;case M.CENTER_TOP:case M.CENTER:case M.CENTER_BOTTOM:i.x=(n.width-t.width)/2;break;case M.RIGHT_TOP:case M.RIGHT_CENTER:case M.RIGHT_BOTTOM:i.x=n.width-t.width-this._padding}switch(this._alignment){case M.LEFT_TOP:case M.CENTER_TOP:case M.RIGHT_TOP:i.y=-this._padding;break;case M.LEFT_CENTER:case M.CENTER:case M.RIGHT_CENTER:i.y=-(n.height-t.height)/2;break;case M.LEFT_BOTTOM:case M.CENTER_BOTTOM:case M.RIGHT_BOTTOM:i.y=-n.height+t.height+this._padding}return i},s.updateLayout=function(){if(this.node){var t=this.node.children.filter((function(t){return t.active}));if(this._activeChildCount=t.length,0!==this._activeChildCount)switch(this._layoutType){case w.HORIZONTAL:this.updateHorizontalLayout(t);break;case w.VERTICAL:this.updateVerticalLayout(t);break;case w.GRID:this.updateGridLayout(t)}}},s.updateHorizontalLayout=function(t){var e=this,i=2*this._padding,n=0;t.forEach((function(a,o){var s=a.getComponent(p);s&&(i+=s.width,o<t.length-1&&(i+=e._spacingX),n=Math.max(n,s.height))}));var a=new h(i,n+2*this._padding),o=this.getAlignmentOffset(a),s=o.x;if(t.forEach((function(t){var i=t.getComponent(p);if(i){var a=i.height,c=i.width,r=o.y;switch(e._alignment){case M.LEFT_TOP:case M.CENTER_TOP:case M.RIGHT_TOP:r=o.y-e._padding;break;case M.LEFT_CENTER:case M.CENTER:case M.RIGHT_CENTER:r=o.y-(n-a)/2;break;case M.LEFT_BOTTOM:case M.CENTER_BOTTOM:case M.RIGHT_BOTTOM:r=o.y-n+a}t.position=new u(s+c/2,r-a/2,0),s+=c+e._spacingX}})),this._layoutSize=a,this._autoResize){var c=this.node.getComponent(p);c&&c.setContentSize(a)}},s.updateVerticalLayout=function(t){var e=this,i=2*this._padding,n=0;t.forEach((function(a,o){var s=a.getComponent(p);s&&(i+=s.height,o<t.length-1&&(i+=e._spacingY),n=Math.max(n,s.width))}));var a=new h(n+2*this._padding,i),o=this.getAlignmentOffset(a),s=o.y;if(t.forEach((function(t){var i=t.getComponent(p);if(i){var a=i.height,c=i.width,r=o.x;switch(e._alignment){case M.LEFT_TOP:case M.LEFT_CENTER:case M.LEFT_BOTTOM:r=o.x+e._padding;break;case M.CENTER_TOP:case M.CENTER:case M.CENTER_BOTTOM:r=o.x+(n-c)/2+e._padding;break;case M.RIGHT_TOP:case M.RIGHT_CENTER:case M.RIGHT_BOTTOM:r=o.x+n-c+e._padding}t.position=new u(r+c/2,s-a/2,0),s-=a+e._spacingY}})),this._layoutSize=a,this._autoResize){var c=this.node.getComponent(p);c&&c.setContentSize(a)}},s.updateGridLayout=function(t){if(!(this._columns<=0)){var e=Math.ceil(t.length/this._columns),i=0,n=0;t.forEach((function(t){var e=t.getComponent(p);e&&(i=Math.max(i,e.width),n=Math.max(n,e.height))}));for(var a=2*this._padding+i*this._columns+this._spacingX*(this._columns-1),o=2*this._padding+n*e+this._spacingY*(e-1),s=new h(a,o),c=this.getAlignmentOffset(s),r=0;r<e;r++){var T=Math.min(this._columns,t.length-r*this._columns),_=T*i+(T-1)*this._spacingX,l=0;switch(this._alignment){case M.CENTER_TOP:case M.CENTER:case M.CENTER_BOTTOM:l=(this._columns*i+(this._columns-1)*this._spacingX-_)/2;break;case M.RIGHT_TOP:case M.RIGHT_CENTER:case M.RIGHT_BOTTOM:l=this._columns*i+(this._columns-1)*this._spacingX-_}for(var d=0;d<T;d++){var E=r*this._columns+d;if(E>=t.length)break;var g=t[E],y=g.getComponent(p);if(y){var f=y.width,O=y.height,C=c.x+this._padding+d*(i+this._spacingX)+l,R=c.y-this._padding-r*(n+this._spacingY),L=C,m=R;switch(this._alignment){case M.LEFT_TOP:case M.LEFT_CENTER:case M.LEFT_BOTTOM:L=C;break;case M.CENTER_TOP:case M.CENTER:case M.CENTER_BOTTOM:L=C+(i-f)/2;break;case M.RIGHT_TOP:case M.RIGHT_CENTER:case M.RIGHT_BOTTOM:L=C+i-f}switch(this._alignment){case M.LEFT_TOP:case M.CENTER_TOP:case M.RIGHT_TOP:m=R;break;case M.LEFT_CENTER:case M.CENTER:case M.RIGHT_CENTER:m=R-(n-O)/2;break;case M.LEFT_BOTTOM:case M.CENTER_BOTTOM:case M.RIGHT_BOTTOM:m=R-n+O}g.position=new u(L+f/2,m-O/2,0)}}}if(this._layoutSize=s,this._autoResize){var v=this.node.getComponent(p);v&&v.setContentSize(s)}}},s.update=function(t){if(this.node&&this.node.children.length>0){var e=this.node.children.map((function(t){return t.active})),i=!1;if(this._lastChildActiveState.length!==e.length)i=!0;else for(var n=0;n<e.length;n++)if(this._lastChildActiveState[n]!==e[n]){i=!0;break}i&&(this._lastChildActiveState=e,this.updateLayout())}},s.onChildAdded=function(t){this.addChildActiveListener(t),this.updateLayout()},o(e,[{key:"layoutType",get:function(){return this._layoutType},set:function(t){this._layoutType=t,this.updateLayout()}},{key:"alignment",get:function(){return this._alignment},set:function(t){this._alignment=t,this.updateLayout()}},{key:"spacingX",get:function(){return this._spacingX},set:function(t){this._spacingX=t,this.updateLayout()}},{key:"spacingY",get:function(){return this._spacingY},set:function(t){this._spacingY=t,this.updateLayout()}},{key:"columns",get:function(){return this._columns},set:function(t){this._columns=t,this.updateLayout()}},{key:"padding",get:function(){return this._padding},set:function(t){this._padding=t,this.updateLayout()}},{key:"autoResize",get:function(){return this._autoResize},set:function(t){this._autoResize=t,this.updateLayout()}}]),e}(_)).prototype,"_layoutType",[d],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return w.HORIZONTAL}}),e(C.prototype,"layoutType",[E],Object.getOwnPropertyDescriptor(C.prototype,"layoutType"),C.prototype),L=e(C.prototype,"_alignment",[g],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return M.LEFT_TOP}}),e(C.prototype,"alignment",[y],Object.getOwnPropertyDescriptor(C.prototype,"alignment"),C.prototype),m=e(C.prototype,"_spacingX",[A],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 10}}),e(C.prototype,"spacingX",[A],Object.getOwnPropertyDescriptor(C.prototype,"spacingX"),C.prototype),v=e(C.prototype,"_spacingY",[A],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 10}}),e(C.prototype,"spacingY",[A],Object.getOwnPropertyDescriptor(C.prototype,"spacingY"),C.prototype),N=e(C.prototype,"_columns",[A],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 3}}),e(C.prototype,"columns",[f],Object.getOwnPropertyDescriptor(C.prototype,"columns"),C.prototype),I=e(C.prototype,"_padding",[A],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),e(C.prototype,"padding",[A],Object.getOwnPropertyDescriptor(C.prototype,"padding"),C.prototype),H=e(C.prototype,"_autoResize",[A],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),e(C.prototype,"autoResize",[A],Object.getOwnPropertyDescriptor(C.prototype,"autoResize"),C.prototype),O=C))||O));s._RF.pop()}}}));

System.register("chunks:///_virtual/MoveOptionsInput.ts",["./rollupPluginModLoBabelHelpers.js","cc","./PlayerAssets.ts","./CameraManger.ts"],(function(t){var e,o,i,n,r,s,u,l,a,c,p,C,h;return{setters:[function(t){e=t.applyDecoratedDescriptor,o=t.inheritsLoose,i=t.initializerDefineProperty,n=t.assertThisInitialized},function(t){r=t.cclegacy,s=t._decorator,u=t.Sprite,l=t.Node,a=t.UITransform,c=t.Vec3,p=t.Component},function(t){C=t.PlayerAssets},function(t){h=t.CameraManger}],execute:function(){var m,d,f,O,S,T,y,g,b,k,v,I,U;r._RF.push({},"702bcesVFdF04AjI6RybCtZ","MoveOptionsInput",void 0);var w=s.ccclass,A=s.property;t("MoveOptionsInput",(m=w("MoveOptionsInput"),d=A({type:u}),f=A({type:u}),O=A({type:u}),S=A({type:l}),T=A({type:a}),m((b=e((g=function(t){function e(){for(var e,o=arguments.length,r=new Array(o),s=0;s<o;s++)r[s]=arguments[s];return e=t.call.apply(t,[this].concat(r))||this,i(e,"firstOutComeSprite",b,n(e)),i(e,"secondOutComeSprite",k,n(e)),i(e,"thirdOutComeSprite",v,n(e)),e.outComeValues=[6,6,6],i(e,"pointer",I,n(e)),e.outComeClickedCallback=null,e.uiTransform=null,i(e,"optionsUITransform",U,n(e)),e}o(e,t);var r=e.prototype;return r.onLoad=function(){this.uiTransform=this.node.getComponent(a)},r.onEnable=function(){this.firstOutComeSprite.node.on(l.EventType.TOUCH_START,this.onFirstOutComeClick,this),this.secondOutComeSprite.node.on(l.EventType.TOUCH_START,this.onSecondOutComeClick,this),this.thirdOutComeSprite.node.on(l.EventType.TOUCH_START,this.onThirdOutComeClick,this)},r.onDisable=function(){this.firstOutComeSprite.node.off(l.EventType.TOUCH_START,this.onFirstOutComeClick,this),this.secondOutComeSprite.node.off(l.EventType.TOUCH_START,this.onSecondOutComeClick,this),this.thirdOutComeSprite.node.on(l.EventType.TOUCH_START,this.onThirdOutComeClick,this)},r.setOutComeSprites=function(t){this.outComeValues=t,t.length>=1&&(this.firstOutComeSprite.spriteFrame=C.instance.getDiceOutComesStackSprite(this.outComeValues[0])),t.length>=2?(console.log("Setting Second OutCome"),this.secondOutComeSprite.node.active=!0,this.secondOutComeSprite.spriteFrame=C.instance.getDiceOutComesStackSprite(this.outComeValues[1])):this.secondOutComeSprite.node.active=!1,t.length>=3?(console.log("Setting Third OutCome"),this.thirdOutComeSprite.node.active=!0,this.thirdOutComeSprite.spriteFrame=C.instance.getDiceOutComesStackSprite(this.outComeValues[2])):this.thirdOutComeSprite.node.active=!1},r.onFirstOutComeClick=function(){null!=this.outComeClickedCallback&&this.outComeClickedCallback(this.outComeValues[0])},r.onSecondOutComeClick=function(){null!=this.outComeClickedCallback&&this.outComeClickedCallback(this.outComeValues[1])},r.onThirdOutComeClick=function(){null!=this.outComeClickedCallback&&this.outComeClickedCallback(this.outComeValues[2])},r.SetPosition=function(t){this.node.setWorldPosition(t);var e=h.instance.getWidth(),o=this.optionsUITransform.node.position;o.set(0,7.5,0),console.log("setting worldPosintion : ",t);var i=t.x-.5*this.optionsUITransform.width,n=t.x+.5*this.optionsUITransform.width;i<0?(console.log("My X Left Bound: ",i,"Screen Width: ",e),o.add(new c(.5*this.optionsUITransform.width-45,0,0))):n>e&&(console.log("My X Right Bound: ",n,"Screen Width: ",e),o.add(new c(.5*-this.optionsUITransform.width+45,0,0))),this.optionsUITransform.node.setPosition(o)},e}(p)).prototype,"firstOutComeSprite",[d],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),k=e(g.prototype,"secondOutComeSprite",[f],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),v=e(g.prototype,"thirdOutComeSprite",[O],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),I=e(g.prototype,"pointer",[S],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),U=e(g.prototype,"optionsUITransform",[T],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),y=g))||y));r._RF.pop()}}}));

System.register("chunks:///_virtual/MovePieceState.ts",["./rollupPluginModLoBabelHelpers.js","cc","./Player.ts","./PlayerBaseState.ts","./Piece.ts","./GameMessageType.ts","./GameManager.ts","./NetworkManager.ts"],(function(e){var t,i,a,n,o,r,s,l,c,p;return{setters:[function(e){t=e.inheritsLoose},function(e){i=e.cclegacy,a=e.Node,n=e.Vec3},function(e){o=e.PlayerState},function(e){r=e.PlayerBaseState},function(e){s=e.Piece},function(e){l=e.GameMessageType},function(e){c=e.GameManager},function(e){p=e.NetworkManager}],execute:function(){i._RF.push({},"57c5dcgjOBMCpxVFKadWOik","MovePieceState",void 0);e("MovePieceState",function(e){function i(t){var i;return(i=e.call(this)||this).stateMachine=void 0,i._stateName=o.MOVING_PIECE,i.player=void 0,i.moveOptionsOffset=new n(0,120,0),i.stateMachine=t,i.player=i.stateMachine.player,i}t(i,e);var r=i.prototype;return r.enterState=function(){console.log("Entered Moving Piece State"),console.log("Rolls : ",this.player.outComesUIManager.getOutComes());var e=this.stateMachine.currentServerState.playersData[this.player.playerNumber];this.player.outComesUIManager.reset(e.rollsList),this.player.diceRoot.active=!0,this.player.timer.stop(),this.player.timer.setTotalTime(this.stateMachine.currentServerState.gameOptions.movePiecesWaitTime),this.player.timer.run(),this.player._pawnHandler.StartSelectAnimationsForValidMovePieces();for(var t=0;t<this.player.pawns.length;t++)this.player.pawns[t].node.on(a.EventType.TOUCH_START,this.OnPieceClick,this)},r.updateState=function(e){},r.exitState=function(){console.log("Exited Move Piece State local ",this.player._isLocal),this.player.diceRoot.active=!1,this.player.timer.stop(),this.player._pawnHandler.Reset(this.stateMachine.currentServerState);for(var e=0;e<this.player.pawns.length;e++)this.player.pawns[e].node.off(a.EventType.TOUCH_START,this.OnPieceClick,this)},r.getAllMovablePieces=function(){for(var e,t=this,i=[],a=this.player.outComesUIManager.getOutComes(),n=function(n){e=a.filter((function(e){return t.canMovePiece(t.player.pawns[n].pathNumber,e)})),(e=Array.from(new Set(e))).length>0&&i.push(t.player.pawns[n])},o=0;o<this.player.pawns.length;o++)n(o);return i},r.OnPieceClick=function(e){var t=this;if(this.player._isLocal)if(this.player._pawnHandler.isAnimating())this.player._moveOptioneInput.node.active=!1;else{this.player._moveOptioneInput.node.active=!1;var i=e.target.getComponent(s),a=this.player.outComesUIManager.getOutComes().filter((function(e){return t.canMovePiece(i.pathNumber,e)}));if(a=Array.from(new Set(a)),console.log("Piece Valid OutComes: ",a),0!=a.length)return 1==a.length&&this.sendMovePieceMessage(i.pieceNumber,a[0]),a.length>=2?(this.player._moveOptioneInput.node.active=!0,this.player._moveOptioneInput.outComeClickedCallback=this.outComeClickedCallback.bind(this),this.player._moveOptioneInput.setOutComeSprites(a),this.player._currentSelectedPieceNumber=i.pieceNumber,void this.player._moveOptioneInput.SetPosition(e.target.worldPosition.clone().add(this.moveOptionsOffset))):void 0}},r.onMovePiece=function(){var e=JSON.parse(this.stateMachine.currentServerState.inputPayload.inputValue);console.log("Move Piece From Server: ",e);var t=e.pieceIndex,i=e.rollValue;this.player.timer.stop(),this.player._moveOptioneInput.node.active=!1,this.player._pawnHandler.movePiece(t,i,!0)},r.canMovePiece=function(e,t){var i=this.player._gameOptions;return(0!=e||6==t)&&!(e+t>this.TotalPathCount(i))},r.TotalPathCount=function(e){return e.boardTilesCount},r.sendMovePieceMessage=function(e,t){c.Instance.setInput("MovePiece"),p.Instance.CurrentRoom.send(l.MOVE_PIECE,JSON.stringify({pieceIndex:e,rollValue:t})),console.log("Move Piece Message Sent : ","piece ",e,"with roll value ",t)},r.outComeClickedCallback=function(e){this.sendMovePieceMessage(this.player._currentSelectedPieceNumber,e),this.player._moveOptioneInput.node.active=!1,this.player._currentSelectedPieceNumber=-1},r.reset=function(){this.exitState()},i}(r));i._RF.pop()}}}));

System.register("chunks:///_virtual/NetworkConfig.ts",["./rollupPluginModLoBabelHelpers.js","cc","./PBLogger.ts"],(function(r){var e,t,o,i,a,n,u,s,l;return{setters:[function(r){e=r.applyDecoratedDescriptor,t=r.inheritsLoose,o=r.initializerDefineProperty,i=r.assertThisInitialized},function(r){a=r.cclegacy,n=r._decorator,u=r.sys,s=r.Component},function(r){l=r.PBLogger}],execute:function(){var c,p,f,m,g,d,y,b,P,h,v,w,S,I,F,C,Q;a._RF.push({},"58e6dpRDFVAqI8zfqb85x8E","NetworkConfig",void 0);var z=n.ccclass,L=n.property;r("NetworkConfig",(c=z("NetworkConfig"),p=L({tooltip:"Server host address"}),f=L({tooltip:"Server port number"}),m=L({tooltip:"Use SSL for connections"}),g=L({tooltip:"Player identifier"}),d=L({tooltip:"Room identifier"}),y=L({tooltip:"Name of the game"}),b=L({tooltip:"Whether the data was assigned from query parameters"}),c((v=e((h=function(r){function e(){for(var e,t=arguments.length,a=new Array(t),n=0;n<t;n++)a[n]=arguments[n];return e=r.call.apply(r,[this].concat(a))||this,o(e,"serverHost",v,i(e)),o(e,"serverPort",w,i(e)),o(e,"useSSL",S,i(e)),o(e,"userId",I,i(e)),o(e,"roomId",F,i(e)),o(e,"gameName",C,i(e)),o(e,"assignedFromQueryParams",Q,i(e)),e}t(e,r);var a=e.prototype;return a.parseQueryParams=function(){var r=this;if(l.debug("parseQueryParams"),u.isBrowser){var e=new URLSearchParams(window.location.search);l.debug("queryParams",e),this.updateConfigFromQueryParam(e,"userId",(function(e){l.debug("userId",e),r.userId=e,r.assignedFromQueryParams=!0})),this.updateConfigFromQueryParam(e,"roomId",(function(e){l.debug("roomId",e),r.roomId=e})),this.updateConfigFromQueryParam(e,"apiUrl",(function(e){r.serverHost=e})),this.updateConfigFromQueryParam(e,"apiPort",(function(e){var t=parseInt(e);isNaN(t)||(r.serverPort=t)})),this.updateConfigFromQueryParam(e,"useSSL",(function(e){r.useSSL="true"===e}))}},a.updateConfigFromQueryParam=function(r,e,t){var o=r.get(e);null!=o&&t(o)},e}(s)).prototype,"serverHost",[p],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return"localhost"}}),w=e(h.prototype,"serverPort",[f],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 2567}}),S=e(h.prototype,"useSSL",[m],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),I=e(h.prototype,"userId",[g],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),F=e(h.prototype,"roomId",[d],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return"testroom1"}}),C=e(h.prototype,"gameName",[y],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return"Pictionary"}}),Q=e(h.prototype,"assignedFromQueryParams",[b],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),P=h))||P));a._RF.pop()}}}));

System.register("chunks:///_virtual/NetworkManager.ts",["./rollupPluginModLoBabelHelpers.js","cc","./colyseus.mjs_cjs=&original=.js","./NetworkTypes.ts","./PlayerTypes.ts","./PbSaveSystem.ts","./NetworkConfig.ts","./PBLogger.ts","./colyseus.js"],(function(t){var n,e,o,i,r,a,s,c,u,h,l,f,d,g,m,p,C,v,_,k,w;return{setters:[function(t){n=t.applyDecoratedDescriptor,e=t.inheritsLoose,o=t.initializerDefineProperty,i=t.assertThisInitialized,r=t.extends,a=t.createClass,s=t.asyncToGenerator,c=t.regeneratorRuntime},function(t){u=t.cclegacy,h=t._decorator,l=t.EventTarget,f=t.CCBoolean,d=t.Component},null,function(t){g=t.ConnectionState,m=t.NetworkEvents,p=t.ServerMessageType},function(t){C=t.PlayerType},function(t){v=t.PbSaveSystem},function(t){_=t.NetworkConfig},function(t){k=t.PBLogger},function(t){w=t.default}],execute:function(){var y,S,N,E,R,D,I,T;u._RF.push({},"9772bNUiOdHpadY32imeLft","NetworkManager",void 0);var b=h.ccclass,M=h.property,x={roomId:"testroom1",reconnectionToken:"eyJ"},O=t("ConnectionStateChangeEvent",new l),P=t("ServerRoomStateChangeEvent",new l),z=t("ServerMessageEvent",new l);t("NetworkManager",(y=b("NetworkManager"),S=M({type:f,tooltip:"Enable development mode for additional logging"}),N=M({type:_,tooltip:"Network configuration settings"}),y(((T=function(t){function n(){for(var n,e=arguments.length,a=new Array(e),s=0;s<e;s++)a[s]=arguments[s];return n=t.call.apply(t,[this].concat(a))||this,o(n,"isDevMode",D,i(n)),o(n,"networkConfig",I,i(n)),n._client=void 0,n._room=void 0,n._currentConnectionState=g.INITIALIZING,n._reconnectionData=r({},x),n}e(n,t);var u=n.prototype;return u.onLoad=function(){if(n._instance)return this.log("NetworkManager instance already exists. Destroying duplicate."),void this.node.destroy();n._instance=this,this.networkConfig.parseQueryParams(),this.isDevMode||k.setProductionMode(!0)},u.start=function(){this.initializeClient(),k.info("============ Initializing client ========="),this.networkConfig.assignedFromQueryParams&&(k.info("============ Connecting to room ========="),this.connect(this.networkConfig.roomId,this.networkConfig.userId))},u.initializeClient=function(){var t=this.networkConfig.useSSL?"wss":"ws",n="";n=0==this.networkConfig.serverPort?t+"://"+this.networkConfig.serverHost:t+"://"+this.networkConfig.serverHost+":"+this.networkConfig.serverPort,this.log("Initializing client with endpoint: "+n),this._client=new w.Client(n)},u.shouldRejoin=function(){return!this.isDevMode&&(this._reconnectionData=v.LoadData(this.networkConfig.gameName),!!(this._reconnectionData&&this._reconnectionData.roomId&&this._reconnectionData.reconnectionToken)&&this._reconnectionData.roomId===this.networkConfig.roomId)},u.connect=function(){var t=s(c().mark((function t(n,e){var o;return c().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(k.info("============ Connecting to room from connect function ========="),this.updateConnectionState(g.CONNECTING),!this.shouldRejoin()){t.next=7;break}return this.log("Rejoining room",n),t.next=6,this.rejoin();case 6:return t.abrupt("return");case 7:return t.prev=7,o=this.createPlayerData(e),this.log("Joining with options ",{player:o}),t.next=12,this._client.joinById(n,{player:o});case 12:this._room=t.sent,this.initAfterJoin(n),t.next=20;break;case 16:throw t.prev=16,t.t0=t.catch(7),this.handleConnectionError(t.t0),t.t0;case 20:case"end":return t.stop()}}),t,this,[[7,16]])})));return function(n,e){return t.apply(this,arguments)}}(),u.initAfterJoin=function(t){this.updateConnectionState(g.JOINED_ROOM),this.log("Joined room "+t+" with sessionId: "+this._room.sessionId),this.initializeRoomCallbacks(),this.saveReconnectionData()},u.createAndJoinRoom=function(){var t=s(c().mark((function t(n,e){var o;return c().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return this.log("Creating room",n),this.updateConnectionState(g.CONNECTING),t.prev=2,o=this.createPlayerData(e),t.next=6,this._client.create("PictionaryRoom",{roomId:n,player:o,roomSettings:{maxClients:10}});case 6:this._room=t.sent,this.initAfterJoin(n),t.next=14;break;case 10:throw t.prev=10,t.t0=t.catch(2),this.handleConnectionError(t.t0),t.t0;case 14:case"end":return t.stop()}}),t,this,[[2,10]])})));return function(n,e){return t.apply(this,arguments)}}(),u.createPlayerData=function(t){return{userId:t,name:t,avatar:"randomProfilePicture",type:C.HUMAN}},u.initializeRoomCallbacks=function(){var t=this;console.log("============ Initializing room callbacks ========="),this._room?(this._room.onStateChange((function(t){P.emit(m.SERVER_ROOM_STATE_CHANGE,t)})),this._room.onLeave((function(n){4001===n?t.updateConnectionState(g.KICKED_OUT):t.updateConnectionState(g.DISCONNECTED)})),this._room.onMessage(p.KICKED_OUT,(function(){t.updateConnectionState(g.KICKED_OUT)})),this._room.onMessage("*",(function(t,n){z.emit(m.SERVER_MESSAGE,t,n)}))):this.log("Cannot initialize callbacks: Room is not defined")},u.updateConnectionState=function(t){if(this._currentConnectionState!==t){var n=this._currentConnectionState;this._currentConnectionState=t,this.log("Connection state changed: "+g[n]+" -> "+g[t]),O.emit(m.CONNECTION_STATE_CHANGE,n,t)}},u.reconnect=function(){var t=s(c().mark((function t(n,e,o){var i,r;return c().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(void 0===n&&(n=1),void 0===e&&(e=10),void 0===o&&(o=2e3),this._currentConnectionState===g.DISCONNECTED||this._currentConnectionState===g.RECONNECTING){t.next=6;break}return this.log("Cannot reconnect: Current state is "+g[this._currentConnectionState]),t.abrupt("return");case 6:return this._room&&this._room.state&&(i=this._room.state).roomSettings&&i.roomSettings.maxReconnectionAttempts&&(e=i.roomSettings.maxReconnectionAttempts),this.updateConnectionState(g.RECONNECTING),this.log("Reconnect attempt "+n+"/"+e),t.prev=9,t.next=12,this.delay(o);case 12:if(this._room&&this._room.reconnectionToken){t.next=14;break}throw new Error("Reconnection token not available");case 14:return t.next=16,this._client.reconnect(this._room.reconnectionToken);case 16:r=t.sent,this._room=r,this.saveReconnectionData(),this.initializeRoomCallbacks(),this.updateConnectionState(g.JOINED_ROOM),this.log("Reconnected successfully."),t.next=27;break;case 24:t.prev=24,t.t0=t.catch(9),this.handleReconnectionError(t.t0,n,e,o);case 27:case"end":return t.stop()}}),t,this,[[9,24]])})));return function(n,e,o){return t.apply(this,arguments)}}(),u.rejoin=function(){var t=s(c().mark((function t(n,e,o){var i,r;return c().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return void 0===n&&(n=1),void 0===e&&(e=10),void 0===o&&(o=2e3),this.log("Rejoin attempt "+n+"/"+e),t.prev=4,t.next=7,this.delay(o);case 7:if(this._reconnectionData&&this._reconnectionData.reconnectionToken){t.next=9;break}throw new Error("Reconnection data not available");case 9:return i=this._reconnectionData.roomId+":"+this._reconnectionData.reconnectionToken,k.info("Using formatted reconnection token: ",i),t.next=13,this._client.reconnect(i);case 13:r=t.sent,this._room=r,this.saveReconnectionData(),this.initializeRoomCallbacks(),this.updateConnectionState(g.JOINED_ROOM),this.log("Rejoined successfully."),t.next=24;break;case 21:t.prev=21,t.t0=t.catch(4),this.handleReconnectionError(t.t0,n,e,o,"reJoin");case 24:case"end":return t.stop()}}),t,this,[[4,21]])})));return function(n,e,o){return t.apply(this,arguments)}}(),u.delay=function(){var t=s(c().mark((function t(n){return c().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.abrupt("return",new Promise((function(t){return setTimeout(t,n)})));case 1:case"end":return t.stop()}}),t)})));return function(n){return t.apply(this,arguments)}}(),u.handleConnectionError=function(t){var n=(null==t?void 0:t.message)||"Unknown error";this.log("Error connecting to room:",n),this.updateConnectionState(g.DISCONNECTED)},u.handleReconnectionError=function(t,n,e,o,i){void 0===i&&(i="reconnect");var r=(null==t?void 0:t.message)||"Unknown error";this.log(i+" attempt "+n+" failed:",r),n<e||-1===e?"reconnect"===i?this.reconnect(n+1,e,o):this.rejoin(n+1,e,o):(this.log("Max reconnection attempts reached. Please check your network or contact support."),this.updateConnectionState(g.NOT_FOUND))},u.saveReconnectionData=function(){if(k.info("============ Saving reconnection data ========="),this._room&&this._room.reconnectionToken){var t=this._room.reconnectionToken;t.includes(":")&&(t=t.split(":")[1]),k.info("saving Reconnection token: ",t),this._reconnectionData={roomId:this.networkConfig.roomId,reconnectionToken:t},v.SaveData(this.networkConfig.gameName,this._reconnectionData),k.info("Reconnection data saved")}else this.log("Cannot save reconnection data: Room or reconnection token not available")},u.leaveRoom=function(){var t=this;this._room?(this.log("Leaving room"),this._room.leave(!0).then((function(){return t.log("Left room successfully")})).catch((function(n){return t.log("Error leaving room:",(null==n?void 0:n.message)||"Unknown error")}))):this.log("Cannot leave room: Room is not defined")},u.getMySessionId=function(){return this._room.sessionId},u.sendMessage=function(t,n){this._room?(this.isDevMode&&this.log("Sending message:",t,n),this._room.send(t,n)):this.log("Cannot send message: Room is not defined")},u.log=function(t){if(this.isDevMode){for(var n=arguments.length,e=new Array(n>1?n-1:0),o=1;o<n;o++)e[o-1]=arguments[o];e.length>0?k.info.apply(k,["[NetworkManager] "+t].concat(e)):k.info("[NetworkManager] "+t)}},a(n,[{key:"CurrentRoom",get:function(){return this._room}},{key:"CurrentConnectionState",get:function(){return this._currentConnectionState}}],[{key:"Instance",get:function(){if(!this._instance)throw new Error("NetworkManager instance is not initialized.");return this._instance}}]),n}(d))._instance=null,D=n((R=T).prototype,"isDevMode",[S],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),I=n(R.prototype,"networkConfig",[N],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),E=R))||E));u._RF.pop()}}}));

System.register("chunks:///_virtual/NetworkTypes.ts",["cc"],(function(N){var E;return{setters:[function(N){E=N.cclegacy}],execute:function(){E._RF.push({},"10066uvOhpLloJDo9VeOXZZ","NetworkTypes",void 0);N("NetworkEvents",function(N){return N[N.SERVER_ROOM_STATE_CHANGE=0]="SERVER_ROOM_STATE_CHANGE",N[N.CONNECTION_STATE_CHANGE=1]="CONNECTION_STATE_CHANGE",N[N.ROOM_STATUS_CHANGE=2]="ROOM_STATUS_CHANGE",N[N.SERVER_MESSAGE=3]="SERVER_MESSAGE",N}({})),N("ConnectionState",function(N){return N[N.INITIALIZING=0]="INITIALIZING",N[N.CONNECTING=1]="CONNECTING",N[N.CONNECTED=2]="CONNECTED",N[N.LOBBY=3]="LOBBY",N[N.JOINED_ROOM=4]="JOINED_ROOM",N[N.DISCONNECTED=5]="DISCONNECTED",N[N.RECONNECTING=6]="RECONNECTING",N[N.KICKED_OUT=7]="KICKED_OUT",N[N.NOT_FOUND=8]="NOT_FOUND",N[N.NO_INTERNET=9]="NO_INTERNET",N}({})),N("ServerMessageType",function(N){return N.NONE="none",N.KICKED_OUT="kicked_out",N.PLAYER_CAMEBACK="player_cameback",N.PLAYER_JOINED="player_joined",N}({}));E._RF.pop()}}}));

System.register("chunks:///_virtual/OutComesUIManager.ts",["./rollupPluginModLoBabelHelpers.js","cc","./PlayerAssets.ts"],(function(e){var t,n,r,s,o,u,i,a,c,l,m;return{setters:[function(e){t=e.applyDecoratedDescriptor,n=e.inheritsLoose,r=e.initializerDefineProperty,s=e.assertThisInitialized},function(e){o=e.cclegacy,u=e._decorator,i=e.Prefab,a=e.Sprite,c=e.instantiate,l=e.Component},function(e){m=e.PlayerAssets}],execute:function(){var h,C,p,O,f,g,d;o._RF.push({},"98c2etRT4xLCpWlrPsukRxY","OutComesUIManager",void 0);var y=u.ccclass,b=u.property;e("OutComesUIManager",(h=y("OutComesUIManager"),C=b({type:i}),p=b({type:a}),h((g=t((f=function(e){function t(){for(var t,n=arguments.length,o=new Array(n),u=0;u<n;u++)o[u]=arguments[u];return t=e.call.apply(e,[this].concat(o))||this,r(t,"outComesPrefab",g,s(t)),r(t,"outcomesUiBgSprite",d,s(t)),t.currentOutComesUI=[],t.currentOutComesValues=[],t.goldenDiceOutcomes=0,t.player=null,t}n(t,e);var o=t.prototype;return o.setGoldenDiceOutcomes=function(e){this.goldenDiceOutcomes=e},o.addOutCome=function(e){var t=c(this.outComesPrefab);t.setParent(this.node),t.getComponent(a).spriteFrame=m.instance.getDiceOutComesStackSprite(e),this.currentOutComesUI.length<this.goldenDiceOutcomes&&6==e&&(t.getComponent(a).spriteFrame=m.instance.getGoldenDiceOutComeSprite()),this.currentOutComesUI.push(t),this.currentOutComesValues.push(e),this.onOutComesChanged()},o.removeOutCome=function(e){var t=this.currentOutComesValues.indexOf(e);-1!=t&&(this.currentOutComesUI[t].destroy(),this.currentOutComesUI.splice(t,1),this.currentOutComesValues.splice(t,1)),this.onOutComesChanged()},o.clearAllOutComes=function(){this.currentOutComesUI.forEach((function(e){e.destroy()})),this.currentOutComesUI=[],this.currentOutComesValues=[],this.onOutComesChanged()},o.getOutComes=function(){return this.currentOutComesValues},o.onOutComesChanged=function(){this.currentOutComesValues.length<=0?this.player.enableName(!0):this.player.enableName(!1)},o.reset=function(e){this.clearAllOutComes();for(var t=0;t<e.length;t++)this.addOutCome(e[t])},o.setPlayer=function(e){this.player=e},o.enableOutComesBg=function(e){this.outcomesUiBgSprite.enabled=e},t}(l)).prototype,"outComesPrefab",[C],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),d=t(f.prototype,"outcomesUiBgSprite",[p],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),O=f))||O));o._RF.pop()}}}));

System.register("chunks:///_virtual/PawnHandler.ts",["cc","./Board.ts","./SNLTileType.ts","./GameMessageType.ts","./NetworkManager.ts","./PowerUp.ts","./AudioManager.ts","./AnimationTag.ts","./BoardData.ts","./UIManager.ts","./DeathPopup.ts","./DeathType.ts","./PlayerService.ts"],(function(e){var n,t,a,i,o,l,s,r,c,d,u,h,p,P,m,g,f,w,v,y;return{setters:[function(e){n=e.cclegacy,t=e.tween,a=e.Vec3,i=e.Color,o=e.math,l=e.Tween},function(e){s=e.Board},function(e){r=e.SNLTileType},function(e){c=e.GameMessageType},function(e){d=e.NetworkManager},function(e){u=e.PowerUp},function(e){h=e.AudioManager},function(e){p=e.AnimationTag},function(e){P=e.SnakePresets,m=e.GetEndTile,g=e.LadderPresets},function(e){f=e.UIManager},function(e){w=e.DeathPopup},function(e){v=e.DeathType},function(e){y=e.PlayerService}],execute:function(){n._RF.push({},"bc31cLhkdlDA6IfVmP//fcR","PawnHandler",void 0);var S=0,T=1;e("PawnHandler",function(){function e(e,n){this.player=void 0,this.pawns=void 0,this.state=S,this.moveDataQueue=[],this.pawnAnimation=null,this.currentHandlingPieceIndex=-1,this.currentHandlingMoveData=null,this.pieceAnimationsTag=p.PIECE_MOVE,this.hasKilledInThisMove=!1,this.pawns=e,this.player=n}var n=e.prototype;return n.setState=function(e){this.state=e},n.onPawnMoveAnimationComplete=function(){s.Instance.updateAllPiecePositions()},n.handleData=function(){if(this.hasKilledInThisMove=!1,0!=this.moveDataQueue.length){this.StopPieceSelectAnimations();var e=this.moveDataQueue.shift();this.setState(T),this.player.outComesUIManager.removeOutCome(e.rollValue),this.currentHandlingPieceIndex=e.pieceIndex,this.currentHandlingMoveData=e,console.log("Handling Move Data: ","piece ",e.pieceIndex,"with roll value ",e.rollValue),this.pawnAnimation=this.pawns[e.pieceIndex].move(e.rollValue,this.onPieceLandedOnTargetTile.bind(this)),this.pawnAnimation.tag(this.pieceAnimationsTag),this.pawnAnimation.start()}else this.state==T&&(this.setState(S),this.StartSelectAnimationsForValidMovePieces())},n.onPieceLandedOnTargetTile=function(){var e=this;console.log("Moved Piece to Target Tile: ",this.pawns[this.currentHandlingPieceIndex].pathNumber);var n=this.killOpponentPieces(this.pawns[this.currentHandlingPieceIndex]);if(null!=n)return n.call((function(){e.onPieceLandedOnTargetTile()})),void n.start();var t=this.handlePowerUps(this.pawns[this.currentHandlingPieceIndex]);if(null!=t)return h.instance.playSound("Power"),void t.start();var a=this.handleSnake(this.pawns[this.currentHandlingPieceIndex]);if(null==a){var i=this.handleLadder(this.pawns[this.currentHandlingPieceIndex]);null==i?(this.sendMoveAck(),this.onPawnMoveAnimationComplete()):i.start()}else a.start()},n.handlePowerUps=function(e){var n=s.Instance.getPowerUpType(e);switch(n){case r.ROCKET:return console.log("[PawnHandler] Landed on Rocket Powerup"),this.getRocketAnimation(e);case r.SHIELD:return console.log("[PawnHandler] Landed on Shield Powerup"),this.getShieldAnimation(e);default:return console.warn("[PawnHandler] Unhandled PowerUp Type: "+r[n]),null}},n.handleSnake=function(e){if(0==(s.Instance.tileTypes[e.pathNumber]&r.SNAKE))return null;if(console.log("---------------------Landed on Snake"),e.hasShield)return console.log("[PawnHandler] Piece has Shield. Skipping Snake Animation"),this.handleShield(e,!1),null;var n=s.Instance.snakesData.find((function(n){return n.startTile===e.pathNumber}));if(!n)return console.error("Couldn't Find Snake. Check Board Preset Data"),null;var t=P[n.snakePresetIndex],a=m(n.startTile,t.offset.x,t.offset.y,s.Instance.gameOptions.boardTilesCount,s.Instance.gameOptions.boardTilesPerRow),i=s.Instance.getPathTile(a,e.playerNumber,e.pieceNumber).worldPosition.clone(),o=this.player.playerData.name,l="<color=#FF0000><b>"+this.player.truncateName(o,8)+"</b> got bitten</color>",c=s.Instance.getSnake(n.snakePresetIndex);return c?(this.handleShield(e,!1),w.showDeathPopup(e.node.worldPosition.clone(),l,v.SNAKE_BITE),this.getSnakeAnimationFromPoints(e,i,c,a,t)):(console.error("Couldn't Find Snake. Check Board Preset Data"),null)},n.handleLadder=function(e){if(!(0!=(s.Instance.tileTypes[e.pathNumber]&r.LADDER)))return null;console.log("--------------------- Landed on Ladder");var n=s.Instance.ladders.find((function(n){return n.startTile==e.pathNumber}));if(null==n)return console.error("Couldnt FInd Ladder. Check Board Preset Data"),null;var t=g[n.ladderPresetIndex],a=m(n.startTile,t.offset.x,t.offset.y,s.Instance.gameOptions.boardTilesCount,s.Instance.gameOptions.boardTilesPerRow),i=s.Instance.getPathTile(a,e.playerNumber,e.pieceNumber).worldPosition.clone();return console.log("[Ladder] Final Position: ",i),this.getLadderMoveAnimation(e,e.node.worldPosition.clone(),i,a,t)},n.getSnakeAnimationFromPoints=function(e,n,i,o,l){var r=this,c=i.animationPoints.points,d=s.Instance.gameOptions.snakeAnimationTimePerTile,u=.25,p=.9*(l.offset.length*d),P=l.offset.length/p,m=t(e.node);m.delay(1),m.call((function(){r.player._isLocal&&(console.log("[PawnHandler] Playing Flash Effect"),f.instance.playFlashEffect()),t(e.node).to(.1,{scale:e.node.scale.clone().multiplyScalar(1.2)}).to(.1,{scale:e.node.scale.clone().multiplyScalar(.9)}).start()})),m.delay(.2),m.call((function(){h.instance.playSound("ChompSnakeBite"),e.scaleDownPieceWithWiggle(u).start()})),m.call((function(){r.AnimateSnakeHead(i.node).start()})),m.delay(.35),m.call((function(){h.instance.stopSound("ChompSnakeBite"),h.instance.playSound("SnakeBite"),e.animateSnakeBulge(p).start()}));Math.floor(c.length/2);for(var g=0;g<c.length-1;g++){var w=a.distance(c[g].worldPosition,c[g+1].worldPosition)/P;m.to(w,{worldPosition:c[g+1].worldPosition})}var v=a.distance(c[c.length-1].worldPosition,n)/P;return m.to(v,{worldPosition:n}),m.call((function(){e.scaleUpPieceWithBounce(u).start()})),m.delay(.35),m.call((function(){e.setPathNumber(o),e.updateParentNode(),r.onPieceLandedOnTargetTile()}))},n.getDistanceBetweenTwoTiles=function(e,n){var t=Math.floor(e/s.Instance.gameOptions.boardTilesPerRow),a=Math.floor(n/s.Instance.gameOptions.boardTilesPerRow),i=e%s.Instance.gameOptions.boardTilesPerRow,o=n%s.Instance.gameOptions.boardTilesPerRow;return Math.sqrt(Math.pow(t-a,2)+Math.pow(i-o,2))},n.getRocketAnimation=function(e){var n=this,i=s.Instance.getRocketLandingPathNumber(e);console.log("Rocket Landing Path Number: ",i);var o=s.Instance.getPowerupNode(e);s.Instance.removePowerUp(o.getComponent(u)),e.setPathNumber(i),e.updateParentNode();var l=s.Instance.getPathTile(i,e.playerNumber,e.pieceNumber).worldPosition.clone(),r=a.distance(e.node.worldPosition,l)/100*.15,c=l.clone().subtract(e.node.worldPosition).normalize();r=Math.max(r,.3);var d=t(e.node).call((function(){e.playPropellerAnimation(c)})).to(r,{worldPosition:l});return d.call((function(){e.stopPropellerAnimation(),n.onPieceLandedOnTargetTile()})),d.tag(this.pieceAnimationsTag),d},n.handleShield=function(e,n){console.log("[PawnHandler] Handling Shield for Piece: ",e.pieceNumber,"with active: ",n),e.setShieldActive(n)},n.getShieldAnimation=function(e){return e.setShieldActive(!0),null},n.getLadderMoveAnimation=function(e,n,a,o,l){var r=this,c=(e.pathNumber,l.offset.length*s.Instance.gameOptions.ladderAnimationTimePerTile);console.log("[Ladder] Distance: ",l.offset.length,"totalTime: ",c);var d=e.node.scale.clone(),u=t(e.node).call((function(){r.player._isLocal&&f.instance.playFlashEffect(new i(15,156,4)),h.instance.playSound("Ladder"),e.node.setWorldPosition(n)}));return u.to(c,{worldPosition:a,scale:d}),u.call((function(){console.log("[Ladder] Climb Animation complete"),e.setPathNumber(o),e.updateParentNode(),r.onPieceLandedOnTargetTile()})),u},n.killOpponentPieces=function(e){var n=this,i=s.Instance.getKillablePieces(e);if(null!=i){console.log("Killing Opponent Piece: ","piece ",i.pieceNumber,"of player ",i.playerNumber);var l=this.player.playerData.name,r=this.player.truncateName(l,8),c=i.playerNumber,d=y.instance.getPlayer(c),u=d.playerData.name,h="<color=#FF0000><b>"+r+"</b> killed <b>"+d.truncateName(u,8)+"!</b></color>";w.showDeathPopup(i.node.worldPosition.clone(),h,v.PAWN_KILL);var p=s.Instance.getPathPositions(i.pathNumber,0,i.playerNumber,i.pieceNumber);i.setPathNumber(0),i.updateParentNode(),i.updatePieceScale();var P=o.clamp(a.distance(i.node.worldPosition,p[p.length-1])/50*.15,.3,1);console.log("kill animation duration per tile: ",P),this.handleShield(i,!1);var m=t(i.node);return m.delay(1),m.call((function(){i.onKilled(),i.node.setWorldPosition(p[0])})),m.to(P,{worldPosition:p[p.length-1]},{progress:function(e,t,a,i){return o.lerp(e,t,n.easeOutBack(i))}}),m.call((function(){})),this.hasKilledInThisMove=!0,m}},n.easeOutBack=function(e){var n=1.70158*1.5;return 1+3.5523700000000002*Math.pow(e-1,3)+n*Math.pow(e-1,2)},n.movePiece=function(e,n,t){this.moveDataQueue.push({pieceIndex:e,rollValue:n,sendAck:t}),this.state==S&&this.handleData()},n.updateShields=function(e){for(var n=0;n<this.pawns.length;n++)this.handleShield(this.pawns[n],e.playersData[this.player.playerNumber].hasShield[n])},n.Reset=function(e){this.stopAllAnimations(),this.moveDataQueue=[],this.setState(S),this.ResetPawnPositions(e),this.updateShields(e),s.Instance.reset(e)},n.ResetPawnPositions=function(e){for(var n=e.playersData[this.player.playerNumber],t=0;t<n.pieces.length;t++)this.pawns[t].reset(n.pieces[t]);console.log("Reset Pawn Positions of Player: ",this.player.playerNumber)},n.stopAllAnimations=function(){this.StopPieceSelectAnimations(),l.stopAllByTag(this.pieceAnimationsTag)},n.sendMoveAck=function(){d.Instance.CurrentRoom.send(c.MOVE_PIECE_ACK,JSON.stringify({}))},n.isAnimating=function(){return this.state==T},n.StartSelectAnimationsForValidMovePieces=function(){if(this.player._isLocal)for(var e=this.player._stateMachine.movePieceState.getAllMovablePieces(),n=0;n<e.length;n++)e[n].playSelectAnimation()},n.StopPieceSelectAnimations=function(){if(this.player._isLocal)for(var e=0;e<this.pawns.length;e++)this.pawns[e].stopSelectAnimation()},n.AnimateSnakeHead=function(e){var n=e.children[0].getChildByName("SnakeHead");if(null!=n){console.log("Animating Snake Head: ",n);var i=t(n),o=n.scale.clone();return i.to(.15,{scale:new a(.6*o.x,1.8*o.y,o.z)}),i.to(.2,{scale:new a(.85*o.x,1.3*o.y,o.z)}),i.to(.15,{scale:o}),i}},e}());n._RF.pop()}}}));

System.register("chunks:///_virtual/PbExtensions.ts",["cc","./PBLogger.ts"],(function(){var t,n,e,o;return{setters:[function(o){t=o.cclegacy,n=o.Vec3,e=o.Component},function(t){o=t.PBLogger}],execute:function(){t._RF.push({},"1c08a64YbtNj7DJ10b2ewf1","PbExtensions",void 0),n.prototype.clampMagnitude=function(t,n){if(!(t>n)){var e=this.length();return e>n?(this.normalize(),this.multiplyScalar(n)):e<t&&(this.normalize(),this.multiplyScalar(t)),this}console.error("min should be less than max")},e.prototype.log=function(){for(var t=this.constructor.name,n=arguments.length,e=new Array(n),r=0;r<n;r++)e[r]=arguments[r];o.info.apply(o,[t+" "].concat(e))},t._RF.pop()}}}));

System.register("chunks:///_virtual/PBLogger.ts",["cc"],(function(e){var n;return{setters:[function(e){n=e.cclegacy}],execute:function(){n._RF.push({},"37ee4vwAzBCGKf2YGiWXgdA","PBLogger",void 0);var r=e("LogLevel",function(e){return e[e.Debug=0]="Debug",e[e.Info=1]="Info",e[e.Warning=2]="Warning",e[e.Error=3]="Error",e}({})),o=e("PBLogger",function(){function e(){}return e.debug=function(e){for(var n=arguments.length,o=new Array(n>1?n-1:0),t=1;t<n;t++)o[t-1]=arguments[t];this.log(r.Debug,e,o)},e.info=function(e){for(var n=arguments.length,o=new Array(n>1?n-1:0),t=1;t<n;t++)o[t-1]=arguments[t];this.log(r.Info,e,o)},e.warning=function(e){for(var n=arguments.length,o=new Array(n>1?n-1:0),t=1;t<n;t++)o[t-1]=arguments[t];this.log(r.Warning,e,o)},e.error=function(e){for(var n=arguments.length,o=new Array(n>1?n-1:0),t=1;t<n;t++)o[t-1]=arguments[t];this.log(r.Error,e,o)},e.log=function(e,n,o){if(e>=this.currentLevel){var t,i=r[e]+": "+n;if((t=console).log.apply(t,[i].concat(o)),this.isProduction&&window.ReactNativeWebView)try{var c={event:"log",level:r[e],message:i,params:o};window.ReactNativeWebView.postMessage(JSON.stringify(c))}catch(e){console.error("Failed to send log to ReactNativeWebView:",e)}}},e.setLevel=function(e){this.currentLevel=e},e.setProductionMode=function(e){this.isProduction=e},e}());o.currentLevel=r.Debug,o.isProduction=!1,n._RF.pop()}}}));

System.register("chunks:///_virtual/PbSaveSystem.ts",["cc","./PBLogger.ts"],(function(e){var t,a,n,o;return{setters:[function(e){t=e.cclegacy,a=e._decorator,n=e.sys},function(e){o=e.PBLogger}],execute:function(){var c;t._RF.push({},"d9257fcq4hD5I53zV94l39P","PbSaveSystem",void 0);var r=a.ccclass;e("PbSaveSystem",r("PbSaveSystem")(c=function(){function e(){}return e.SaveData=function(e,t){o.info("============ Saving data in pb save system ========="),n.localStorage.setItem(e,JSON.stringify(t))},e.LoadData=function(e){return JSON.parse(n.localStorage.getItem(e))},e.RemoveData=function(e){n.localStorage.removeItem(e)},e.ClearAllData=function(){n.localStorage.clear()},e}())||c);t._RF.pop()}}}));

System.register("chunks:///_virtual/Piece.ts",["./rollupPluginModLoBabelHelpers.js","cc","./AudioManager.ts","./Board.ts","./PlayerAssets.ts","./PoolManager.ts","./UIManager.ts"],(function(e){var t,i,n,o,l,a,r,c,s,p,u,h,d,m,f,b,y,v,P,N,g,S,A;return{setters:[function(e){t=e.applyDecoratedDescriptor,i=e.inheritsLoose,n=e.initializerDefineProperty,o=e.assertThisInitialized},function(e){l=e.cclegacy,a=e._decorator,r=e.Sprite,c=e.CCInteger,s=e.Node,p=e.Label,u=e.Animation,h=e.Prefab,d=e.CCBoolean,m=e.tween,f=e.Vec3,b=e.quat,y=e.Quat,v=e.Component},function(e){P=e.AudioManager},function(e){N=e.Board},function(e){g=e.PlayerAssets},function(e){S=e.PoolManager},function(e){A=e.UIManager}],execute:function(){var w,O,B,E,C,z,I,T,k,M,R,D,L,U,W,x,F,_,j,Z,K,H,q,Q,V,Y,G;l._RF.push({},"ad886ALsg9N9pYdNKZTAHwE","Piece",void 0);var J=a.ccclass,X=a.property,$=.9;e("Piece",(w=J("Piece"),O=X({type:r}),B=X({type:c}),E=X({type:c}),C=X({type:r}),z=X({type:s}),I=X({type:p}),T=X({type:u}),k=X({type:u}),M=X({type:h}),R=X({type:d}),D=X({type:u}),L=X({type:s}),w((x=t((W=function(e){function t(){for(var t,i=arguments.length,l=new Array(i),a=0;a<i;a++)l[a]=arguments[a];return t=e.call.apply(e,[this].concat(l))||this,n(t,"pieceSprite",x,o(t)),n(t,"pieceNumber",F,o(t)),n(t,"playerNumber",_,o(t)),n(t,"labelSprite",j,o(t)),n(t,"labelNode",Z,o(t)),n(t,"pieceLabel",K,o(t)),t.moveData=[],t.previousPathNumber=0,t.pathNumber=0,n(t,"propellerAnimation",H,o(t)),n(t,"selectAnimation",q,o(t)),n(t,"moveRippleEffect",Q,o(t)),n(t,"hasShield",V,o(t)),n(t,"shieldAnimation",Y,o(t)),n(t,"snakeBumpNode",G,o(t)),t.player=null,t}i(t,e);var l=t.prototype;return l.Initialize=function(e,t,i){this.labelNode.active=!1,this.playerNumber=e,this.pieceNumber=t,this.player=i,this.pieceSprite.spriteFrame=g.instance.getPawnSprite(e),this.labelSprite.color=g.instance.getPawnColor(e),this.pieceLabel.string=this.getPieceLabel(i.playerData.name),this.updatePieceScale()},l.move=function(e,t){var i=this.pathNumber+e;return this.isOnBase()&&6==e&&(this.labelNode.active=!0,i=1),this.setPathNumber(i),this.updateParentNode(),this.getMoveAnimation(i,t)},l.moveToTargetPathNumber=function(e,t,i){return void 0===i&&(i=.12),this.setPathNumber(e),this.updateParentNode(),this.getMoveAnimation(e,t,i)},l.getMoveAnimation=function(e,t,i){var n=this;void 0===i&&(i=.12);for(var o=this.node.worldPosition.clone(),l=N.Instance.getPathPositions(this.previousPathNumber,e,this.playerNumber,this.pieceNumber),a=(N.Instance.getPathTile(e,this.playerNumber,this.pieceNumber),m(this.node).call((function(){n.node.setWorldPosition(o)}))),r=1;r<l.length;r++)a.then(this.jumpToNextTileAnimation(this.node,l[r-1],l[r],i));return a.call((function(){null!=t&&(console.log("[Piece] Calling on pieces  landed CallBack"),t())})),a},l.jumpToNextTileAnimation=function(e,t,i,n){var o=this;void 0===n&&(n=.12);var l=t.clone().add(i).multiplyScalar(.5),a=e.scale.clone(),r=m(e).call((function(){P.instance.playSound("Move"),e.setWorldPosition(t)}));return r.call((function(){o.playMoveRippleEffect(t.clone())})),r.to(n,{worldPosition:l,scale:a.clone().multiplyScalar(1.25)}),r.to(n,{worldPosition:i,scale:a}),r},l.setPathNumber=function(e){this.previousPathNumber=this.pathNumber,this.pathNumber=e},l.updateParentNode=function(e){void 0===e&&(e=-1),-1==e&&(e=this.pathNumber);var t=N.Instance.getPathTile(e,this.playerNumber,this.pieceNumber);this.node.setParent(t,!0)},l.updatePiecePosition=function(e){void 0===e&&(e=-1),-1==e&&(e=this.pathNumber),this.node.setPosition(f.ZERO.clone());N.Instance.getPathTile(e,this.playerNumber,this.pieceNumber);N.Instance.piecesOnTile(e,this.playerNumber)>1&&this.node.setWorldPosition(this.node.worldPosition.add(this.getOffsetPosition())),this.updatePieceScale()},l.getOffsetPosition=function(){if(1==this.node.parent.children.length||0==this.pathNumber)return f.ZERO.clone();var e=this.myIndexInTile(this.node.parent),t=this.node.parent.children.length;return new f((e-(t-1)/2)*(t>3?7.5:15),0,0)},l.updatePieceScale=function(){var e=N.Instance.getPawnsCountOnTile(this.pathNumber),t=f.ONE.clone(),i=$;i=this.isOnBase()?$:e>4?.4:e>2?.65:.9,this.node.scale=t.multiplyScalar(i)},l.myIndexInTile=function(e){for(var t=0;t<e.children.length;t++)if(e.children[t]==this.node)return t;return-1},l.animatePieceToSize=function(e){m(this.node).to(.5,{scale:f.ONE.clone().multiplyScalar(e)}).start()},l.isOnBase=function(){return 0==this.pathNumber},l.playPropellerAnimation=function(e){this.propellerAnimation.node.active=!0,this.propellerAnimation.node.setPosition(f.ZERO.clone()),this.setNodeUpDirection(this.propellerAnimation.node,e),this.propellerAnimation.node.setWorldPosition(this.node.worldPosition.clone().subtract(this.propellerAnimation.node.up.multiplyScalar(50))),this.propellerAnimation.play(),P.instance.playSound("Propeller")},l.setNodeUpDirection=function(e,t){var i=t.clone().normalize(),n=new f(0,0,1),o=new f(0,0,0);f.cross(o,i,n).normalize();var l=b();y.fromAxes(l,o,i,n),e.setWorldRotation(l)},l.stopPropellerAnimation=function(){this.propellerAnimation.stop(),this.propellerAnimation.node.active=!1,P.instance.stopSound("Propeller")},l.playSelectAnimation=function(){this.selectAnimation.node.active=!0;var e=this.selectAnimation.node.getComponent(r);null!=e&&(e.color=g.instance.getPawnColor(this.playerNumber)),this.selectAnimation.play()},l.stopSelectAnimation=function(){this.selectAnimation.stop(),this.selectAnimation.node.active=!1},l.playMoveRippleEffect=function(e){var t=S.instance.getObjectFromPool(this.moveRippleEffect);t.setParent(N.Instance.node,!0),t.setWorldPosition(e);var i=t.getComponent(r);null!=i&&(i.color=g.instance.getPawnColor(this.playerNumber)),t.getComponent(u).play()},l.setShieldActive=function(e){if(this.hasShield!=e){e&&P.instance.playSound("Power"),this.hasShield=e;var t=this.shieldAnimation.node.getComponent(r);null!=t&&(t.color=g.instance.getPawnColor(this.playerNumber)),e?(console.log("[Piece] Playing Shield Animation"),this.shieldAnimation.node.active=!0,this.shieldAnimation.play()):(console.log("[Piece] Stopping Shield Animation"),this.shieldAnimation.stop(),this.shieldAnimation.node.active=!1)}},l.reset=function(e){this.setPathNumber(e),this.updateParentNode(),this.updatePiecePosition(),this.stopPropellerAnimation()},l.scaleDownPiece=function(e){var t=this;return void 0===e&&(e=.1),m(this.pieceSprite.node).call((function(){t.pieceSprite.node.active=!0})).to(e,{scale:this.pieceSprite.node.scale.clone().multiplyScalar(0)}).call((function(){t.pieceSprite.node.active=!1}))},l.scaleDownPieceWithWiggle=function(e){var t=this;return void 0===e&&(e=.25),m(this.pieceSprite.node).call((function(){t.pieceSprite.node.active=!0})).to(.3*e,{scale:this.pieceSprite.node.scale.clone().multiplyScalar(.8),angle:15}).to(.3*e,{scale:this.pieceSprite.node.scale.clone().multiplyScalar(.5),angle:-15}).to(.4*e,{scale:this.pieceSprite.node.scale.clone().multiplyScalar(0),angle:0}).call((function(){t.pieceSprite.node.active=!1}))},l.scaleDownBump=function(e){var t=this;return void 0===e&&(e=.1),m(this.snakeBumpNode).call((function(){t.snakeBumpNode.active=!0,t.snakeBumpNode.scale=f.ONE.clone()})).to(e,{scale:f.ONE.clone().multiplyScalar(.5)}).call((function(){t.snakeBumpNode.active=!1}))},l.animateSnakeBulge=function(e){var t=this;return void 0===e&&(e=.1),m(this.snakeBumpNode).delay(.1).call((function(){t.snakeBumpNode.active=!0,t.snakeBumpNode.scale=f.ONE.clone().multiplyScalar(1.2)})).to(e,{scale:f.ONE.clone().multiplyScalar(.5)}).call((function(){t.snakeBumpNode.active=!1}))},l.scaleUpPiece=function(e){var t=this;return void 0===e&&(e=.1),m(this.pieceSprite.node).call((function(){t.pieceSprite.node.active=!0})).to(e,{scale:f.ONE.clone().multiplyScalar($)})},l.scaleUpPieceWithBounce=function(e){var t=this;return void 0===e&&(e=.25),m(this.pieceSprite.node).call((function(){t.pieceSprite.node.active=!0,t.pieceSprite.node.scale=f.ONE.clone().multiplyScalar(0)})).to(.4*e,{scale:f.ONE.clone().multiplyScalar(1.3*$)}).to(.3*e,{scale:f.ONE.clone().multiplyScalar(.8*$)}).to(.3*e,{scale:f.ONE.clone().multiplyScalar($)})},l.onKilled=function(){P.instance.playSound("Kill"),this.player._isLocal&&(A.instance.playFlashEffect(),this.labelNode.active=!1)},l.getPieceLabel=function(e){var t=e.split(" ")[0].trim();return t.length>=4?(t[0]+t[2]).toUpperCase():t.length>=2?t.substring(0,2).toUpperCase():1===t.length?t.toUpperCase():"??"},t}(v)).prototype,"pieceSprite",[O],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),F=t(W.prototype,"pieceNumber",[B],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),_=t(W.prototype,"playerNumber",[E],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),j=t(W.prototype,"labelSprite",[C],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Z=t(W.prototype,"labelNode",[z],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),K=t(W.prototype,"pieceLabel",[I],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),H=t(W.prototype,"propellerAnimation",[T],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),q=t(W.prototype,"selectAnimation",[k],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Q=t(W.prototype,"moveRippleEffect",[M],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),V=t(W.prototype,"hasShield",[R],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),Y=t(W.prototype,"shieldAnimation",[D],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),G=t(W.prototype,"snakeBumpNode",[L],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),U=W))||U));l._RF.pop()}}}));

System.register("chunks:///_virtual/Player.ts",["./rollupPluginModLoBabelHelpers.js","cc","./NetworkManager.ts","./Dice.ts","./Board.ts","./Piece.ts","./PlayerAssets.ts","./Timer.ts","./PawnHandler.ts","./OutComesUIManager.ts","./MoveOptionsInput.ts","./PlayerStateMachine.ts","./PlayerAvatar.ts"],(function(e){var t,i,n,r,a,o,l,s,u,c,p,h,f,m,y,g,b,P,d,w,I,v,A,_,N,S;return{setters:[function(e){t=e.applyDecoratedDescriptor,i=e.inheritsLoose,n=e.initializerDefineProperty,r=e.assertThisInitialized},function(e){a=e.cclegacy,o=e._decorator,l=e.CCInteger,s=e.Label,u=e.Sprite,c=e.Widget,p=e.Node,h=e.Vec3,f=e.instantiate,m=e.tween,y=e.Component},function(e){g=e.NetworkManager},function(e){b=e.Dice},function(e){P=e.Board},function(e){d=e.Piece},function(e){w=e.PlayerAssets},function(e){I=e.Timer},function(e){v=e.PawnHandler},function(e){A=e.OutComesUIManager},function(e){_=e.MoveOptionsInput},function(e){N=e.PlayerStateMachine},function(e){S=e.PlayerAvatar}],execute:function(){var M,z,C,B,O,D,L,U,T,R,E,H,F,G,W,x,V,k,j,Y,Z,q,J,K,Q,X,$,ee,te,ie,ne,re,ae,oe,le;a._RF.push({},"6875aPM8AZHuowl/BTLwbhn","Player",void 0);var se=o.ccclass,ue=o.property,ce=e("PlayerState",function(e){return e[e.IDLE=0]="IDLE",e[e.ROLLING=1]="ROLLING",e[e.MOVING_PIECE=2]="MOVING_PIECE",e}({}));e("Player",(M=se("Player"),z=ue({type:l}),C=ue({type:s}),B=ue({type:u}),O=ue({type:u}),D=ue({type:u}),L=ue({type:c}),U=ue({type:I}),T=ue({type:u}),R=ue({type:b}),E=ue({type:p}),H=ue({type:u}),F=ue({type:u}),G=ue({type:p}),W=ue({type:S}),x=ue({type:A}),V=ue({type:p}),M((Y=t((j=function(e){function t(){for(var t,i=arguments.length,a=new Array(i),o=0;o<i;o++)a[o]=arguments[o];return t=e.call.apply(e,[this].concat(a))||this,n(t,"playerNumber",Y,r(t)),n(t,"playerName",Z,r(t)),n(t,"profileImage",q,r(t)),n(t,"profilePicHolder",J,r(t)),n(t,"borderSprite",K,r(t)),n(t,"profilePicWidget",Q,r(t)),n(t,"timer",X,r(t)),n(t,"timerSprite",$,r(t)),n(t,"dice",ee,r(t)),n(t,"diceRoot",te,r(t)),n(t,"diceBgSprite",ie,r(t)),n(t,"namePlateSprite",ne,r(t)),n(t,"piecesBase",re,r(t)),n(t,"playerAvatar",ae,r(t)),t.bases=[],t.sortedBasesHorizontalPosition=[],t.pawns=[],t.playerData=null,t.state=ce.IDLE,t._isLocal=!1,t._isInitialized=!1,t._currentPiecesData=[0,0,0,0],t._currentDiceValue=1,t._pieceAnimations=[],t._isProfileInitialized=!1,t._board=null,t._myBasesParent=null,t._pawnHandler=null,n(t,"outComesUIManager",oe,r(t)),n(t,"dicePointingArrow",le,r(t)),t.diceArrowInitialPosition=new h(0,0,0),t._currentSelectedPieceNumber=-1,t._moveOptioneInput=null,t._gameOptions=null,t._stateMachine=void 0,t.profileImageUrl="",t.arrowAnimation=null,t}i(t,e);var a=t.prototype;return a.onLoad=function(){this._pawnHandler=new v(this.pawns,this),this.diceArrowInitialPosition=this.dicePointingArrow.getPosition(),null==this._stateMachine&&(this._stateMachine=new N(this))},a.start=function(){this.createMoveOptionsUI()},a.update=function(e){this._stateMachine.updateState(e)},a.createMoveOptionsUI=function(){var e=f(w.instance.moveOptionsUI);e.setParent(this.node),e.setPosition(new h(0,0,0)),this._moveOptioneInput=e.getComponent(_),this._moveOptioneInput.node.active=!1},a.initialize=function(e,t,i){var n=this;console.log("[Player] Initializing Player : ",this.playerNumber),this._board=t,this.playerNumber=i;var r=e.playersData.find((function(e){return e.playerNumber==n.playerNumber}));if(this.playerData=r,console.log("[Player] My Profile Data : ",r),null!=r){r.sessionId==g.Instance.CurrentRoom.sessionId&&(console.log("Setting Local Player"),this._isLocal=!0,this.timer.setLocal(this._isLocal)),this.loadProfile(r),this._myBasesParent=t.getPlayerBase(this.playerNumber);var a=e.gameOptions.piecesPerPlayer;this.createPawns(a),this._gameOptions=e.gameOptions,this.setDiceBgColor(),this.setBorderAndTimerColor(),this.outComesUIManager.setPlayer(this)}},a.loadProfile=function(e){if(!this._isProfileInitialized&&null!=e){var t=e.name;this._isLocal&&(t="You"),this.playerName.string=this.truncateName(t,8),this.profileImageUrl=e.avatar,this._isInitialized=!0,this.loadProfileImage(),this.profileImage.node.on(p.EventType.TOUCH_START,this.openProfile,this)}},a.loadProfileImage=function(){this.profileImageUrl?this.playerAvatar.setAvatarFromUrl(this.profileImageUrl):console.warn("[Player] No profile image URL provided")},a.createBases=function(e){var t=this;console.log("[Player] Creating Bases for Player : ",this.playerNumber);var i=w.instance.getPawnWidth();this.bases=Array.from({length:e},(function(e,n){var r=f(w.instance.basePrefab),a=(i+0)*n;return r.setParent(t._myBasesParent,!0),r.name="Base"+n,r.setPosition(new h(a,0,0)),r})),this.sortedBasesHorizontalPosition=this.bases.sort((function(e,t){return e.position.x-t.position.x}))},a.createPawns=function(e){console.log("[Player] Creating Pawns for Player : ",this.playerNumber);for(var t=w.instance.pawnPrefab,i=0;i<e;i++){this.log("CREATING PAWN ",i),this.log("BASES : ",this.bases);var n=f(t);n.setParent(this.piecesBase,!0),n.setPosition(new h(0,0,0));var r=n.getComponent(d);r.Initialize(this.playerNumber,i,this),this.pawns.push(r),P.Instance.addPiece(r)}},a.onServerStateChange=function(e){null==this._stateMachine&&(this._stateMachine=new N(this)),this._stateMachine.onServerStateChange(e)},a.onReconnection=function(e){this._stateMachine.onReconnection(e)},a.isMyTurn=function(e){return this.playerNumber==e},a.isAnyPieceSelected=function(){return-1!=this._currentSelectedPieceNumber},a.truncateName=function(e,t){var i=e.indexOf(" ");return-1!=i&&(e=e.substring(0,i)),e.length>t?e.substring(0,t)+"..":e},a.setPlayerNumber=function(e){this.playerNumber=e},a.enableName=function(e){},a.arrowPointToDiceAnimation=function(e){var t;null==(t=this.arrowAnimation)||t.stop(),console.log("arrowPointToDiceAnimation : ",e),e?(console.log("Enabling Arrow"),this.dicePointingArrow.active=!0,this.dicePointingArrow.setPosition(this.diceArrowInitialPosition),this.arrowAnimation=m(this.dicePointingArrow),this.arrowAnimation.by(.2,{position:new h(-10,-0,0)}),this.arrowAnimation.by(.2,{position:new h(10,0,0)}),this.arrowAnimation.union(),this.arrowAnimation.repeatForever(),this.arrowAnimation.start()):(console.log("Disabling Arrow"),this.dicePointingArrow.active=!1,this.arrowAnimation.stop())},a.isFinished=function(){for(var e=this._gameOptions,t=0;t<this.pawns.length;t++)if(this.pawns[t].pathNumber==P.Instance.TotalPathCount(e))return!0;return!1},a.setDiceBgColor=function(){this.diceBgSprite.color=w.instance.getDiceBgColor(this.playerNumber)},a.setBorderAndTimerColor=function(){this.borderSprite&&(this.borderSprite.color=w.instance.getPawnColor(this.playerNumber))},a.GetProfileSpriteFrame=function(){return this.profileImage.spriteFrame},a.openProfile=function(){var e=this,t=this._stateMachine.currentServerState.playersData.find((function(t){return t.playerNumber==e.playerNumber})).userId;console.log("Opening Profile of User : ",t)},t}(y)).prototype,"playerNumber",[z],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Z=t(j.prototype,"playerName",[C],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),q=t(j.prototype,"profileImage",[B],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),J=t(j.prototype,"profilePicHolder",[O],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),K=t(j.prototype,"borderSprite",[D],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),Q=t(j.prototype,"profilePicWidget",[L],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),X=t(j.prototype,"timer",[U],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),$=t(j.prototype,"timerSprite",[T],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),ee=t(j.prototype,"dice",[R],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),te=t(j.prototype,"diceRoot",[E],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),ie=t(j.prototype,"diceBgSprite",[H],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),ne=t(j.prototype,"namePlateSprite",[F],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),re=t(j.prototype,"piecesBase",[G],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),ae=t(j.prototype,"playerAvatar",[W],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),oe=t(j.prototype,"outComesUIManager",[x],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),le=t(j.prototype,"dicePointingArrow",[V],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),k=j))||k));a._RF.pop()}}}));

System.register("chunks:///_virtual/PlayerAssets.ts",["./rollupPluginModLoBabelHelpers.js","cc","./SNLTileType.ts"],(function(e){var t,r,i,n,o,a,p,u,l,c,s,f;return{setters:[function(e){t=e.applyDecoratedDescriptor,r=e.inheritsLoose,i=e.initializerDefineProperty,n=e.assertThisInitialized},function(e){o=e.cclegacy,a=e._decorator,p=e.SpriteFrame,u=e.Color,l=e.Prefab,c=e.CCFloat,s=e.Component},function(e){f=e.SNLTileType}],execute:function(){var b,y,w,g,m,S,d,C,P,h,z,O,D,v,U,k,T,A,L,W,B,I,F,_,E,H,M,R,G,N,j,x;o._RF.push({},"3dca6ykWf9GJYmMpMz2AaB9","PlayerAssets",void 0);var J=a.ccclass,K=a.property;e("PlayerAssets",(b=J("PlayerAssets"),y=K({type:p}),w=K({type:u}),g=K({type:u}),m=K({type:l}),S=K({type:c}),d=K({type:l}),C=K({type:p}),P=K({type:p}),h=K({type:p}),z=K({type:l}),O=K({type:[p]}),D=K({type:l}),v=K({type:[l]}),U=K({type:[l]}),b(((x=function(e){function t(){for(var t,r=arguments.length,o=new Array(r),a=0;a<r;a++)o[a]=arguments[a];return t=e.call.apply(e,[this].concat(o))||this,i(t,"pawnSprites",A,n(t)),i(t,"pawnColors",L,n(t)),i(t,"DiceBgColors",W,n(t)),i(t,"pawnPrefab",B,n(t)),i(t,"pawnWidth",I,n(t)),i(t,"basePrefab",F,n(t)),i(t,"diceOutComeSprites",_,n(t)),i(t,"diceOutComesStackSprites",E,n(t)),i(t,"goldenDiceOutComeSprite",H,n(t)),i(t,"moveOptionsUI",M,n(t)),i(t,"powerUpSprites",R,n(t)),i(t,"powerUpPrefab",G,n(t)),i(t,"snakePrefabs",N,n(t)),i(t,"ladderPrefabs",j,n(t)),t}r(t,e);var o=t.prototype;return o.onLoad=function(){t.instance=this},o.getPawnSprite=function(e){return this.pawnSprites[e]},o.getDiceOutComeSprite=function(e){return this.diceOutComeSprites[e]},o.getDiceOutComesStackSprite=function(e){return this.diceOutComesStackSprites[e]},o.getGoldenDiceOutComeSprite=function(){return this.goldenDiceOutComeSprite},o.getPawnWidth=function(){return this.pawnWidth},o.getPowerUpSprite=function(e){var t=e&f.SHIELD,r=e&f.ROCKET;return t?this.powerUpSprites[0]:r?this.powerUpSprites[1]:void 0},o.getPawnColor=function(e){return this.pawnColors[e]},o.getDiceBgColor=function(e){return u.WHITE.clone()},t}(s)).instance=null,A=t((T=x).prototype,"pawnSprites",[y],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),L=t(T.prototype,"pawnColors",[w],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),W=t(T.prototype,"DiceBgColors",[g],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),B=t(T.prototype,"pawnPrefab",[m],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),I=t(T.prototype,"pawnWidth",[S],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 50}}),F=t(T.prototype,"basePrefab",[d],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),_=t(T.prototype,"diceOutComeSprites",[C],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),E=t(T.prototype,"diceOutComesStackSprites",[P],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),H=t(T.prototype,"goldenDiceOutComeSprite",[h],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),M=t(T.prototype,"moveOptionsUI",[z],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),R=t(T.prototype,"powerUpSprites",[O],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),G=t(T.prototype,"powerUpPrefab",[D],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),N=t(T.prototype,"snakePrefabs",[v],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),j=t(T.prototype,"ladderPrefabs",[U],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),k=T))||k));o._RF.pop()}}}));

System.register("chunks:///_virtual/PlayerAvatar.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(e){var t,r,a,i,n,o,l,s,u,c,p,f;return{setters:[function(e){t=e.applyDecoratedDescriptor,r=e.inheritsLoose,a=e.initializerDefineProperty,i=e.assertThisInitialized},function(e){n=e.cclegacy,o=e._decorator,l=e.Sprite,s=e.Node,u=e.assetManager,c=e.SpriteFrame,p=e.Texture2D,f=e.Component}],execute:function(){var h,v,d,y,m,g,A;n._RF.push({},"dd0e8CdPN5Aia144GJllV/e","PlayerAvatar",void 0);var T=o.ccclass,w=o.property;e("PlayerAvatar",(h=T("PlayerAvatar"),v=w({type:l,tooltip:"Player Avatar"}),d=w({type:l,tooltip:"Player Avatar Outline"}),h((g=t((m=function(e){function t(){for(var t,r=arguments.length,n=new Array(r),o=0;o<r;o++)n[o]=arguments[o];return t=e.call.apply(e,[this].concat(n))||this,a(t,"playerAvatar",g,i(t)),a(t,"outline",A,i(t)),t.enableOnClick=!1,t.userId="",t}r(t,e);var n=t.prototype;return n.initialize=function(e,t){this.enableOnClick=e,this.userId=t},n.onEnable=function(){this.registerTouchEvents()},n.onDisable=function(){this.unregisterTouchEvents()},n.start=function(){},n.update=function(e){},n.registerTouchEvents=function(){this.playerAvatar.node.on(s.EventType.TOUCH_START,this.handleTouchStart,this)},n.unregisterTouchEvents=function(){this.playerAvatar.node.off(s.EventType.TOUCH_START,this.handleTouchStart,this)},n.handleTouchStart=function(){this.enableOnClick},n.setOutline=function(e){this.outline.enabled=e},n.setOutlineColor=function(e){this.outline.color=e},n.setAvatarFromUrl=function(e){console.log("Setting avatar from url: ",e);var t=this.getFromCache(e);t?this.createSpriteFrameFromTexture(t):this.loadRemoteImage(e)},n.setAvatarFromSpriteFrame=function(e){this.playerAvatar.spriteFrame=e},n.getFromCache=function(e){return u.assets.get(e)||null},n.createSpriteFrameFromTexture=function(e){var t=new c;t.texture=e,this.playerAvatar.spriteFrame=t},n.loadRemoteImage=function(e){var t=this;u.loadRemote(e,{ext:".png"},(function(r,a){if(r)return console.error("[Player] Failed to load profile image: "+JSON.stringify(r)),void(window.ReactNativeWebView&&window.ReactNativeWebView.postMessage(JSON.stringify({message:"player_avatar_load_failed",data:{userId:t.userId,url:e,errorName:r.name,errorMessage:r.message,errorStack:r.stack}})));try{var i=new c,n=new p;n.image=a,i.texture=n,t.playerAvatar.spriteFrame=i}catch(r){console.error("[Player] Error creating sprite frame: "+r),window.ReactNativeWebView&&window.ReactNativeWebView.postMessage(JSON.stringify({message:"player_sprite_frame_creation_failed",data:{userId:t.userId,url:e,error:r}}))}}))},t}(f)).prototype,"playerAvatar",[v],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),A=t(m.prototype,"outline",[d],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),y=m))||y));n._RF.pop()}}}));

System.register("chunks:///_virtual/PlayerBaseState.ts",["cc"],(function(e){var t;return{setters:[function(e){t=e.cclegacy}],execute:function(){t._RF.push({},"78978IhrMdHeKLkXUNQoXg9","PlayerBaseState",void 0);e("PlayerBaseState",(function(){}));t._RF.pop()}}}));

System.register("chunks:///_virtual/PlayerService.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(e){var r,t,n;return{setters:[function(e){r=e.createClass},function(e){t=e.cclegacy,n=e.EventTarget}],execute:function(){t._RF.push({},"1936dPyyoBFt589+HyvkLRx","PlayerService",void 0);e("PlayerServiceEvents",new n);e("PlayerService",function(){function e(){this._players=[],this._localPlayer=null,this._myPlayerNumber=0}var t=e.prototype;return t.registerPlayer=function(e,r){void 0===r&&(r=!1),this._players.push(e),r&&(this._localPlayer=e)},t.setMyPlayerNumber=function(e){this._myPlayerNumber=e},t.getMyPlayerNumber=function(){return this._myPlayerNumber},t.getPlayer=function(e){return e===this._myPlayerNumber&&this._localPlayer?this._localPlayer:this._players.find((function(r){return r.playerNumber===e}))},t.getPlayerBase=function(e){var r=this.getPlayer(e);return r?r.piecesBase:null},t.getPlayerPiece=function(e,r){var t=this.getPlayer(e);return t&&t.pawns.length>r?t.pawns[r]:null},t.clearPlayers=function(){this._players=[],this._localPlayer=null},r(e,null,[{key:"instance",get:function(){return this._instance||(this._instance=new e),this._instance}}]),e}())._instance=null,t._RF.pop()}}}));

System.register("chunks:///_virtual/PlayerStateMachine.ts",["cc","./UIManager.ts","./SNLGameState.ts","./GameMessageType.ts","./IdleState.ts","./MovePieceState.ts","./RollingState.ts","./RoomTypes.ts"],(function(t){var e,r,a,i,n,s,u,c;return{setters:[function(t){e=t.cclegacy},function(t){r=t.UIManager},function(t){a=t.SNLGameState},function(t){i=t.GameMessageType},function(t){n=t.IdleState},function(t){s=t.MovePieceState},function(t){u=t.RollingState},function(t){c=t.RoomStatus}],execute:function(){e._RF.push({},"9eb0dq3d1xO0rIyC48tlaQe","PlayerStateMachine",void 0);t("PlayerStateMachine",function(){function t(t){this._currentState=void 0,this.idleState=void 0,this.rollingState=void 0,this.movePieceState=void 0,this.player=void 0,this.currentServerState=void 0,this.currentTurnPlayerNumber=-1,this.player=t,this.idleState=new n(this),this.rollingState=new u(this),this.movePieceState=new s(this),this._currentState=this.idleState}var e=t.prototype;return e.updateState=function(t){null!=this._currentState&&this._currentState.updateState(t)},e.changeState=function(t){this._currentState.exitState(),this._currentState=t,this._currentState.enterState()},e.getPlayerNumber=function(){return this.player.playerNumber},e.onServerStateChange=function(t){if(this.currentServerState=t,this.currentTurnPlayerNumber!=t.turnPlayerNumber&&(this.currentTurnPlayerNumber=t.turnPlayerNumber,this.player.isMyTurn(t.turnPlayerNumber)&&(console.log("===================================="),console.log("Player Turn : ",this.currentTurnPlayerNumber))),this.currentServerState.currentRoomStatus!==c.END_GAME&&this.checkAndUpdateBotScreen(),this.player.isMyTurn(t.turnPlayerNumber)){if(t.inputPayload.inputType!=i.NONE)switch(t.inputPayload.inputType){case i.SET_STATE:this.onSetState(t);break;case i.DICE_OUTCOME:this._currentState==this.rollingState&&this.rollingState.onDiceOutCome();break;case i.MOVE_PIECE:this._currentState==this.movePieceState&&this.movePieceState.onMovePiece()}}else this._currentState!=this.idleState&&this.changeState(this.idleState)},e.onReconnection=function(t){if(this.currentServerState=t,this.rollingState.exitState(),this.movePieceState.exitState(),this.player.isMyTurn(t.turnPlayerNumber)){var e=t.playersData[this.player.playerNumber];this.player.outComesUIManager.reset(e.rollsList),t.currentGameState==a.ROLLING?(this._currentState=this.rollingState,this._currentState.enterState(),this.player.timer.setCurrentTime(t.timer)):t.currentGameState==a.MOVING_PIECE&&(this._currentState=this.movePieceState,this._currentState.enterState(),this.player.timer.setCurrentTime(t.timer))}else this.changeState(this.idleState)},e.onSetState=function(t){var e=t.playersData[this.player.playerNumber];this.player.outComesUIManager.reset(e.rollsList),t.currentGameState==a.ROLLING?this.changeState(this.rollingState):t.currentGameState==a.MOVING_PIECE&&this.changeState(this.movePieceState)},e.checkAndUpdateBotScreen=function(){this.player._isLocal&&(this.currentServerState.playersData[this.player.playerNumber].isKickedOut?r.instance.OpenMenu("KickedOutScreen"):this.currentServerState.playersData[this.player.playerNumber].isBot&&r.instance.OpenMenu("BotMadeMoveScreen"))},t}());e._RF.pop()}}}));

System.register("chunks:///_virtual/PlayerTypes.ts",["cc"],(function(e){var t;return{setters:[function(e){t=e.cclegacy}],execute:function(){t._RF.push({},"a9834SBKVdJjbKhQmGkj2eO","PlayerTypes",void 0);e("PlayerType",function(e){return e[e.HUMAN=0]="HUMAN",e[e.BOT=1]="BOT",e[e.SPECTATOR=2]="SPECTATOR",e}({}));t._RF.pop()}}}));

System.register("chunks:///_virtual/Pooler.ts",["cc"],(function(t){var e,o,c;return{setters:[function(t){e=t.cclegacy,o=t._decorator,c=t.instantiate}],execute:function(){var i;e._RF.push({},"c2cffBnoelNw78Je3aJFTeS","Pooler",void 0);var n=o.ccclass;o.property,t("Pooler",n("Pooler")(i=function(){function t(t){this.poolName="NodePool",this.pooledObjects=[],this.objectPrefab=null,this.pooledObjectCount=0,this.tempNode=null,this.poolName=t}var e=t.prototype;return e.getObject=function(){return this.pooledObjects.length>0?(this.tempNode=this.pooledObjects.pop(),this.tempNode.active=!0,this.tempNode):this.createObject()},e.returnObject=function(t){this.pooledObjects.push(t),t.active=!1},e.createObject=function(){this.pooledObjectCount++;var t=c(this.objectPrefab);return t.name=this.poolName+" "+this.pooledObjectCount,t},t}())||i);e._RF.pop()}}}));

System.register("chunks:///_virtual/PoolManager.ts",["./rollupPluginModLoBabelHelpers.js","cc","./Pooler.ts"],(function(o){var t,e,n,r,l;return{setters:[function(o){t=o.inheritsLoose},function(o){e=o.cclegacy,n=o._decorator,r=o.Component},function(o){l=o.Pooler}],execute:function(){var a,c;e._RF.push({},"a1a32EeobRHfb/x9cBFobiM","PoolManager",void 0);var s=n.ccclass;n.property,o("PoolManager",s("PoolManager")(((c=function(o){function e(){for(var t,e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];return(t=o.call.apply(o,[this].concat(n))||this).pools=[],t}t(e,o);var n=e.prototype;return n.onLoad=function(){e.instance=this},n.createPool=function(o){var t=new l(o.name);t.objectPrefab=o,this.pools.push(t)},n.getObjectFromPool=function(o){var t=this.getPool(o.name);return null!=t?t.getObject():(this.createPool(o),this.pools[this.pools.length-1].getObject())},n.getPool=function(o){for(var t=0;t<this.pools.length;t++)if(this.pools[t].poolName==o)return this.pools[t];return null},n.returnObjectToPool=function(o){if(o.active){var t=o.name.split(" ")[0],e=this.getPool(t);null!=e?e.returnObject(o):console.warn("No pool found for object "+o.name)}},e}(r)).instance=null,a=c))||a);e._RF.pop()}}}));

System.register("chunks:///_virtual/PowerUp.ts",["./rollupPluginModLoBabelHelpers.js","cc","./PlayerAssets.ts"],(function(t){var e,n,i,r,o,a,p,s,l,u,c,f;return{setters:[function(t){e=t.applyDecoratedDescriptor,n=t.inheritsLoose,i=t.initializerDefineProperty,r=t.assertThisInitialized},function(t){o=t.cclegacy,a=t._decorator,p=t.Sprite,s=t.Animation,l=t.tween,u=t.Color,c=t.Component},function(t){f=t.PlayerAssets}],execute:function(){var h,y,m,b,w,d,P;o._RF.push({},"9b816BpApRHJLqoKCgM1pAC","PowerUp",void 0);var v=a.ccclass,g=a.property;t("PowerUp",(h=v("PowerUp"),y=g({type:p}),m=g({type:s}),h((d=e((w=function(t){function e(){for(var e,n=arguments.length,o=new Array(n),a=0;a<n;a++)o[a]=arguments[a];return e=t.call.apply(t,[this].concat(o))||this,i(e,"sprite",d,r(e)),e.pathNumber=0,e.powerupType=0,i(e,"animation",P,r(e)),e}n(e,t);var o=e.prototype;return o.start=function(){this.playIdleAnimation()},o.setPathNumber=function(t){this.pathNumber=t},o.setPowerUpType=function(t){this.powerupType=t,this.sprite.spriteFrame=f.instance.getPowerUpSprite(t)},o.blinkWithRedColor=function(){l(this.sprite).to(.2,{color:u.RED},{onUpdate:function(t,e){t.color=u.RED}}).to(.2,{color:u.WHITE},{onUpdate:function(t,e){t.color=u.WHITE}}).union().repeatForever().start()},o.playIdleAnimation=function(){var t=this,e=2e3*Math.random();null==this.animation&&(this.animation=this.getComponent(s)),setTimeout((function(){var e;null==(e=t.animation)||e.play()}),e)},e}(c)).prototype,"sprite",[y],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),P=e(w.prototype,"animation",[m],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),b=w))||b));o._RF.pop()}}}));

System.register("chunks:///_virtual/ReconnectingScreen.ts",["./rollupPluginModLoBabelHelpers.js","cc","./Menu.ts"],(function(n){var e,t,i,r,o,c,s,p,a;return{setters:[function(n){e=n.applyDecoratedDescriptor,t=n.inheritsLoose,i=n.initializerDefineProperty,r=n.assertThisInitialized},function(n){o=n.cclegacy,c=n._decorator,s=n.Node,p=n.tween},function(n){a=n.Menu}],execute:function(){var l,u,f,h,y;o._RF.push({},"acd60lK6OdGIKDWA1YgCiV5","ReconnectingScreen",void 0);var d=c.ccclass,g=c.property;n("ReconnectingScreen",(l=d("ReconnectingScreen"),u=g({type:s}),l((y=e((h=function(n){function e(){for(var e,t=arguments.length,o=new Array(t),c=0;c<t;c++)o[c]=arguments[c];return e=n.call.apply(n,[this].concat(o))||this,i(e,"spinner",y,r(e)),e._spinnerTween=null,e}t(e,n);var o=e.prototype;return o.onLoad=function(){n.prototype.onLoad.call(this)},o.onDestroy=function(){},o.Open=function(){n.prototype.Open.call(this),this.startSpinner()},o.Close=function(){n.prototype.Close.call(this),this.stopSpinner()},o.startSpinner=function(){this._spinnerTween=p(this.spinner).repeatForever(p().by(1,{angle:360})).start()},o.stopSpinner=function(){var n;null==(n=this._spinnerTween)||n.stop(),this._spinnerTween=null},o.initHandTween=function(){},o.initialization=function(){this.initHandTween()},e}(a)).prototype,"spinner",[u],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),f=h))||f));o._RF.pop()}}}));

System.register("chunks:///_virtual/RollingState.ts",["./rollupPluginModLoBabelHelpers.js","cc","./Player.ts","./PlayerBaseState.ts","./GameMessageType.ts","./GameManager.ts","./NetworkManager.ts"],(function(e){var t,i,a,n,o,l,r,s,c,u;return{setters:[function(e){t=e.inheritsLoose,i=e.assertThisInitialized},function(e){a=e.cclegacy,n=e.Node,o=e.Input},function(e){l=e.PlayerState},function(e){r=e.PlayerBaseState},function(e){s=e.GameMessageType},function(e){c=e.GameManager},function(e){u=e.NetworkManager}],execute:function(){a._RF.push({},"7e263dnLiVEBa6WD/teDXYo","RollingState",void 0);e("RollingState",function(e){function a(t){var a;return(a=e.call(this)||this).stateMachine=void 0,a._stateName=l.ROLLING,a.player=void 0,a.currentDiceOutcome=0,a.goldenDiceOutcomes=0,a.stateMachine=t,a.player=a.stateMachine.player,a.player.dice.onDiceRollDone=a.onDiceRollDone.bind(i(a)),a}t(a,e);var r=a.prototype;return r.enterState=function(){console.log("Entered Rolling State"),this.player.diceRoot.active=!0,this.player.timer.stop(),this.player.outComesUIManager.enableOutComesBg(!0),this.player.timer.setTotalTime(this.stateMachine.currentServerState.gameOptions.diceRollWaitTime),this.player.timer.run(),this.player._pawnHandler.Reset(this.stateMachine.currentServerState),this.player.dice.reset();var e=this.stateMachine.currentServerState.playersData[this.player.playerNumber];this.player.outComesUIManager.reset(e.rollsList),this.player._isLocal&&(console.log("Setting Local Player Dice Click"),this.player.dice.node.on(n.EventType.TOUCH_START,this.OnDiceClick,this),this.player.arrowPointToDiceAnimation(!0),c.Instance.miloSDK.vibratePreset("light"))},r.updateState=function(e){},r.exitState=function(){this.player.diceRoot.active=!0,this.player.timer.stop(),console.log("Exited Rolling State local ",this.player._isLocal),this.player._isLocal&&this.player.dice.node.off(o.EventType.TOUCH_START,this.OnDiceClick,this)},r.OnDiceClick=function(e){console.log("OnDiceClick"),this.player._isLocal&&(console.log("OnDiceClick 2"),this.player.dice.node.off(o.EventType.TOUCH_START,this.OnDiceClick,this),c.Instance.setInput("DiceRoll"),this.player.arrowPointToDiceAnimation(!1),console.log("Clicked on Dice"),u.Instance.CurrentRoom.send(s.CLIENT_DICE_ROLL,JSON.stringify({})))},r.onDiceRollDone=function(){this.player.outComesUIManager.addOutCome(this.currentDiceOutcome),u.Instance.CurrentRoom.send(s.ROLLING_ACK,JSON.stringify({})),console.log("Roll Ack Sent")},r.onDiceOutCome=function(){var e=JSON.parse(this.stateMachine.currentServerState.inputPayload.inputValue);this.player.dice.rollDice(e.value),this.currentDiceOutcome=e.value,console.log("Rolled : ",e.value),this.player.timer.stop()},r.reset=function(){this.exitState()},a}(r));a._RF.pop()}}}));

System.register("chunks:///_virtual/RoomTypes.ts",["cc"],(function(t){var e;return{setters:[function(t){e=t.cclegacy}],execute:function(){e._RF.push({},"344aeJp6CBKTK1vYVF4OqjS","RoomTypes",void 0);t("RoomStatus",function(t){return t[t.NONE=0]="NONE",t[t.WAITING_FOR_PLAYERS=1]="WAITING_FOR_PLAYERS",t[t.COUNTDOWN=2]="COUNTDOWN",t[t.GAME_SIMULATION=3]="GAME_SIMULATION",t[t.END_GAME=4]="END_GAME",t[t.KICKED_OUT=5]="KICKED_OUT",t}({}));e._RF.pop()}}}));

System.register("chunks:///_virtual/RoundCompleted.ts",["./rollupPluginModLoBabelHelpers.js","cc","./Menu.ts","./PlayerAvatar.ts","./GameManager.ts","./SNLGameHandler.ts","./NetworkManager.ts","./NetworkTypes.ts","./SNLRoomState.ts","./MiloGameSDK.ts","./events.ts"],(function(e){var t,n,a,i,o,r,l,s,u,c,p,m,h,d,y,f,g;return{setters:[function(e){t=e.applyDecoratedDescriptor,n=e.inheritsLoose,a=e.initializerDefineProperty,i=e.assertThisInitialized},function(e){o=e.cclegacy,r=e._decorator,l=e.Label,s=e.Node},function(e){u=e.Menu},function(e){c=e.PlayerAvatar},function(e){p=e.GameManager},function(e){m=e.SNLGameHandler},function(e){h=e.ServerRoomStateChangeEvent},function(e){d=e.NetworkEvents},function(e){y=e.SNLRoomState},function(e){f=e.HostChangeEvent},function(e){g=e.InternalGameSdkEvents}],execute:function(){var b,C,v,S,w,A,L,P,D,N,H,_,I,z,R,G,E,M,F,k,O,T,B;o._RF.push({},"3e550GegZRObpAYkLiWjhvp","RoundCompleted",void 0);var U=r.ccclass,K=r.property;e("RoundCompleted",(b=U("RoundCompleted"),C=K({type:c}),v=K({type:l}),S=K({type:c}),w=K({type:l}),A=K({type:c}),L=K({type:l}),P=K({type:l}),D=K({type:l}),N=K({type:s}),H=K({type:s}),b((z=t((I=function(e){function t(){for(var t,n=arguments.length,o=new Array(n),r=0;r<n;r++)o[r]=arguments[r];return t=e.call.apply(e,[this].concat(o))||this,a(t,"winnerAvatar",z,i(t)),a(t,"winnerName",R,i(t)),a(t,"mostDeathsPlayerAvatar",G,i(t)),a(t,"mostDeathsPlayerName",E,i(t)),a(t,"mostLadderClimbPlayerAvatar",M,i(t)),a(t,"mostLadderClimbPlayerName",F,i(t)),a(t,"deathsCountLabel",k,i(t)),a(t,"ladderClimbCountLabel",O,i(t)),a(t,"actionsButtonContainer",T,i(t)),a(t,"infoContainer",B,i(t)),t._shouldShowThisScreen=!1,t._optionsInitialized=!1,t}n(t,e);var o=t.prototype;return o.onLoad=function(){e.prototype.onLoad.call(this),h.on(d.SERVER_ROOM_STATE_CHANGE,this.ServerStateChanged,this),f.on(g.HOST_CHANGED,this.onHostChanged,this)},o.onDestroy=function(){h.off(d.SERVER_ROOM_STATE_CHANGE,this.ServerStateChanged,this),f.off(g.HOST_CHANGED,this.onHostChanged,this)},o.ServerStateChanged=function(e){if(!this._optionsInitialized){var t=new y;t.gameOptions&&(this._shouldShowThisScreen=t.gameOptions.show_result_screen,this._optionsInitialized=!0),t.copyFrom(e)}},o.Open=function(){this._shouldShowThisScreen&&(e.prototype.Open.call(this),this.initialize())},o.Close=function(){e.prototype.Close.call(this)},o.initialize=function(){e.prototype.initialize.call(this);var t=p.Instance._serverStateCopy.playersData.findIndex((function(e){return 1==e.finishPosition}));if(-1!=t){var n=m.Instance.getPlayer(t);this.winnerAvatar.setAvatarFromSpriteFrame(n.GetProfileSpriteFrame()),this.winnerName.string=n.playerData.name;var a=m.Instance.getMostDeathsPlayer();this.mostDeathsPlayerAvatar.setAvatarFromSpriteFrame(a.GetProfileSpriteFrame()),this.mostDeathsPlayerName.string=a.playerName.string;var i=m.Instance.getMostLadderClimbsPlayer();this.mostLadderClimbPlayerAvatar.setAvatarFromSpriteFrame(i.GetProfileSpriteFrame()),this.mostLadderClimbPlayerName.string=i.playerName.string,this.deathsCountLabel.string="Most Deaths: "+a.playerData.deathsCount,this.ladderClimbCountLabel.string="Most Ladders: "+i.playerData.ladderClimbCount,this.updateHostUI()}else console.error("no winning player")},o.updateHostUI=function(){var e=m.Instance.isLocalUserHost(),t=m.Instance.getHostPlayer();e?t&&(this.infoContainer.active=!1,this.actionsButtonContainer.active=!0):t&&(this.actionsButtonContainer.active=!1,this.infoContainer.getComponent(l).string="Ask "+t.playerData.name+"(Host) to play again or change game",this.infoContainer.active=!0)},o.onHostChanged=function(e){console.log("RoundCompleted: Host changed from",e.oldHostId,"to",e.newHostId),this.node.active&&this.updateHostUI()},o.onPlayAgainButtonClicked=function(){var e=Date.now();p.Instance.miloSDK.playAgain({timestamp:e}),console.log("play again button clicked")},o.onChangeGameButtonClicked=function(){var e=Date.now();p.Instance.miloSDK.changeGame({timestamp:e}),console.log("change game button clicked")},t}(u)).prototype,"winnerAvatar",[C],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),R=t(I.prototype,"winnerName",[v],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),G=t(I.prototype,"mostDeathsPlayerAvatar",[S],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),E=t(I.prototype,"mostDeathsPlayerName",[w],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),M=t(I.prototype,"mostLadderClimbPlayerAvatar",[A],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),F=t(I.prototype,"mostLadderClimbPlayerName",[L],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),k=t(I.prototype,"deathsCountLabel",[P],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),O=t(I.prototype,"ladderClimbCountLabel",[D],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),T=t(I.prototype,"actionsButtonContainer",[N],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),B=t(I.prototype,"infoContainer",[H],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),_=I))||_));o._RF.pop()}}}));

System.register("chunks:///_virtual/snl_game",["./BotMadeMoveScreen.ts","./CountdownScreen.ts","./EndRoundScreen.ts","./HowToPlay.ts","./InGameMenu.ts","./InstructionsScreen.ts","./KickedOutScreen.ts","./Menu.ts","./ReconnectingScreen.ts","./TutorialScreen.ts","./UIManager.ts","./WaitingScreen.ts","./defaultConfig.ts","./MiloGameSDK.ts","./utils.ts","./events.ts","./index.ts","./WebViewTransport.ts","./index2.ts","./types.ts","./NetworkConfig.ts","./NetworkManager.ts","./CameraManger.ts","./FitToScreen.ts","./MiloLayout.ts","./PBLogger.ts","./PbExtensions.ts","./PbSaveSystem.ts","./PlayerAvatar.ts","./Utils2.ts","./BasePlayerData.ts","./BaseRoomSettings.ts","./BaseRoomState.ts","./NetworkTypes.ts","./PlayerTypes.ts","./RoomTypes.ts","./AnimationPoints.ts","./AudioManager.ts","./Board.ts","./BoardData.ts","./GameConfig.ts","./Interfaces.ts","./DeathPopup.ts","./Dice.ts","./GameManager.ts","./InputManager.ts","./MoveOptionsInput.ts","./OutComesUIManager.ts","./PawnHandler.ts","./Piece.ts","./Player.ts","./PlayerAssets.ts","./PlayerService.ts","./IdleState.ts","./MovePieceState.ts","./PlayerBaseState.ts","./PlayerStateMachine.ts","./RollingState.ts","./PowerUp.ts","./RoundCompleted.ts","./SNLGameHandler.ts","./Timer.ts","./AutoReturnToPool.ts","./PoolManager.ts","./Pooler.ts","./SNLBoard.ts","./SNLPlayerData.ts","./SNLRoomSettings.ts","./SNLRoomState.ts","./AnimationTag.ts","./DeathType.ts","./GameMessageType.ts","./SNLGameState.ts","./SNLTileType.ts"],(function(){return{setters:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],execute:function(){}}}));

System.register("chunks:///_virtual/SNLBoard.ts",["cc"],(function(s){var t;return{setters:[function(s){t=s.cclegacy}],execute:function(){t._RF.push({},"7f17fKQ0pxNmppfWHiEOdtz","SNLBoard",void 0);s("SNLSnakeData",(function(){this.startTile=void 0,this.snakePresetIndex=void 0})),s("SNLLadderData",(function(){this.startTile=void 0,this.ladderPresetIndex=void 0})),s("SNLBoard",function(){function s(){this.boardTiles=[],this.snakes=[],this.ladders=[]}return s.prototype.copyFrom=function(s){this.boardTiles=[];for(var t=0;t<s.boardTiles.length;t++)this.boardTiles.push(s.boardTiles[t]);this.snakes=[];for(var e=0;e<s.snakes.length;e++)this.snakes.push(s.snakes[e]);this.ladders=[];for(var i=0;i<s.ladders.length;i++)this.ladders.push(s.ladders[i])},s}());t._RF.pop()}}}));

System.register("chunks:///_virtual/SNLGameHandler.ts",["./rollupPluginModLoBabelHelpers.js","cc","./SNLRoomState.ts","./SNLGameState.ts","./RoomTypes.ts","./AnimationTag.ts","./Player.ts","./Board.ts","./GameManager.ts","./AudioManager.ts","./NetworkManager.ts","./NetworkTypes.ts","./PBLogger.ts","./PlayerService.ts"],(function(e){var t,n,a,o,r,i,s,l,c,h,u,y,S,f,m,d,g,P,v,C,N,p,E,_,G,b,R,T;return{setters:[function(e){t=e.applyDecoratedDescriptor,n=e.inheritsLoose,a=e.initializerDefineProperty,o=e.assertThisInitialized,r=e.createClass},function(e){i=e.cclegacy,s=e._decorator,l=e.EventTarget,c=e.Node,h=e.game,u=e.Game,y=e.Tween,S=e.Component},function(e){f=e.SNLRoomState},function(e){m=e.SNLGameState},function(e){d=e.RoomStatus},function(e){g=e.AnimationTag},function(e){P=e.Player},function(e){v=e.Board},function(e){C=e.GameManager},function(e){N=e.AudioManager},function(e){p=e.ConnectionStateChangeEvent,E=e.ServerRoomStateChangeEvent,_=e.NetworkManager},function(e){G=e.NetworkEvents,b=e.ConnectionState},function(e){R=e.PBLogger},function(e){T=e.PlayerService}],execute:function(){var A,D,I,O,L,w,H,M,z,V;i._RF.push({},"043b9WCKYxCpKgbHB9BKVdi","SNLGameHandler",void 0);var F=s.ccclass,B=s.property;e("ClientStateChange",new l),e("SNLGameHandler",(A=F("SNLGameHandler"),D=B({type:c}),I=B({type:v}),O=B({type:P}),A(((V=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),i=0;i<n;i++)r[i]=arguments[i];return(t=e.call.apply(e,[this].concat(r))||this)._clientState=void 0,t._serverState=void 0,a(t,"playersParent",H,o(t)),t.allPlayers=[],a(t,"board",M,o(t)),t.myPlayerNumber=0,t.hasReconnected=!1,a(t,"localPlayer",z,o(t)),t}n(t,e);var i=t.prototype;return i.onLoad=function(){this.LoadPlayers(),p.on(G.CONNECTION_STATE_CHANGE,this.onConnectionStateChange,this),E.on(G.SERVER_ROOM_STATE_CHANGE,this.OnServerStateChange,this),t._instance=this,h.on(u.EVENT_HIDE,this.onGameHide,this),h.on(u.EVENT_SHOW,this.onGameShow,this),h.on(u.EVENT_RESTART,this.onGameRestart,this),h.on(u.EVENT_CLOSE,this.onGameClose,this),window.addEventListener("beforeunload",this.onGameClose)},i.LoadPlayers=function(){this.allPlayers=this.playersParent.children.map((function(e){return e.getComponent(P)}))},i.Init=function(e){},i.onGameHide=function(){console.log("====== Game Hide ======"),y.stopAll()},i.onGameShow=function(){console.log("====== Game Show ======"),y.stopAllByTag(g.DICE_ROLL),C.Instance._roomState,d.GAME_SIMULATION},i.onGameRestart=function(){console.log("====== Game Restart ======")},i.onGameClose=function(){console.log("====== Game Close ======"),T.instance.clearPlayers()},i.onGameDisconnect=function(){console.log("====== Game Disconnect ======"),N.instance.stopAllSounds()},i.onGameReconnect=function(){console.log("====== Game Reconnect ======")},i.OnServerStateChange=function(e){return console.log("============ OnServerStateChange ========="),null==this._clientState?(this._clientState=new f,this._clientState.copyFrom(e),this._serverState=new f,this._serverState.copyFrom(e),this.board.Initialize(e),this.InitializePlayers(e),void(this._serverState.currentGameState!=m.NONE&&(console.log("========= joined game in between ========="),this.board.reset(this._serverState),this.sendReconnectionStateToAllPlayers(this._serverState)))):(this._serverState=new f,this._serverState.copyFrom(e),e.currentRoomStatus==d.END_GAME?(console.log("========= Game Over State Change "),void this.board.reset(this._serverState)):this.hasReconnected?(console.log("========= sending Reconnection State Change "),this.board.reset(this._serverState),this.sendReconnectionStateToAllPlayers(this._serverState),void(this.hasReconnected=!1)):void this.sendStateToAllPlayers(this._serverState))},i.onConnectionStateChange=function(e,t){t==b.DISCONNECTED?this.onGameDisconnect():e==b.RECONNECTING&&t==b.JOINED_ROOM&&(this.hasReconnected=!0,this.onGameReconnect())},i.sendStateToAllPlayers=function(e){for(var t=0;t<this.allPlayers.length;t++)this.allPlayers[t].onServerStateChange(e)},i.sendReconnectionStateToAllPlayers=function(e){console.log("=========Reconnection State Sent to All Players");for(var t=0;t<this.allPlayers.length;t++)this.allPlayers[t].node.active&&this.allPlayers[t].onReconnection(e)},i.InitializePlayers=function(e){this.assignMyPlayerNumber(e),T.instance.setMyPlayerNumber(this.myPlayerNumber),R.info("My Player Number : ",this.myPlayerNumber);for(var t=0;t<e.playersData.length;t++)if(t==this.myPlayerNumber)this.localPlayer.node.active=!0,this.localPlayer.initialize(e,this.board,this.myPlayerNumber),this.allPlayers.push(this.localPlayer),T.instance.registerPlayer(this.localPlayer,!0),R.info("Local Player node name : ",this.localPlayer.node.name);else{console.log("Initializing Player : ",t),console.log("current player : ",this.allPlayers[t]);var n=this.allPlayers[t];n.node.active=!0,n.initialize(e,this.board,t),T.instance.registerPlayer(n),R.info("Current Player node name : ",n.node.name)}},i.assignMyPlayerNumber=function(e){for(var t=0;t<e.playersData.length;t++)if(e.playersData[t].sessionId==_.Instance.CurrentRoom.sessionId){this.myPlayerNumber=t;break}},i.getPlayer=function(e){return T.instance.getPlayer(e)},i.getNumberOfProfileRotation=function(e){return 0==e?0:1==e?2:2==e?1:3==e?3:void 0},i.allPlayersFinished=function(){for(var e=0,t=0,n=0;n<this.allPlayers.length;n++)this.allPlayers[n].node.active&&(t++,this.allPlayers[n].isFinished()&&e++);return console.log("Finished Players Count ",e),console.log("Total Players ",this.allPlayers.length),e==t-1},i.anyPlayerFinished=function(){for(var e=0;e<this.allPlayers.length;e++)if(this.allPlayers[e].isFinished())return!0;return!1},i.getMostDeathsPlayer=function(){for(var e=-1,t=-1,n=0;n<this._serverState.playersData.length;n++){var a=this._serverState.playersData[n];a.deathsCount>e&&(e=a.deathsCount,t=a.playerNumber)}return this.getPlayer(t)},i.getMostLadderClimbsPlayer=function(){for(var e=-1,t=-1,n=0;n<this._serverState.playersData.length;n++){var a=this._serverState.playersData[n];a.ladderClimbCount>e&&(e=a.ladderClimbCount,t=a.playerNumber)}return this.getPlayer(t)},i.isLocalUserHost=function(){return C.Instance.miloSDK.getHostId()==this.localPlayer.playerData.userId},i.getHostPlayer=function(){var e=C.Instance.miloSDK.getHostId();return e?this.allPlayers.filter((function(e){return e.playerData})).find((function(t){return t.playerData.userId==e})):null},i.onDestroy=function(){p.off(G.CONNECTION_STATE_CHANGE,this.onConnectionStateChange,this),E.off(G.SERVER_ROOM_STATE_CHANGE,this.OnServerStateChange,this),h.off(u.EVENT_HIDE,this.onGameHide,this),h.off(u.EVENT_SHOW,this.onGameShow,this),h.off(u.EVENT_RESTART,this.onGameRestart,this),h.off(u.EVENT_CLOSE,this.onGameClose,this),window.removeEventListener("beforeunload",this.onGameClose),T.instance.clearPlayers(),t._instance=null},r(t,null,[{key:"Instance",get:function(){return this._instance}}]),t}(S))._instance=void 0,H=t((w=V).prototype,"playersParent",[D],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),M=t(w.prototype,"board",[I],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),z=t(w.prototype,"localPlayer",[O],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),L=w))||L));i._RF.pop()}}}));

System.register("chunks:///_virtual/SNLGameState.ts",["cc"],(function(N){var t;return{setters:[function(N){t=N.cclegacy}],execute:function(){t._RF.push({},"73474ShBSNCp6MYj8EOTjIP","SNLGameState",void 0);N("SNLGameState",function(N){return N[N.NONE=0]="NONE",N[N.ROLLING=1]="ROLLING",N[N.MOVING_PIECE=2]="MOVING_PIECE",N[N.END_TURN=3]="END_TURN",N[N.ROLLING_ACK=4]="ROLLING_ACK",N[N.MOVING_PIECE_ACK=5]="MOVING_PIECE_ACK",N}({}));t._RF.pop()}}}));

System.register("chunks:///_virtual/SNLPlayerData.ts",["./rollupPluginModLoBabelHelpers.js","cc","./BasePlayerData.ts"],(function(i){var t,s,e;return{setters:[function(i){t=i.inheritsLoose},function(i){s=i.cclegacy},function(i){e=i.BasePlayerData}],execute:function(){s._RF.push({},"f8954WpxNhFWpgDtrYTrr9V","SNLPlayerData",void 0);i("SNLPlayerData",function(i){function s(){for(var t,s=arguments.length,e=new Array(s),r=0;r<s;r++)e[r]=arguments[r];return(t=i.call.apply(i,[this].concat(e))||this).pieces=[0,0],t.rollsList=[],t.timeLeft=0,t.finishPosition=-1,t.isBot=!1,t.hasKilled=!1,t.remainingTurnSkips=0,t.deathsCount=0,t.ladderClimbCount=0,t.hasShield=[!1,!1],t}return t(s,i),s.prototype.copyFrom=function(t){i.prototype.copyFrom.call(this,t),this.pieces=[];for(var s=0;s<t.pieces.length;s++)this.pieces.push(t.pieces[s]);this.rollsList=[];for(var e=0;e<t.rollsList.length;e++)this.rollsList.push(t.rollsList[e]);this.timeLeft=t.timeLeft,this.finishPosition=t.finishPosition,this.isBot=t.isBot,this.hasShield=[];for(var r=0;r<t.hasShield.length;r++)this.hasShield.push(t.hasShield[r]);this.hasKilled=t.hasKilled,this.remainingTurnSkips=t.remainingTurnSkips,this.deathsCount=t.deathsCount,this.ladderClimbCount=t.ladderClimbCount},s}(e));s._RF.pop()}}}));

System.register("chunks:///_virtual/SNLRoomSettings.ts",["./rollupPluginModLoBabelHelpers.js","cc","./GameConfig.ts","./BaseRoomSettings.ts"],(function(e){var i,t,o,s;return{setters:[function(e){i=e.inheritsLoose},function(e){t=e.cclegacy},function(e){o=e.DefaultSNLGameOptions},function(e){s=e.BaseRoomSettings}],execute:function(){t._RF.push({},"4dde0jF7xFNHKcvHV98qN+F","SNLRoomSettings",void 0);e("SNLRoomSettings",function(e){function t(){for(var i,t=arguments.length,s=new Array(t),n=0;n<t;n++)s[n]=arguments[n];return(i=e.call.apply(e,[this].concat(s))||this).turnWaitTime=o.turnWaitTime,i.boardTilesCount=o.boardTilesCount,i.boardTilesPerRow=o.boardTilesPerRow,i.piecesPerPlayer=o.piecesPerPlayer,i.boardIndex=o.boardIndex,i.diceRollWaitTime=o.diceRollWaitTime,i.movePiecesWaitTime=o.movePiecesWaitTime,i.lagDelayCompensationTime=o.lagDelayCompensationTime,i.animationWaitTime=o.animationWaitTime,i.rocketSteps=o.rocketSteps,i.PowerupTypes=o.PowerupTypes,i.show_mute_button=o.show_mute_button,i.show_result_screen=o.show_result_screen,i.show_faq=o.show_faq,i.MissTurnsToKickOut=o.MissTurnsToKickOut,i.maxReconnectionAttempts=o.maxReconnectionAttempts,i.snakeAnimationTimePerTile=o.snakeAnimationTimePerTile,i.ladderAnimationTimePerTile=o.ladderAnimationTimePerTile,i}return i(t,e),t.prototype.copyFrom=function(i){e.prototype.copyFrom.call(this,i),this.turnWaitTime=i.turnWaitTime,this.boardTilesCount=i.boardTilesCount,this.boardTilesPerRow=i.boardTilesPerRow,this.piecesPerPlayer=i.piecesPerPlayer,this.boardIndex=i.boardIndex,this.diceRollWaitTime=i.diceRollWaitTime,this.movePiecesWaitTime=i.movePiecesWaitTime,this.lagDelayCompensationTime=i.lagDelayCompensationTime,this.animationWaitTime=i.animationWaitTime,this.rocketSteps=i.rocketSteps,this.PowerupTypes=i.PowerupTypes,this.show_mute_button=i.show_mute_button,this.show_result_screen=i.show_result_screen,this.show_faq=i.show_faq,this.MissTurnsToKickOut=i.MissTurnsToKickOut,this.maxReconnectionAttempts=i.maxReconnectionAttempts,this.snakeAnimationTimePerTile=i.snakeAnimationTimePerTile,this.ladderAnimationTimePerTile=i.ladderAnimationTimePerTile},t}(s));t._RF.pop()}}}));

System.register("chunks:///_virtual/SNLRoomState.ts",["./rollupPluginModLoBabelHelpers.js","cc","./SNLGameState.ts","./BaseRoomState.ts","./BasePlayerData.ts","./SNLRoomSettings.ts","./SNLBoard.ts","./SNLPlayerData.ts"],(function(t){var e,a,o,n,i,r,s,u;return{setters:[function(t){e=t.inheritsLoose},function(t){a=t.cclegacy},function(t){o=t.SNLGameState},function(t){n=t.BaseRoomState},function(t){i=t.BasePlayerData},function(t){r=t.SNLRoomSettings},function(t){s=t.SNLBoard},function(t){u=t.SNLPlayerData}],execute:function(){a._RF.push({},"eacc0N6oc1ISakU6bdEwjIT","SNLRoomState",void 0);var c=t("SNLInputPayload",function(){function t(){this.inputType=void 0,this.inputValue=void 0}return t.prototype.copyFrom=function(t){this.inputType=t.inputType,this.inputValue=t.inputValue},t}());t("SNLRoomState",function(t){function a(){var e;return(e=t.call(this,new r,[])||this).turnPlayerNumber=0,e.finishedCount=0,e.gameOptions=new r,e.inputPayload=new c,e.currentGameState=o.NONE,e.previousGameState=o.NONE,e.syncStateNumber=0,e.board=new s,e.hasMissedTurn=!0,e.timer=0,e}return e(a,t),a.prototype.copyFrom=function(e){console.log("============ CopyFrom snl room state ========="),t.prototype.copyFrom.call(this,e),this.playersData=e.playersData.map((function(t){var e=new u;return e.copyFrom(t),e})),this.spectatorsData=e.spectatorsData.map((function(t){var e=new i;return e.copyFrom(t),e})),this.turnPlayerNumber=e.turnPlayerNumber,this.finishedCount=e.finishedCount,this.gameOptions=new r,this.gameOptions.copyFrom(e.gameOptions),this.syncStateNumber=e.syncStateNumber,this.inputPayload=new c,this.inputPayload.copyFrom(e.inputPayload),this.board=new s,this.board.copyFrom(e.board),this.hasMissedTurn=e.hasMissedTurn,this.timer=e.timer,this.currentGameState=e.currentGameState,this.previousGameState=e.previousGameState},a}(n));a._RF.pop()}}}));

System.register("chunks:///_virtual/SNLTileType.ts",["cc"],(function(e){var t;return{setters:[function(e){t=e.cclegacy}],execute:function(){t._RF.push({},"50ec9GN3mFGcJFtBNdZFMLH","SNLTileType",void 0);e("SNLTileType",function(e){return e[e.DEFAULT=1]="DEFAULT",e[e.SNAKE=2]="SNAKE",e[e.LADDER=4]="LADDER",e[e.SHIELD=8]="SHIELD",e[e.ROCKET=16]="ROCKET",e[e.SAFE=32]="SAFE",e}({}));t._RF.pop()}}}));

System.register("chunks:///_virtual/Timer.ts",["./rollupPluginModLoBabelHelpers.js","cc","./AudioManager.ts"],(function(e){var i,t,n,r,s,c,a,o,u;return{setters:[function(e){i=e.applyDecoratedDescriptor,t=e.inheritsLoose,n=e.initializerDefineProperty,r=e.assertThisInitialized},function(e){s=e.cclegacy,c=e._decorator,a=e.Sprite,o=e.Component},function(e){u=e.AudioManager}],execute:function(){var m,l,T,h,p;s._RF.push({},"80a58wc6VlK84Ys/IBzIYmU","Timer",void 0);var f=c.ccclass,g=c.property;e("Timer",(m=f("Timer"),l=g({type:a}),m((p=i((h=function(e){function i(){for(var i,t=arguments.length,s=new Array(t),c=0;c<t;c++)s[c]=arguments[c];return(i=e.call.apply(e,[this].concat(s))||this)._totalTime=0,i._currentTime=0,n(i,"timerSprite",p,r(i)),i._canRunTimer=!1,i._isTimerWarning=!1,i._isLocal=!1,i}t(i,e);var s=i.prototype;return s.update=function(e){this._canRunTimer&&(this._currentTime-=e,this._currentTime<0&&(this._currentTime=0),this.timerSprite.fillRange=this.getTimeLeftPercentage(),this.checkAndSetTimerWarning())},s.isTimeUp=function(){return this._currentTime<=0},s.setTotalTime=function(e){this._totalTime=e,this._currentTime=e,this.timerSprite.fillRange=this.getTimeLeftPercentage()},s.setCurrentTime=function(e){this._currentTime=e,this.timerSprite.fillRange=this.getTimeLeftPercentage()},s.run=function(){this._canRunTimer=!0},s.stop=function(){this._canRunTimer=!1,this.reset()},s.reset=function(){this._isTimerWarning=!1,this.timerSprite.fillRange=0,u.instance.stopSound("TimerWarning")},s.getTimeLeftPercentage=function(){return this._currentTime/this._totalTime},s.checkAndSetTimerWarning=function(){this._isLocal&&this.getTimeLeftPercentage()<.2&&(this._isTimerWarning||(u.instance.playSound("TimerWarning"),this._isTimerWarning=!0))},s.setLocal=function(e){this._isLocal=e},i}(o)).prototype,"timerSprite",[l],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),T=h))||T));s._RF.pop()}}}));

System.register("chunks:///_virtual/TutorialScreen.ts",["./rollupPluginModLoBabelHelpers.js","cc","./Menu.ts"],(function(n){var e,t,i,o,a,r,l,s,c,u,h;return{setters:[function(n){e=n.applyDecoratedDescriptor,t=n.inheritsLoose,i=n.initializerDefineProperty,o=n.assertThisInitialized},function(n){a=n.cclegacy,r=n._decorator,l=n.Node,s=n.Quat,c=n.tween,u=n.Vec3},function(n){h=n.Menu}],execute:function(){var d,p,f,y,w;a._RF.push({},"afe91hzxTRN/4/agyLtHzs5","TutorialScreen",void 0);var _=r.ccclass,m=r.property;n("TutorialScreen",(d=_("TutorialScreen"),p=m({type:l}),d((w=e((y=function(n){function e(){for(var e,t=arguments.length,a=new Array(t),r=0;r<t;r++)a[r]=arguments[r];return e=n.call.apply(n,[this].concat(a))||this,i(e,"handNode",w,o(e)),e._showHandGesture=!0,e._handAnimationTween=null,e}t(e,n);var a=e.prototype;return a.onLoad=function(){n.prototype.onLoad.call(this)},a.start=function(){},a.onDestroy=function(){},a.ServerGameOptionsReceived=function(n){this._showHandGesture=n.show_hand_gesture},a.onSelectedLane=function(){console.log("Selected lane so closing tutorial"),this.Close()},a.Open=function(){this._showHandGesture&&(n.prototype.Open.call(this),this.initialization())},a.Close=function(){n.prototype.Close.call(this),this._handAnimationTween&&this._handAnimationTween.stop()},a.handClickAnimation=function(){var n=this,e=new s;s.fromEuler(e,0,0,15);new s;s.fromEuler(e,0,0,15),this._handAnimationTween=c(this.handNode).call((function(){n.handNode.eulerAngles=u.ZERO.clone()})).delay(.2).to(.3,{rotation:e},{easing:"backOut"}).delay(.7).union().repeatForever(),this._handAnimationTween.start()},a.initialization=function(){this.handClickAnimation()},e}(h)).prototype,"handNode",[p],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),f=y))||f));a._RF.pop()}}}));

System.register("chunks:///_virtual/types.ts",["cc"],(function(){var t;return{setters:[function(e){t=e.cclegacy}],execute:function(){t._RF.push({},"523dfcHqYBGqqfOdhVt8mFU","types",void 0),t._RF.pop()}}}));

System.register("chunks:///_virtual/UIManager.ts",["./rollupPluginModLoBabelHelpers.js","cc","./Menu.ts","./NetworkTypes.ts","./RoomTypes.ts","./CameraManger.ts","./GameManager.ts"],(function(e){var n,t,o,i,a,s,r,u,l,h,c,f,g,p,m,d,C,w,M,y,v,O,S;return{setters:[function(e){n=e.applyDecoratedDescriptor,t=e.inheritsLoose,o=e.initializerDefineProperty,i=e.assertThisInitialized},function(e){a=e.cclegacy,s=e._decorator,r=e.Camera,u=e.Node,l=e.Prefab,h=e.UITransform,c=e.Widget,f=e.Color,g=e.Sprite,p=e.tween,m=e.instantiate,d=e.Vec3,C=e.Component},function(e){w=e.Menu},function(e){M=e.NetworkEvents},function(e){y=e.RoomStatus},function(e){v=e.CameraManger},function(e){O=e.RoomStatusChangeEvent,S=e.GameManager}],execute:function(){var b,I,N,_,A,U,G,P,T,R,E,z,F,H;a._RF.push({},"2304fly6R9HErKhay4HPyij","UIManager",void 0);var W=s.ccclass,D=s.property;e("UIManager",(b=W("UIManager"),I=D({type:r}),N=D({type:[w]}),_=D({type:u}),A=D({type:l}),U=D({type:u}),b(((H=function(e){function n(){for(var n,t=arguments.length,a=new Array(t),s=0;s<t;s++)a[s]=arguments[s];return n=e.call.apply(e,[this].concat(a))||this,o(n,"uiCamera",T,i(n)),o(n,"menus",R,i(n)),o(n,"flashNode",E,i(n)),o(n,"showerConfettiPrefab",z,i(n)),o(n,"confettiPositionNode",F,i(n)),n.showMuteButton=!0,n.showResultScreen=!0,n.showFAQ=!0,n}t(n,e);var a=n.prototype;return a.onLoad=function(){n.instance=this,O.on(M.ROOM_STATUS_CHANGE,this.onGameStateChange,this)},a.start=function(){this.FixWidthOfUICamera()},a.onDestroy=function(){O.off(M.ROOM_STATUS_CHANGE,this.onGameStateChange,this)},a.OpenHowToPlay=function(){this.OpenMenu("HowToPlay")},a.OpenMenu=function(e){for(var n=0;n<this.menus.length;n++)this.menus[n].menuName==e&&this.menus[n].Open()},a.CloseMenu=function(e){for(var n=0;n<this.menus.length;n++)this.menus[n].menuName==e&&this.menus[n].Close()},a.GetMenu=function(e){for(var n=0;n<this.menus.length;n++)if(this.menus[n].menuName==e)return this.menus[n];return null},a.CloseAllMenus=function(){for(var e=0;e<this.menus.length;e++)this.menus[e].Close()},a.onGameStateChange=function(e){var n=this;console.log("[UIManager] Game State Change: ",e),e==y.WAITING_FOR_PLAYERS?(console.log("Opening waiting screen"),this.updateUiBasedOnConfig(),this.OpenMenu("WaitingScreen")):e==y.COUNTDOWN?(console.log("Opening countdown screen"),this.CloseAllMenus(),this.OpenMenu("CountdownScreen")):e==y.GAME_SIMULATION?this.scheduleOnce((function(){n.CloseMenu("CountdownScreen"),n.OpenMenu("InGameMenu")}),1):e==y.END_GAME?(console.log("[UIManager] End Game State handling in ui manager"),this.CloseAllMenus(),console.log("[UIManager] Opening end round screen"),this.OpenMenu("RoundCompletedScreen")):e==y.KICKED_OUT&&(this.CloseAllMenus(),this.OpenMenu("KickedOutScreen"))},a.FixWidthOfUICamera=function(){console.log("Fixing width of UI Camera"),this.FixCanvasSize()},a.FixCanvasSize=function(){var e=this.node.getComponent(h);e.setContentSize(v.instance.getWidth(),2*v.instance.camera.orthoHeight),console.log("UI Width: ",e.width,"UI Height: ",e.height);var n=this.node.getComponent(c);n.top=960-e.height/2,n.bottom=960-e.height/2,n.updateAlignment();for(var t=this.node.getComponentsInChildren(c),o=0;o<t.length;o++)t[o].updateAlignment()},a.getAllChildWidgets=function(e){var n=e.getComponentsInChildren(c);console.log("All widgets: ",n.length)},a.updateUiBasedOnConfig=function(){this.showMuteButton=S.Instance._serverStateCopy.gameOptions.show_mute_button,this.showResultScreen=S.Instance._serverStateCopy.gameOptions.show_result_screen,this.showFAQ=S.Instance._serverStateCopy.gameOptions.show_faq;for(var e=0;e<this.menus.length;e++)this.menus[e].initialize()},a.playFlashEffect=function(e){var n=this;void 0===e&&(e=new f(197,8,8)),this.flashNode.active=!0;var t=this.flashNode.getComponent(g);t?(t.color=new f(e.r,e.g,e.b,0),p(t).to(.2,{color:new f(e.r,e.g,e.b,255)}).delay(.05).to(.3,{color:new f(e.r,e.g,e.b,0)}).call((function(){n.flashNode.active=!1})).start()):console.error("No Sprite component found on flashNode")},a.showConfetti=function(){var e=m(this.showerConfettiPrefab);this.confettiPositionNode.addChild(e),e.setPosition(new d(0,150,0))},n}(C)).instance=null,T=n((P=H).prototype,"uiCamera",[I],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),R=n(P.prototype,"menus",[N],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),E=n(P.prototype,"flashNode",[_],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),z=n(P.prototype,"showerConfettiPrefab",[A],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),F=n(P.prototype,"confettiPositionNode",[U],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),G=P))||G));a._RF.pop()}}}));

System.register("chunks:///_virtual/utils.ts",["cc"],(function(){var t;return{setters:[function(c){t=c.cclegacy}],execute:function(){t._RF.push({},"cc9a3p/uD9F6royf1rwltUF","utils",void 0),t._RF.pop()}}}));

System.register("chunks:///_virtual/Utils2.ts",["cc"],(function(t){var n;return{setters:[function(t){n=t.cclegacy}],execute:function(){n._RF.push({},"a1442vXBd5J4qRt4lcDI5aR","Utils",void 0);t("Utils",function(){function t(){}return t.roundNumber=function(t,n){void 0===n&&(n=2);var u=Math.pow(10,n);return Math.round((t+Number.EPSILON)*u)/u},t}());n._RF.pop()}}}));

System.register("chunks:///_virtual/WaitingScreen.ts",["./rollupPluginModLoBabelHelpers.js","cc","./Menu.ts"],(function(t){var n,e,i,o;return{setters:[function(t){n=t.inheritsLoose},function(t){e=t.cclegacy,i=t._decorator},function(t){o=t.Menu}],execute:function(){var c;e._RF.push({},"a09e5Z+tyVKPLUvl7lBdOyg","WaitingScreen",void 0);var r=i.ccclass;i.property,t("WaitingScreen",r("WaitingScreen")(c=function(t){function e(){return t.apply(this,arguments)||this}n(e,t);var i=e.prototype;return i.onLoad=function(){t.prototype.onLoad.call(this)},i.onDestroy=function(){},i.Open=function(){t.prototype.Open.call(this)},i.Close=function(){t.prototype.Close.call(this)},i.initialize=function(){t.prototype.initialize.call(this)},e}(o))||c);e._RF.pop()}}}));

System.register("chunks:///_virtual/WebViewTransport.ts",["cc"],(function(e){var t;return{setters:[function(e){t=e.cclegacy}],execute:function(){t._RF.push({},"5cf04vce89AOJUDjkNVRa6C","WebViewTransport",void 0);e("WebViewTransport",function(){function e(){}return e.prototype.send=function(e){var t;null==(t=window.ReactNativeWebView)||t.postMessage(JSON.stringify(e))},e}());t._RF.pop()}}}));

(function(r) {
  r('virtual:///prerequisite-imports/snl_game', 'chunks:///_virtual/snl_game'); 
})(function(mid, cid) {
    System.register(mid, [cid], function (_export, _context) {
    return {
        setters: [function(_m) {
            var _exportObj = {};

            for (var _key in _m) {
              if (_key !== "default" && _key !== "__esModule") _exportObj[_key] = _m[_key];
            }
      
            _export(_exportObj);
        }],
        execute: function () { }
    };
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,